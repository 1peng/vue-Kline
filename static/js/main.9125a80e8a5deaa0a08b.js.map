{"version":3,"sources":["webpack:///./src/kline/js/mevent.js","webpack:///./src/kline/js/named_object.js","webpack:///./src/kline/js/plotters.js","webpack:///./src/kline/js/ctools.js","webpack:///./src/kline/js/cpoint.js","webpack:///./src/kline/js/ctool_manager.js","webpack:///./src/kline/js/data_sources.js","webpack:///./src/kline/js/util.js","webpack:///./src/kline/js/chart.js","webpack:///./src/kline/js/indicators.js","webpack:///./src/kline/js/chart_manager.js","webpack:///./src/kline/js/kline.js","webpack:///./src/kline/js/data_providers.js","webpack:///./src/kline/js/ranges.js","webpack:///./src/kline/js/cname.js","webpack:///./src/kline/js/areas.js","webpack:///./src/kline/js/themes.js","webpack:///./src/kline/js/control.js","webpack:///./src/kline/js/timeline.js","webpack:///./src/kline/js/layouts.js","webpack:///./src/kline/js/templates.js","webpack:///./src/kline/js/chart_settings.js","webpack:///./src/kline/js/exprs.js"],"names":["MEvent","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default","this","_handlers","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default","key","value","o","f","indexOf","push","obj","func","i","splice","s","g","a","c","length","e","NamedObject","name","_name","_nameObj","CName","getName","rect","startPt","endPt","firstPt","x","y","secondPt","xdiff","ydiff","Math","abs","top","bottom","k","right","left","Plotter","_NamedObject","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default","__proto__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default","call","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default","context","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","points","cnt","isChrome","dashLen","dashSolid","dX","dY","count","fill","sqrt","dashX","dashY","rects","w","h","closePath","str","measureText","width","fillText","navigator","userAgent","toLowerCase","match","BackgroundPlotter","_Plotter","_this2","_color","themes","Color","Background","mgr","ChartManager","instance","area","getArea","getAreaName","theme","getTheme","getFrameName","fillStyle","getColor","fillRect","getLeft","getTop","getWidth","getHeight","MainAreaBackgroundPlotter","_BackgroundPlotter","timeline","getTimeline","getDataSourceName","range","getRange","getRect","isChanged","isUpdated","first","getFirstIndex","last","getLastIndex","start","max","X","toColumnLeft","Width","getRight","Y","Height","RangeAreaBackgroundPlotter","_BackgroundPlotter2","areaName","substring","lastIndexOf","getNameObject","getCompAt","TimelineAreaBackgroundPlotter","_BackgroundPlotter3","CGridPlotter","_NamedObject2","clipped","save","clip","Grid0","gradations","getGradations","n","createHorzDashedLine","toY","restore","CandlestickPlotter","_NamedObject3","ds","getDataSource","getDataCount","dark","Util","isInstance","cW","getColumnWidth","iW","getItemWidth","toItemLeft","center","toItemCenter","strokePosRects","fillPosRects","fillUchRects","fillNegRects","data","getDataAt","high","low","open","close","iH","min","strokeStyle","Positive","createRectangles","Negative","CandlestickHLCPlotter","_Plotter2","data_sources","OHLCPlotter","_Plotter3","MainInfoPlotter","_Plotter4","font","getFont","Font","Default","textAlign","textBaseline","Text4","selIndex","getSelectedIndex","digits","getDecimalDigits","time","Date","date","lang","getFullYear","formatTime","getMonth","getDate","getHours","getMinutes","getLanguage","drawString","toFixed","prev","change","TextPositive","TextNegative","amplitude","dp","getDataProvider","undefined","indic","getIndicator","getOutputCount","out","getOutputAt","v","execute","isNaN","info","color","Indicator0","IndicatorPlotter","_NamedObject4","data_providers","outCount","style","getStyle","exprs","outputStyle","VolumeStick","drawVolumeStick","MACDStick","drawMACDStick","SARPoint","drawSARPoint","translate","Line","drawLines","startX","volume","toHeight","output","middle","strokeNegRects","prevMACD","NaN","MACD","r","endAngle","PI","Indicator3","arc","IndicatorInfoPlotter","_Plotter5","title","getParameterCount","getParameterAt","getValue","MinMaxPlotter","_NamedObject5","getInnerWidth","drawMark","getMinValue","getMinValueIndex","getMaxValue","getMaxValueIndex","index","arrowStart","arrowStop","_arrowStop","textStart","drawLine","fromFloat","TimelinePlotter","_Plotter6","timeInterval","TIME_INTERVAL","local_utc_diff","getTimezoneOffset","gridRects","getMiddle","utcDate","localDate","year","month","hour","minute","text","TP_DAY","toString","MonthConvert","strMinute","Text2","TP_HOUR","Grid1","TP_MINUTE","1","2","3","4","5","6","7","8","9","10","11","12","RangePlotter","_NamedObject6","floor","rangeName","getCenter","COrderGraphPlotter","_NamedObject7","_Draw_","Update","updateData","m_top","m_pArea","m_bottom","getBottom","m_left","m_right","all","getChart","_depthData","x_offset","y_offset","ask_tmp","bid_tmp","array","m_ask_si","amounts","m_Step","m_pRange","rate","m_bid_si","DrawBackground","UpdatePoints","FillBlack","DrawGradations","DrawLine","m_pTheme","m_mode","ask_bottom","bid_top","ask_gradient","createLinearGradient","addColorStop","PositiveDark","bid_gradient","NegativeDark","m_ask_points","m_bid_points","index_ask","ask_p_i","m_ask_ei","index0","index1","index_bid","ceil","bid_p_i","m_bid_ei","minRange","getOuterMinValue","maxRange","getOuterMaxValue","asks_si","asks_ei","bids_si","bids_ei","m_pMgr","ask_point","bid_point","ask_first_add","ask_last_add","bid_first_add","bid_last_add","unshift","shift","pop","ticker","_dataItems","Mark","LastVolumePlotter","_Plotter7","RangeMark","LastClosePlotter","_Plotter8","SelectionPlotter","_Plotter9","_drawingTool","DrawingTool","CrossCursor","Cursor","pos","getSelectedPosition","TimelineSelectionPlotter","_Plotter10","Grid3","strokeRect","second","getSeconds","strMonth","strDate","strHour","strSecond","Kline","RangeSelectionPlotter","_NamedObject8","getSelectedValue","Number","MAX_VALUE","createPolygon","Grid4","Text3","CToolPlotter","_NamedObject9","toolObject","_this22","pArea","areaPos","crossPt","normalSize","selectedSize","cursorLen","cursorGapLen","drawCrossCursor","LineColorNormal","tempPt","getPoint","getPosXY","radius","centerX","centerY","CircleColorFill","CircleColorStroke","ctrlPtsNum","drawCircle","ctrlPts","getState","CPoint","state","Highlight","startPoint","endPoint","fiboFansSequence","stageY","tempStartPt","tempEndPt","drawRayLines","getAreaPos","getRectCrossPt","tempCrossPt","pt1","pt2","pow","draw","drawCtrlPt","LineColorSelected","highlightCtrlPt","DrawStraightLinesPlotter","_CToolPlotter","_this23","Array","getCtrlPts","updateCtrlPtPos","DrawSegLinesPlotter","_CToolPlotter2","_this24","DrawRayLinesPlotter","_CToolPlotter3","_this25","DrawArrowLinesPlotter","_CToolPlotter4","_this26","arrowSizeRatio","arrowSize","len","lenBetweenPts","vectorA","vectorAautho","Aautho","origin","arrowEndPt","drawArrow","DrawHoriStraightLinesPlotter","_CToolPlotter5","_this27","DrawHoriRayLinesPlotter","_CToolPlotter6","_this28","DrawHoriSegLinesPlotter","_CToolPlotter7","_this29","DrawVertiStraightLinesPlotter","_CToolPlotter8","_this30","DrawPriceLinesPlotter","_CToolPlotter9","_this31","getPosIV","ParallelLinesPlotter","_CToolPlotter10","_this32","vectorB","paraStartPoint","paraEndPoint","DrawBiParallelLinesPlotter","_ParallelLinesPlotter","_this33","getParaPt","crossPt0","crossPt1","DrawBiParallelRayLinesPlotter","_ParallelLinesPlotter2","_this34","DrawTriParallelLinesPlotter","_ParallelLinesPlotter3","_this35","para1EndPoint","para2EndPoint","para2StartPoint","crossPt2","BandLinesPlotter","_CToolPlotter11","_this36","ctools","Draw","startPtValue","endPtValue","fiboSequence","stageYvalue","drawLinesAndInfo","DrawFibRetracePlotter","_BandLinesPlotter","_this37","DrawBandLinesPlotter","_BandLinesPlotter2","_this38","DrawFibFansPlotter","_CToolPlotter12","_this39","drawFibRayLines","CDynamicLinePlotter","_NamedObject10","_this40","flag","_overlayContext","pTDP","getToolObjectCount","getToolObject","BeforeDraw","getPlotter","drawCursor","updateDraw","AfterDraw","finishDraw","sel","getSelectToolObjcet","highlight","CToolObject","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default","_this","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default","drawer","step","__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default","ppMgr","ppCDS","ppTimeline","ppArea","ppRange","pMgr","pCDS","pTimeline","pRange","pObj","getChartObjects","point","isValidMouseXY","setBeforeDrawPos","setDrawPos","setAfterDrawPos","setState","prototype","isSelected","oldx","oldy","_width","_old_x","toIndex","_old_y","toValue","_new_x","_new_y","_dif_x","_dif_y","setPosXY","Show","Hide","setNormalMode","isFind","select","point1","point2","point3","xa","ya","xb","yb","xc","yc","a1","a2","b1","b2","sx","sy","ex","ey","CBiToolObject","_CToolObject","addPoint","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_get___default","CTriToolObject","_CToolObject2","_this3","CBandLineObject","_CBiToolObject","_this4","plotters","fibSequence","stage_y","CBiParallelLineObject","_CTriToolObject","_this5","_0x","_0y","_1x","_1y","_2x","_2y","r1","r2","calcGap","CBiParallelRayLineObject","_CTriToolObject2","_this6","CFibFansObject","_CBiToolObject2","_this7","fibFansSequence","b","calcDistance","CFibRetraceObject","_CBiToolObject3","_this8","CHoriRayLineObject","_CBiToolObject4","_this9","setPosXYNoSnap","CHoriSegLineObject","_CBiToolObject5","_this10","CHoriStraightLineObject","_CBiToolObject6","_this11","CRayLineObject","_CBiToolObject7","_this12","CSegLineObject","_CBiToolObject8","_this13","isWithRect","CStraightLineObject","_CBiToolObject9","_this14","CTriParallelLineObject","_CTriToolObject3","_this15","_3x","_3y","_ri","_rj","r3","CVertiStraightLineObject","_CBiToolObject10","_this16","CPriceLineObject","_CSegLineObject","_this17","CArrowLineObject","_CSegLineObject2","_this18","result","snapValue","setPosIV","xy","pData","pDataPre","candleStickStyle","getChartStyle","dif_open","dif_high","dif_low","dif_close","CToolManager","classCallCheck_default","possibleConstructorReturn_default","get_prototype_of_default","selectedObject","toolObjects","inherits_default","createClass_default","curr","acceptMouseMoveEvent","unselect","mouseDownMove","acceptMouseDownEvent","acceptMouseDownMoveEvent","acceptMouseUpEvent","DataSource","_updateMode","mode","UpdateMode","DoNothing","Refresh","Append","MainDataSource","_DataSource","_erasedCount","_decimalDigits","toolManager","_updatedCount","_appendedCount","lastIndex","lastItem","setUpdateMode","limit","d","calcDecimalDigits","id","selecedObject","addToolObject","delCurrentObject","getCurrentObject","getSelectedObject","delSelectedObject","fractionDigits","clazz","Chart","_data","_charStyle","asks_count","bids_count","strIsLine","_range","_symbol","symbol","symbolName","strPeriod","_contract_unit","_money_type","toUpperCase","setTitle","updateDataAndDisplay","setCurrentDataSource","chartMgr","getLastDate","requestParam","Control","setHttpRequestParam","requestData","redraw","contractUnit","moneyType","period","periodMap","type","stompClient","ws","readyState","subscribed","unsubscribe","subscribe","subscribePath","subscribeCallback","onRangeChangeFunc","asks","bids","amount","indicName","_mainIndicator","removeMainIndicator","setMainIndicator","getIndicatorAreaName","removeIndicator","Template","createIndicatorChartComps","setIndicator","addIndicator","zh-cn","line","1min","5min","15min","30min","1hour","1day","1week","3min","2hour","4hour","6hour","12hour","3day","en-us","zh-tw","Indicator","_exprEnv","_rid","_params","_assigns","_outputs","expr","setFirstIndex","clear","reserve","setDataSource","set","assign","alert","params","setValue","HLCIndicator","_Indicator","M1","addParameter","addOutput","None","Indicator1","MAIndicator","_Indicator2","M2","M3","M4","M5","M6","EMAIndicator","_Indicator3","VOLUMEIndicator","_Indicator4","VOLUME","MACDIndicator","_Indicator5","SHORT","LONG","MID","DIF","DEA","DMIIndicator","_Indicator6","N","MM","MTR","addAssign","HD","LD","DMP","DMM","PDI","MDI","ADX","ADXR","DMAIndicator","_Indicator7","N1","N2","M","DIFMA","TRIXIndicator","_Indicator8","TRIX","MATRIX","BRARIndicator","_Indicator9","REF_CLOSE_1","BR","AR","VRIndicator","_Indicator10","TH","TL","TQ","VR","MAVR","OBVIndicator","_Indicator11","VA","OBV","MAOBV","EMVIndicator","_Indicator12","EMV","MAEMV","RSIIndicator","_Indicator13","N3","LC","CLOSE_LC","WRIndicator","_Indicator14","HHV","HHV1","LLV","LLV1","WR1","WR2","SARIndicator","_Indicator15","MIN","STEP","MAX","KDJIndicator","_Indicator16","RSV","K","D","J","ROCIndicator","_Indicator17","REF_CLOSE_N","ROC","MAROC","MTMIndicator","_Indicator18","MTM","MTMMA","BOLLIndicator","_Indicator19","_this19","STD_CLOSE_N","BOLL","UB","LB","PSYIndicator","_Indicator20","_this20","PSY","PSYMA","STOCHRSIIndicator","_Indicator21","_this21","P1","P2","RSI","STOCHRSI","require","_dataSources","_dataSourceCache","_dataProviders","_frames","_areas","_timelines","_ranges","_plotters","_themes","_titles","_frameMousePos","_dsChartStyle","_dragStarted","_oldX","_fakeIndicators","_captureMouseWheelDirectly","_chart","defaultFrame","_beforeDrawingTool","_language","_mainCanvas","_overlayCanvas","_mainContext","created","layer","refresh","getFrame","setChanged","layout","height","drawMain","clearRect","drawOverlay","canvas","getContext","$","bind","mouseWheel","unbind","nouseParam","templates","loadTemplate","paramTool","setRunningMode","frameName","themeName","_themeName","setTheme","dsName","chartStyle","dpName","plotterName","plotter","setDataProvider","ChartSettings","get","charts","mIndic","setPlotter","indicators","removePlotter","removeClass","parent","addClass","showCursor","hideCursor","pds","curr_o","getCurrentToolObject","delToolObject","ArrowLine","BandLine","BiParallelLine","BiParallelRayLine","DrawFibFans","DrawFibRetrace","DrawLines","HoriRayLine","HoriSegLine","HoriStraightLine","PriceLine","RayLine","SegLine","StraightLine","TriParallelLine","VertiStraightLine","dsAlias","cached","getCachedDataSource","setCachedDataSource","forceRefresh","frame","px","py","plotterNames","drawArea","it","areas","drawAreaMain","setUpdated","drawGrid","drawAreaOverlay","update","getUpdateMode","dpNames","updateRange","getMaxItemCount","measure","onLayout","ee","selectAt","_highlightedFrame","hiArea","getHighlightedArea","scale","cursor","exceptTimeline","ret","drag","setFrameMousePos","hideCrossCursor","clearHighlight","_capturingMouseArea","contains","onMouseMove","move","onMouseLeave","onMouseDown","onMouseUp","_selectedFrame","pDPTool","delSelectToolObject","currentObject","notLoadSettings","ranges","setParameters","indics","indicDpName","indicDp","createIndicatorAndRange","removeDataProvider","removeRange","setRange","setPaddingTop","setPaddingBottom","setMinInterval","rangeAreaName","rangeArea","tableLayout","removeArea","getAreaCount","getAreaAt","option","element","timer","buttonDown","init","isSized","url","intervalTime","debug","language","depthWidth","01w","03d","01d","12h","06h","04h","02h","01h","30m","15m","05m","03m","01m","tagMapPeriod","1w","3d","1d","6h","4h","2h","1h","5m","3m","1m","onResize","onLangChange","onSymbolChange","onThemeChange","onRangeChange","onRequestData","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default","view","find","each","attr","setInterval","refreshFunction","registerMouseEvent","bindCanvas","document","getElementById","refreshTemplate","onSize","readCookie","setLanguage","setSymbol","css","visibility","switchSymbol","onSymbolChangeFunc","switchTheme","chartSwitchLanguage","console","log","param","callback","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","ready","cancelBubble","returnValue","preventDefault","stopPropagation","mouseover","container","dropdown","next","containerLeft","offset","titleLeft","containerWidth","titleWidth","margin-left","mouseout","click","html","nextElementSibling","val","switchPeriod","hasClass","switchDepth","switchTools","children","switchIndic","innerHTML","setChartStyle","keyup","keyCode","deleteToolObject","mousemove","target","getBoundingClientRect","clientX","clientY","mouseleave","mouseup","which","mousedown","valueArray","parseInt","setIndicatorParameters","getIndicatorParameters","cookieArray","parents","getDefaultValue","on","position","zIndex","overflow","DataProvider","_minValue","_maxValue","_minValueIndex","_maxValueIndex","minmax","firstIndexes","minmaxes","indexes","minIndex","maxIndex","getMinMaxAt","calcRange","MainDataProvider","_DataProvider","_candlestickDS","IndicatorDataProvider","_DataProvider2","apply","arguments","_indicator","getAppendedCount","getUpdatedCount","valid","Range","_updated","_outerMinValue","_outerMaxValue","_ratio","_top","_bottom","_paddingTop","_paddingBottom","_minInterval","_selectedPosition","_selectedValue","_gradations","p","Infinity","preSetRange","minValue","maxValue","updateGradations","H","getMinInterval","m","interval","calcInterval","PositiveRange","_Range","ZeroBasedPositiveRange","_Range2","MainRange","_Range3","dIndex","getMaxIndex","ZeroCenteredRange","_Range4","PercentageRange","_Range5","_names","_comps","comps","split","dotNum","ChartArea","_left","_right","_changed","_highlighted","_pressed","_selected","Measuring","_dockStyle","dockStyle","_measuredWidth","_measuredHeight","raise","setMeasuredDimension","forceChange","DockStyle","Left","Top","Right","Bottom","Fill","MainArea","_ChartArea","_oldY","_passMoveEventToToolManager","onToolMouseDrag","onToolMouseMove","showCrossCursor","startMove","onToolMouseDown","onToolMouseUp","IndicatorArea","_ChartArea2","MainRangeArea","_ChartArea3","IndicatorRangeArea","_ChartArea4","TimelineArea","_ChartArea5","ChartAreaGroup","_ChartArea6","_highlightedArea","_selectedArea","_gridColor","getSelectedArea","Theme","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default","_colors","_fonts","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default","theme_color_id","theme_font_id","Unchanged","Indicator2","Indicator4","Indicator5","Grid2","Text0","Text1","DarkTheme","_Theme","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default","LightTheme","_Theme2","refreshCounter","num","window","clearInterval","refreshHandler","showLoading","clearTimeout","onRequestDataFunc","res","success","requestSuccessHandler","setTimeout","chart","eval","updateDataRes","lines","tmp","depths","depthStatus","updateDepth","clearRefreshCounter","TwoSecondThread","switchSymbolSelected","indicsStatus","setThemeName","since","DefaultTemplate","langTmp","replace","onLangChangeFunc","innerWidth","chartWidth","innerHeight","toolBar","toolPanel","canvasGroup","tabBar","toolPanelShown","display","tabBarShown","toolBarRect","toolPanelRect","tabBarRect","canvasGroupRect","mainCanvas","overlayCanvas","dlgSettings","dlgLoading","domElemCache","rowTheme","rowTools","rowIndic","symbolTitle","periodsVert","periodsHorz","showIndic","showTools","selectTheme","dropDownSettings","periodsVertNW","offsetWidth","periodsHorzNW","showIndicNW","showToolsNW","selectThemeNW","dropDownSettingsW","append","after","before","onResizeFunc","delta","content","submit","onThemeChangeFunc","calcPeriodWeight","setCurrentPeriod","reset","periodWeight","period_weight","Timeline","_innerLeft","_innerWidth","_firstColumnLeft","_scale","_lastScale","_maxItemCount","_maxIndex","_firstIndex","_selectedIndex","_savedFirstIndex","itemWidth","spaceWidth","getSpaceWidth","maxItemCount","oldFirstIndex","oldMaxItemCount","newMaxItemCount","validateFirstIndex","calcFirstIndexAlignRight","calcColumnCount","newFirstIndex","calcFirstIndex","focusedIndex","round","calcFirstColumnLeft","firstIndex","lastFirst","PADDING_LEFT","PADDING_RIGHT","updateMaxItemCount","getItemLeftOffset","getItemCenterOffset","validateSelectedIndex","oldMaxIndex","erasedCount","getErasedCount","isLatestShown","TableLayout","_areas$ChartAreaGroup","_nextRowId","_focusedRowIndex","rowH","prevH","totalH","rows","rh","nh","minRW","maxRW","rw","iArea","iIndex","iDp","minW","getRequiredWidth","maxW","lw","get_default","getMeasuredWidth","t","getMeasuredHeight","getCaptureMouseWheelDirectly","upper","lower","upperBottom","_oldUpperBottom","lowerTop","_oldLowerTop","setBottom","setTop","areaHeight","DockableLayout","_areas$ChartAreaGroup2","getDockStyle","createFunc","createMainChartComps","createTimelineComps","setArea","addArea","getNextRowId","rowIndex","heights","setTimeline","_Template","settings","unloadTemplate","createDataSource","createCandlestickDataSource","layouts","setFrame","setGridColor","setDockStyle","addHandler","TemplateMeasuringHandler","onMeasuring","createTableComps","sender","args","ver","load","checkVersion","_indic_param","_value","getParameters","j","_frame","cookie","end","json","unescape","JSON","parse","exdate","setDate","escape","toGMTString","ExprEnv","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_createClass___default","_ds","inst","env","Expr","rid","OpenExpr","_Expr","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_inherits___default","HighExpr","_Expr2","LowExpr","_Expr3","CloseExpr","_Expr4","VolumeExpr","_Expr5","ConstExpr","_Expr6","ParameterExpr","_Expr7","defaultValue","_defaultValue","OpAExpr","_Expr8","_exprA","OpABExpr","_Expr9","_exprB","OpABCExpr","_Expr10","_exprC","OpABCDExpr","_Expr11","_exprD","NegExpr","_OpAExpr","AddExpr","_OpABExpr","SubExpr","_OpABExpr2","MulExpr","_OpABExpr3","DivExpr","_OpABExpr4","GtExpr","_OpABExpr5","LtExpr","_OpABExpr6","GeExpr","_OpABExpr7","EqExpr","_OpABExpr8","LeExpr","_OpABExpr9","MaxExpr","_OpABExpr10","AbsExpr","_OpAExpr2","RefExpr","_OpABExpr11","_offset","AndExpr","_OpABExpr12","IfExpr","_OpABExpr13","OrExpr","_OpABCExpr","AssignExpr","_OpAExpr3","_buf","OutputExpr","_AssignExpr","_style","RangeOutputExpr","_OutputExpr","RangeExpr","_OpABExpr14","initRange","rA","resultA","calcResult","HhvExpr","_RangeExpr","LlvExpr","_RangeExpr2","CountExpr","_RangeExpr3","SumExpr","_RangeExpr4","StdExpr","_RangeExpr5","stdData","_stdBuf","resultMA","sum","MaExpr","_RangeExpr6","EmaExpr","_RangeExpr7","_alpha","ExpmemaExpr","_EmaExpr","SmaExpr","_RangeExpr8","_mul","SarExpr","_OpABCDExpr","_this41","_min","_step","_max","exprEnv","longPos","sar","ep","af","l"],"mappings":"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","file":"static/js/main.9125a80e8a5deaa0a08b.js","sourcesContent":["export class MEvent {\n\n    constructor() {\n        this._handlers = [];\n    }\n\n    addHandler(o, f) {\n        if (this.indexOf(o, f) < 0)\n            this._handlers.push({obj: o, func: f});\n    }\n\n    removeHandler(o, f) {\n        let i = this.indexOf(o, f);\n        if (i >= 0)\n            this._handlers.splice(i, 1);\n    }\n\n    raise(s, g) {\n        let a = this._handlers;\n        let e, i, c = a.length;\n        for (i = 0; i < c; i++) {\n            e = a[i];\n            e.func(s, g);\n        }\n    }\n\n    indexOf(o, f) {\n        let a = this._handlers;\n        let e, i, c = a.length;\n        for (i = 0; i < c; i++) {\n            e = a[i];\n            if (o === e.obj && f === e.func)\n                return i;\n        }\n        return -1;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/mevent.js","import {CName} from './cname'\n\nexport class NamedObject {\n\n    constructor(name) {\n        this._name = name;\n        this._nameObj = new CName(name);\n    }\n\n    getFrameName() {\n        return this._nameObj.getName(0);\n    }\n\n    getDataSourceName() {\n        return this._nameObj.getName(1);\n    }\n\n    getAreaName() {\n        return this._nameObj.getName(2);\n    }\n\n    getName() {\n        return this._nameObj.getName(-1);\n    }\n\n    getNameObject() {\n        return this._nameObj;\n    }\n\n    getRectCrossPt(rect, startPt, endPt) {\n        let crossPt;\n        let firstPt = {x: -1, y: -1};\n        let secondPt = {x: -1, y: -1};\n        let xdiff = endPt.x - startPt.x;\n        let ydiff = endPt.y - startPt.y;\n        if (Math.abs(xdiff) < 2) {\n            firstPt = {x: startPt.x, y: rect.top};\n            secondPt = {x: endPt.x, y: rect.bottom};\n            crossPt = [firstPt, secondPt];\n            return crossPt;\n        }\n        let k = ydiff / xdiff;\n        secondPt.x = rect.right;\n        secondPt.y = startPt.y + (rect.right - startPt.x) * k;\n        firstPt.x = rect.left;\n        firstPt.y = startPt.y + (rect.left - startPt.x) * k;\n        crossPt = [firstPt, secondPt];\n        return crossPt;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/named_object.js","import Kline from './kline'\nimport {NamedObject} from './named_object'\nimport {ChartManager} from './chart_manager'\nimport {Util} from './util'\nimport {CPoint} from './cpoint'\nimport * as exprs from './exprs'\nimport * as themes from './themes'\nimport * as data_providers from './data_providers'\nimport * as data_sources from './data_sources'\nimport * as ctools from './ctools'\n\nexport class Plotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    static drawLine(context, x1, y1, x2, y2) {\n        context.beginPath();\n        context.moveTo((x1 << 0) + 0.5, (y1 << 0) + 0.5);\n        context.lineTo((x2 << 0) + 0.5, (y2 << 0) + 0.5);\n        context.stroke();\n    }\n\n    static drawLines(context, points) {\n        let i, cnt = points.length;\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (i = 1; i < cnt; i++)\n            context.lineTo(points[i].x, points[i].y);\n        if (Plotter.isChrome) {\n            context.moveTo(points[0].x, points[0].y);\n            for (i = 1; i < cnt; i++)\n                context.lineTo(points[i].x, points[i].y);\n        }\n        context.stroke();\n    }\n\n    static drawDashedLine(context, x1, y1, x2, y2, dashLen, dashSolid) {\n        if (dashLen < 2) {\n            dashLen = 2;\n        }\n        let dX = x2 - x1;\n        let dY = y2 - y1;\n        context.beginPath();\n        if (dY === 0) {\n            let count = (dX / dashLen + 0.5) << 0;\n            for (let i = 0; i < count; i++) {\n                context.rect(x1, y1, dashSolid, 1);\n                x1 += dashLen;\n            }\n            context.fill();\n        } else {\n            let count = (Math.sqrt(dX * dX + dY * dY) / dashLen + 0.5) << 0;\n            dX = dX / count;\n            dY = dY / count;\n            let dashX = dX * dashSolid / dashLen;\n            let dashY = dY * dashSolid / dashLen;\n            for (let i = 0; i < count; i++) {\n                context.moveTo(x1 + 0.5, y1 + 0.5);\n                context.lineTo(x1 + 0.5 + dashX, y1 + 0.5 + dashY);\n                x1 += dX;\n                y1 += dY;\n            }\n            context.stroke();\n        }\n    }\n\n    static createHorzDashedLine(context, x1, x2, y, dashLen, dashSolid) {\n        if (dashLen < 2) {\n            dashLen = 2;\n        }\n        let dX = x2 - x1;\n        let count = (dX / dashLen + 0.5) << 0;\n        for (let i = 0; i < count; i++) {\n            context.rect(x1, y, dashSolid, 1);\n            x1 += dashLen;\n        }\n    }\n\n    static createRectangles(context, rects) {\n        context.beginPath();\n        let e, i, cnt = rects.length;\n        for (i = 0; i < cnt; i++) {\n            e = rects[i];\n            context.rect(e.x, e.y, e.w, e.h);\n        }\n    }\n\n    static createPolygon(context, points) {\n        context.beginPath();\n        context.moveTo(points[0].x + 0.5, points[0].y + 0.5);\n        let i, cnt = points.length;\n        for (i = 1; i < cnt; i++)\n            context.lineTo(points[i].x + 0.5, points[i].y + 0.5);\n        context.closePath();\n    }\n\n    static drawString(context, str, rect) {\n        let w = context.measureText(str).width;\n        if (rect.w < w) {\n            return false;\n        }\n        context.fillText(str, rect.x, rect.y);\n        rect.x += w;\n        rect.w -= w;\n        return true;\n    }\n\n}\nPlotter.isChrome = (navigator.userAgent.toLowerCase().match(/chrome/) !== null);\n\nexport class BackgroundPlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n        this._color = themes.Theme.Color.Background;\n    }\n\n    getColor() {\n        return this._color;\n    }\n\n    setColor(c) {\n        this._color = c;\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let theme = mgr.getTheme(this.getFrameName());\n        context.fillStyle = theme.getColor(this._color);\n        context.fillRect(area.getLeft(), area.getTop(), area.getWidth(), area.getHeight());\n    }\n\n}\n\nexport class MainAreaBackgroundPlotter extends BackgroundPlotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let range = mgr.getRange(this.getAreaName());\n        let theme = mgr.getTheme(this.getFrameName());\n        let rect = area.getRect();\n        if (!area.isChanged() && !timeline.isUpdated() && !range.isUpdated()) {\n            let first = timeline.getFirstIndex();\n            let last = timeline.getLastIndex() - 2;\n            let start = Math.max(first, last);\n            rect.X = timeline.toColumnLeft(start);\n            rect.Width = area.getRight() - rect.X;\n        }\n        context.fillStyle = theme.getColor(this._color);\n        context.fillRect(rect.X, rect.Y, rect.Width, rect.Height);\n    }\n\n}\n\nexport class RangeAreaBackgroundPlotter extends BackgroundPlotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let areaName = this.getAreaName();\n        let area = mgr.getArea(areaName);\n        let range = mgr.getRange(areaName.substring(0, areaName.lastIndexOf(\"Range\")));\n        let isMainRange = range.getNameObject().getCompAt(2) === \"main\";\n        if (!isMainRange && !area.isChanged() && !range.isUpdated()) {\n            return;\n        }\n        let theme = mgr.getTheme(this.getFrameName());\n        context.fillStyle = theme.getColor(this._color);\n        context.fillRect(area.getLeft(), area.getTop(), area.getWidth(), area.getHeight());\n    }\n\n}\n\nexport class TimelineAreaBackgroundPlotter extends BackgroundPlotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        if (!area.isChanged() && !timeline.isUpdated())\n            return;\n        let theme = mgr.getTheme(this.getFrameName());\n        context.fillStyle = theme.getColor(this._color);\n        context.fillRect(area.getLeft(), area.getTop(), area.getWidth(), area.getHeight());\n    }\n\n}\n\nexport class CGridPlotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let range = mgr.getRange(this.getAreaName());\n        let clipped = false;\n        if (!area.isChanged() && !timeline.isUpdated() && !range.isUpdated()) {\n            let first = timeline.getFirstIndex();\n            let last = timeline.getLastIndex();\n            let start = Math.max(first, last - 2);\n            let left = timeline.toColumnLeft(start);\n            context.save();\n            context.rect(left, area.getTop(), area.getRight() - left, area.getHeight());\n            context.clip();\n            clipped = true;\n        }\n        let theme = mgr.getTheme(this.getFrameName());\n        context.fillStyle = theme.getColor(themes.Theme.Color.Grid0);\n        context.beginPath();\n        let dashLen = 4,\n            dashSolid = 1;\n        if (Plotter.isChrome) {\n            dashLen = 4;\n            dashSolid = 1;\n        }\n        let gradations = range.getGradations();\n        for (let n in gradations) {\n            Plotter.createHorzDashedLine(context, area.getLeft(), area.getRight(), range.toY(gradations[n]), dashLen, dashSolid);\n        }\n        context.fill();\n        if (clipped) {\n            context.restore();\n        }\n    }\n\n}\n\nexport class CandlestickPlotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (ds.getDataCount() < 1) {\n            return;\n        }\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let range = mgr.getRange(this.getAreaName());\n        if (range.getRange() === 0.0) {\n            return;\n        }\n        let theme = mgr.getTheme(this.getFrameName());\n        let dark = Util.isInstance(theme, themes.DarkTheme);\n        let first = timeline.getFirstIndex();\n        let last = timeline.getLastIndex();\n        let start;\n        if (area.isChanged() || timeline.isUpdated() || range.isUpdated())\n            start = first;\n        else\n            start = Math.max(first, last - 2);\n        let cW = timeline.getColumnWidth();\n        let iW = timeline.getItemWidth();\n        let left = timeline.toItemLeft(start);\n        let center = timeline.toItemCenter(start);\n        let strokePosRects = [];\n        let fillPosRects = [];\n        let fillUchRects = [];\n        let fillNegRects = [];\n        for (let i = start; i < last; i++) {\n            let data = ds.getDataAt(i);\n            let high = range.toY(data.high);\n            let low = range.toY(data.low);\n            let open = data.open;\n            let close = data.close;\n            if (close > open) {\n                let top = range.toY(close);\n                let bottom = range.toY(open);\n                let iH = Math.max(bottom - top, 1);\n                if (iH > 1 && iW > 1 && dark)\n                    strokePosRects.push({x: left + 0.5, y: top + 0.5, w: iW - 1, h: iH - 1});\n                else\n                    fillPosRects.push({x: left, y: top, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n                if (data.high > close) {\n                    high = Math.min(high, top - 1);\n                    fillPosRects.push({x: center, y: high, w: 1, h: top - high});\n                }\n                if (open > data.low) {\n                    low = Math.max(low, bottom + 1);\n                    fillPosRects.push({x: center, y: bottom, w: 1, h: low - bottom});\n                }\n            } else if (close === open) {\n                let top = range.toY(close);\n                fillUchRects.push({x: left, y: top, w: Math.max(iW, 1), h: 1});\n                if (data.high > close)\n                    high = Math.min(high, top - 1);\n                if (open > data.low)\n                    low = Math.max(low, top + 1);\n                if (high < low)\n                    fillUchRects.push({x: center, y: high, w: 1, h: low - high});\n            } else {\n                let top = range.toY(open);\n                let bottom = range.toY(close);\n                let iH = Math.max(bottom - top, 1);\n                fillNegRects.push({x: left, y: top, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n                if (data.high > open)\n                    high = Math.min(high, top - 1);\n                if (close > data.low)\n                    low = Math.max(low, bottom + 1);\n                if (high < low)\n                    fillNegRects.push({x: center, y: high, w: 1, h: low - high});\n            }\n            left += cW;\n            center += cW;\n        }\n        if (strokePosRects.length > 0) {\n            context.strokeStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, strokePosRects);\n            context.stroke();\n        }\n        if (fillPosRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, fillPosRects);\n            context.fill();\n        }\n        if (fillUchRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, fillUchRects);\n            context.fill();\n        }\n        if (fillNegRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, fillNegRects);\n            context.fill();\n        }\n    }\n\n}\n\nexport class CandlestickHLCPlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (!Util.isInstance(ds, data_sources.MainDataSource) || ds.getDataCount() < 1) {\n            return;\n        }\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let range = mgr.getRange(this.getAreaName());\n        if (range.getRange() === 0.0) {\n            return;\n        }\n        let theme = mgr.getTheme(this.getFrameName());\n        let dark = Util.isInstance(theme, themes.DarkTheme);\n        let first = timeline.getFirstIndex();\n        let last = timeline.getLastIndex();\n        let start;\n        if (area.isChanged() || timeline.isUpdated() || range.isUpdated()) {\n            start = first;\n        } else {\n            start = Math.max(first, last - 2);\n        }\n        let cW = timeline.getColumnWidth();\n        let iW = timeline.getItemWidth();\n        let left = timeline.toItemLeft(start);\n        let center = timeline.toItemCenter(start);\n        let strokePosRects = [];\n        let fillPosRects = [];\n        let fillUchRects = [];\n        let fillNegRects = [];\n        for (let i = start; i < last; i++) {\n            let data = ds.getDataAt(i);\n            let high = range.toY(data.high);\n            let low = range.toY(data.low);\n            let open = data.open;\n            if (i > 0) {\n                open = ds.getDataAt(i - 1).close;\n            }\n            let close = data.close;\n            if (close > open) {\n                let top = range.toY(close);\n                let bottom = range.toY(open);\n                let iH = Math.max(bottom - top, 1);\n                if (iH > 1 && iW > 1 && dark) {\n                    strokePosRects.push({x: left + 0.5, y: top + 0.5, w: iW - 1, h: iH - 1});\n                } else {\n                    fillPosRects.push({x: left, y: top, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n                }\n                if (data.high > close) {\n                    high = Math.min(high, top - 1);\n                    fillPosRects.push({x: center, y: high, w: 1, h: top - high});\n                }\n                if (open > data.low) {\n                    low = Math.max(low, bottom + 1);\n                    fillPosRects.push({x: center, y: bottom, w: 1, h: low - bottom});\n                }\n            } else if (close === open) {\n                let top = range.toY(close);\n                fillUchRects.push({x: left, y: top, w: Math.max(iW, 1), h: 1});\n                if (data.high > close) {\n                    high = Math.min(high, top - 1);\n                }\n                if (open > data.low) {\n                    low = Math.max(low, top + 1);\n                }\n                if (high < low) {\n                    fillUchRects.push({x: center, y: high, w: 1, h: low - high});\n                }\n            } else {\n                let top = range.toY(open);\n                let bottom = range.toY(close);\n                let iH = Math.max(bottom - top, 1);\n                fillNegRects.push({x: left, y: top, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n                if (data.high > open) {\n                    high = Math.min(high, top - 1);\n                }\n                if (close > data.low) {\n                    low = Math.max(low, bottom + 1);\n                }\n                if (high < low) {\n                    fillNegRects.push({x: center, y: high, w: 1, h: low - high});\n                }\n            }\n            left += cW;\n            center += cW;\n        }\n        if (strokePosRects.length > 0) {\n            context.strokeStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, strokePosRects);\n            context.stroke();\n        }\n        if (fillPosRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, fillPosRects);\n            context.fill();\n        }\n        if (fillUchRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, fillUchRects);\n            context.fill();\n        }\n        if (fillNegRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, fillNegRects);\n            context.fill();\n        }\n    }\n\n}\n\nexport class OHLCPlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (!Util.isInstance(ds, data_sources.MainDataSource) || ds.getDataCount() < 1) {\n            return;\n        }\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let range = mgr.getRange(this.getAreaName());\n        if (range.getRange() === 0.0) {\n            return;\n        }\n        let theme = mgr.getTheme(this.getFrameName());\n        let first = timeline.getFirstIndex();\n        let last = timeline.getLastIndex();\n        let start;\n        if (area.isChanged() || timeline.isUpdated() || range.isUpdated()) {\n            start = first;\n        } else {\n            start = Math.max(first, last - 2);\n        }\n        let cW = timeline.getColumnWidth();\n        let iW = timeline.getItemWidth() >> 1;\n        let left = timeline.toItemLeft(start);\n        let center = timeline.toItemCenter(start);\n        let right = left + timeline.getItemWidth();\n        let fillPosRects = [];\n        let fillUchRects = [];\n        let fillNegRects = [];\n        for (let i = start; i < last; i++) {\n            let data = ds.getDataAt(i);\n            let high = range.toY(data.high);\n            let low = range.toY(data.low);\n            let iH = Math.max(low - high, 1);\n            if (data.close > data.open) {\n                let top = range.toY(data.close);\n                let bottom = range.toY(data.open);\n                fillPosRects.push({x: center, y: high, w: 1, h: iH});\n                fillPosRects.push({x: left, y: top, w: iW, h: 1});\n                fillPosRects.push({x: center, y: bottom, w: iW, h: 1});\n            } else if (data.close === data.open) {\n                let y = range.toY(data.close);\n                fillUchRects.push({x: center, y: high, w: 1, h: iH});\n                fillUchRects.push({x: left, y: y, w: iW, h: 1});\n                fillUchRects.push({x: center, y: y, w: iW, h: 1});\n            } else {\n                let top = range.toY(data.open);\n                let bottom = range.toY(data.close);\n                fillNegRects.push({x: center, y: high, w: 1, h: iH});\n                fillNegRects.push({x: left, y: top, w: iW, h: 1});\n                fillNegRects.push({x: center, y: bottom, w: iW, h: 1});\n            }\n            left += cW;\n            center += cW;\n            right += cW;\n        }\n        if (fillPosRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, fillPosRects);\n            context.fill();\n        }\n        if (fillUchRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, fillUchRects);\n            context.fill();\n        }\n        if (fillNegRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, fillNegRects);\n            context.fill();\n        }\n    };\n\n}\n\nexport class MainInfoPlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        let theme = mgr.getTheme(this.getFrameName());\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textAlign = \"left\";\n        context.textBaseline = \"top\";\n        context.fillStyle = theme.getColor(themes.Theme.Color.Text4);\n        let rect = {\n            x: area.getLeft() + 4,\n            y: area.getTop() + 2,\n            w: area.getWidth() - 8,\n            h: 20\n        };\n        let selIndex = timeline.getSelectedIndex();\n        if (selIndex < 0)\n            return;\n        let data = ds.getDataAt(selIndex);\n        let digits = ds.getDecimalDigits();\n        let time = new Date(data.date);\n        let year = time.getFullYear();\n        let month = Util.formatTime(time.getMonth() + 1);\n        let date = Util.formatTime(time.getDate());\n        let hour = Util.formatTime(time.getHours());\n        let minute = Util.formatTime(time.getMinutes());\n        let lang = mgr.getLanguage();\n        if (lang === \"zh-cn\") {\n            // if (!Plotter.drawString(context, '时间: ' +\n            //         year + '-' + month + '-' + date + '  ' + hour + ':' + minute, rect))\n            //     return;\n            if (!Plotter.drawString(context, '  开: ' + data.open.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  高: ' + data.high.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  低: ' + data.low.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  收: ' + data.close.toFixed(digits), rect))\n                return;\n        } else if (lang === \"en-us\") {\n            // if (!Plotter.drawString(context, 'DATE: ' +\n            //         year + '-' + month + '-' + date + '  ' + hour + ':' + minute, rect))\n            //     return;\n            if (!Plotter.drawString(context, '  O: ' + data.open.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  H: ' + data.high.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  L: ' + data.low.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  C: ' + data.close.toFixed(digits), rect))\n                return;\n        } else if (lang === \"zh-tw\") {\n            // if (!Plotter.drawString(context, '時間: ' +\n            //         year + '-' + month + '-' + date + '  ' + hour + ':' + minute, rect))\n            //     return;\n            if (!Plotter.drawString(context, '  開: ' + data.open.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  高: ' + data.high.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  低: ' + data.low.toFixed(digits), rect))\n                return;\n            if (!Plotter.drawString(context, '  收: ' + data.close.toFixed(digits), rect))\n                return;\n        }\n        if (selIndex > 0) {\n            if (lang === \"zh-cn\") {\n                if (!Plotter.drawString(context, '  涨幅: ', rect))\n                    return;\n            } else if (lang === \"en-us\") {\n                if (!Plotter.drawString(context, '  CHANGE: ', rect))\n                    return;\n            } else if (lang === \"zh-tw\") {\n                if (!Plotter.drawString(context, '  漲幅: ', rect))\n                    return;\n            }\n            let prev = ds.getDataAt(selIndex - 1);\n            let change;\n            if ((data.close - prev.close) / prev.close * 100.0) {\n                change = (data.close - prev.close) / prev.close * 100.0;\n            } else {\n                change = 0.00;\n            }\n\n\n            if (change >= 0) {\n                change = ' ' + change.toFixed(2);\n                context.fillStyle = theme.getColor(themes.Theme.Color.TextPositive);\n            } else {\n                change = change.toFixed(2);\n                context.fillStyle = theme.getColor(themes.Theme.Color.TextNegative);\n            }\n            if (!Plotter.drawString(context, change, rect))\n                return;\n            context.fillStyle = theme.getColor(themes.Theme.Color.Text4);\n            if (!Plotter.drawString(context, ' %', rect))\n                return;\n        }\n\n        let amplitude;\n        if ((data.high - data.low) / data.low * 100.0) {\n            amplitude = (data.high - data.low) / data.low * 100.0;\n        } else {\n            amplitude = 0.00;\n        }\n\n        if (lang === \"zh-cn\") {\n            if (!Plotter.drawString(context, '  振幅: ' + amplitude.toFixed(2) + ' %', rect)) {\n                return;\n            }\n            // if (!Plotter.drawString(context, '  量: ' + data.volume.toFixed(2), rect)) {\n            //     return;\n            // }\n        } else if (lang === \"en-us\") {\n            if (!Plotter.drawString(context, '  AMPLITUDE: ' + amplitude.toFixed(2) + ' %', rect)) {\n                return;\n            }\n            // if (!Plotter.drawString(context, '  V: ' + data.volume.toFixed(2), rect)) {\n            //     return;\n            // }\n        } else if (lang === \"zh-tw\") {\n            if (!Plotter.drawString(context, '  振幅: ' + amplitude.toFixed(2) + ' %', rect)) {\n                return;\n            }\n            // if (!Plotter.drawString(context, '  量: ' + data.volume.toFixed(2), rect)) {\n            //     return;\n            // }\n        }\n        let dp = mgr.getDataProvider(this.getAreaName() + \".secondary\");\n        if (dp === undefined) {\n            return;\n        }\n        let indic = dp.getIndicator();\n        let n, cnt = indic.getOutputCount();\n        for (n = 0; n < cnt; n++) {\n            let out = indic.getOutputAt(n);\n            let v = out.execute(selIndex);\n            if (isNaN(v)) {\n                continue;\n            }\n            let info = \"  \" + out.getName() + \": \" + v.toFixed(digits);\n            let color = out.getColor();\n            if (color === undefined) {\n                color = themes.Theme.Color.Indicator0 + n;\n            }\n            context.fillStyle = theme.getColor(color);\n            if (!Plotter.drawString(context, info, rect)) {\n                return;\n            }\n        }\n    }\n\n}\n\nexport class IndicatorPlotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let range = mgr.getRange(this.getAreaName());\n        if (range.getRange() === 0.0)\n            return;\n        let dp = mgr.getDataProvider(this.getName());\n        if (!Util.isInstance(dp, data_providers.IndicatorDataProvider))\n            return;\n        let theme = mgr.getTheme(this.getFrameName());\n        let cW = timeline.getColumnWidth();\n        let first = timeline.getFirstIndex();\n        let last = timeline.getLastIndex();\n        let start;\n        if (area.isChanged() || timeline.isUpdated() || range.isUpdated())\n            start = first;\n        else\n            start = Math.max(first, last - 2);\n        let indic = dp.getIndicator();\n        let out, n, outCount = indic.getOutputCount();\n        for (n = 0; n < outCount; n++) {\n            out = indic.getOutputAt(n);\n            let style = out.getStyle();\n            if (style === exprs.OutputExpr.outputStyle.VolumeStick) {\n                this.drawVolumeStick(context, theme,\n                    mgr.getDataSource(this.getDataSourceName()), start, last,\n                    timeline.toItemLeft(start), cW, timeline.getItemWidth(), range);\n            } else if (style === exprs.OutputExpr.outputStyle.MACDStick) {\n                this.drawMACDStick(context, theme,\n                    out, start, last,\n                    timeline.toItemLeft(start), cW, timeline.getItemWidth(), range);\n            } else if (style === exprs.OutputExpr.outputStyle.SARPoint) {\n                this.drawSARPoint(context, theme,\n                    out, start, last,\n                    timeline.toItemCenter(start), cW, timeline.getItemWidth(), range);\n            }\n        }\n        let left = timeline.toColumnLeft(start);\n        let center = timeline.toItemCenter(start);\n        context.save();\n        context.rect(left, area.getTop(), area.getRight() - left, area.getHeight());\n        context.clip();\n        context.translate(0.5, 0.5);\n        for (n = 0; n < outCount; n++) {\n            let x = center;\n            out = indic.getOutputAt(n);\n            if (out.getStyle() === exprs.OutputExpr.outputStyle.Line) {\n                let v, points = [];\n                if (start > first) {\n                    v = out.execute(start - 1);\n                    if (isNaN(v) === false)\n                        points.push({\"x\": x - cW, \"y\": range.toY(v)});\n                }\n                for (let i = start; i < last; i++, x += cW) {\n                    v = out.execute(i);\n                    if (isNaN(v) === false)\n                        points.push({\"x\": x, \"y\": range.toY(v)});\n                }\n                if (points.length > 0) {\n                    let color = out.getColor();\n                    if (color === undefined)\n                        color = themes.Theme.Color.Indicator0 + n;\n                    context.strokeStyle = theme.getColor(color);\n                    Plotter.drawLines(context, points);\n                }\n            }\n        }\n        context.restore();\n    }\n\n    drawVolumeStick(context, theme, ds, first, last, startX, cW, iW, range) {\n        let dark = Util.isInstance(theme, themes.DarkTheme);\n        let left = startX;\n        let bottom = range.toY(0);\n        let strokePosRects = [];\n        let fillPosRects = [];\n        let fillNegRects = [];\n        for (let i = first; i < last; i++) {\n            let data = ds.getDataAt(i);\n            let top = range.toY(data.volume);\n            let iH = range.toHeight(data.volume);\n            if (data.close > data.open) {\n                if (iH > 1 && iW > 1 && dark) {\n                    strokePosRects.push({x: left + 0.5, y: top + 0.5, w: iW - 1, h: iH - 1});\n                } else {\n                    fillPosRects.push({x: left, y: top, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n                }\n            } else if (data.close === data.open) {\n                if (i > 0 && data.close >= ds.getDataAt(i - 1).close) {\n                    if (iH > 1 && iW > 1 && dark) {\n                        strokePosRects.push({x: left + 0.5, y: top + 0.5, w: iW - 1, h: iH - 1});\n                    } else {\n                        fillPosRects.push({x: left, y: top, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n                    }\n                } else {\n                    fillNegRects.push({x: left, y: top, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n                }\n            } else {\n                fillNegRects.push({x: left, y: top, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n            }\n            left += cW;\n        }\n        if (strokePosRects.length > 0) {\n            context.strokeStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, strokePosRects);\n            context.stroke();\n        }\n        if (fillPosRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, fillPosRects);\n            context.fill();\n        }\n        if (fillNegRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, fillNegRects);\n            context.fill();\n        }\n    }\n\n    drawMACDStick(context, theme, output, first, last, startX, cW, iW, range) {\n        let left = startX;\n        let middle = range.toY(0);\n        let strokePosRects = [];\n        let strokeNegRects = [];\n        let fillPosRects = [];\n        let fillNegRects = [];\n        let prevMACD = (first > 0) ? output.execute(first - 1) : NaN;\n        for (let i = first; i < last; i++) {\n            let MACD = output.execute(i);\n            if (MACD >= 0) {\n                let iH = range.toHeight(MACD);\n                if ((i === 0 || MACD >= prevMACD) && iH > 1 && iW > 1)\n                    strokePosRects.push({x: left + 0.5, y: middle - iH + 0.5, w: iW - 1, h: iH - 1});\n                else\n                    fillPosRects.push({x: left, y: middle - iH, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n            } else {\n                let iH = range.toHeight(-MACD);\n                if ((i === 0 || MACD >= prevMACD) && iH > 1 && iW > 1)\n                    strokeNegRects.push({x: left + 0.5, y: middle + 0.5, w: iW - 1, h: iH - 1});\n                else\n                    fillNegRects.push({x: left, y: middle, w: Math.max(iW, 1), h: Math.max(iH, 1)});\n            }\n            prevMACD = MACD;\n            left += cW;\n        }\n        if (strokePosRects.length > 0) {\n            context.strokeStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, strokePosRects);\n            context.stroke();\n        }\n        if (strokeNegRects.length > 0) {\n            context.strokeStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, strokeNegRects);\n            context.stroke();\n        }\n        if (fillPosRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Positive);\n            Plotter.createRectangles(context, fillPosRects);\n            context.fill();\n        }\n        if (fillNegRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Negative);\n            Plotter.createRectangles(context, fillNegRects);\n            context.fill();\n        }\n    }\n\n    drawSARPoint(context, theme, output, first, last, startX, cW, iW, range) {\n        let r = iW >> 1;\n        if (r < 0.5) r = 0.5;\n        if (r > 4) r = 4;\n        let center = startX;\n        let right = center + r;\n        let endAngle = 2 * Math.PI;\n        context.save();\n        context.translate(0.5, 0.5);\n        context.strokeStyle = theme.getColor(themes.Theme.Color.Indicator3);\n        context.beginPath();\n        for (let i = first; i < last; i++) {\n            let y = range.toY(output.execute(i));\n            context.moveTo(right, y);\n            context.arc(center, y, r, 0, endAngle);\n            center += cW;\n            right += cW;\n        }\n        context.stroke();\n        context.restore();\n    }\n\n}\n\nexport class IndicatorInfoPlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let dp = mgr.getDataProvider(this.getAreaName() + \".secondary\");\n        let theme = mgr.getTheme(this.getFrameName());\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textAlign = \"left\";\n        context.textBaseline = \"top\";\n        context.fillStyle = theme.getColor(themes.Theme.Color.Text4);\n        let rect = {\n            x: area.getLeft() + 4,\n            y: area.getTop() + 2,\n            w: area.getWidth() - 8,\n            h: 20\n        };\n        let indic = dp.getIndicator();\n        let title;\n        switch (indic.getParameterCount()) {\n            case 0:\n                title = indic.getName();\n                break;\n            case 1:\n                title = indic.getName() + \"(\" +\n                    indic.getParameterAt(0).getValue() +\n                    \")\";\n                break;\n            case 2:\n                title = indic.getName() + \"(\" +\n                    indic.getParameterAt(0).getValue() + \",\" +\n                    indic.getParameterAt(1).getValue() +\n                    \")\";\n                break;\n            case 3:\n                title = indic.getName() + \"(\" +\n                    indic.getParameterAt(0).getValue() + \",\" +\n                    indic.getParameterAt(1).getValue() + \",\" +\n                    indic.getParameterAt(2).getValue() +\n                    \")\";\n                break;\n            case 4:\n                title = indic.getName() + \"(\" +\n                    indic.getParameterAt(0).getValue() + \",\" +\n                    indic.getParameterAt(1).getValue() + \",\" +\n                    indic.getParameterAt(2).getValue() + \",\" +\n                    indic.getParameterAt(3).getValue() +\n                    \")\";\n                break;\n            default:\n                return;\n        }\n        if (!Plotter.drawString(context, title, rect))\n            return;\n        let selIndex = timeline.getSelectedIndex();\n        if (selIndex < 0)\n            return;\n        let out, v, info, color;\n        let n, cnt = indic.getOutputCount();\n        for (n = 0; n < cnt; n++) {\n            out = indic.getOutputAt(n);\n            v = out.execute(selIndex);\n            if (isNaN(v))\n                continue;\n            info = \"  \" + out.getName() + \": \" + v.toFixed(2);\n            color = out.getColor();\n            if (color === undefined)\n                color = themes.Theme.Color.Indicator0 + n;\n            context.fillStyle = theme.getColor(color);\n            if (!Plotter.drawString(context, info, rect))\n                return;\n        }\n    }\n\n}\n\nexport class MinMaxPlotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (ds.getDataCount() < 1)\n            return;\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        if (timeline.getInnerWidth() < timeline.getColumnWidth())\n            return;\n        let range = mgr.getRange(this.getAreaName());\n        if (range.getRange() === 0)\n            return;\n        let dp = mgr.getDataProvider(this.getAreaName() + \".main\");\n        let first = timeline.getFirstIndex();\n        let center = (first + timeline.getLastIndex()) >> 1;\n        let theme = mgr.getTheme(this.getFrameName());\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textBaseline = \"middle\";\n        context.fillStyle = theme.getColor(themes.Theme.Color.Text4);\n        context.strokeStyle = theme.getColor(themes.Theme.Color.Text4);\n        let digits = ds.getDecimalDigits();\n        this.drawMark(context, dp.getMinValue(), digits, range.toY(dp.getMinValue()),\n            first, center, dp.getMinValueIndex(), timeline);\n        this.drawMark(context, dp.getMaxValue(), digits, range.toY(dp.getMaxValue()),\n            first, center, dp.getMaxValueIndex(), timeline);\n    }\n\n    drawMark(context, v, digits, y, first, center, index, timeline) {\n        let arrowStart, arrowStop, _arrowStop;\n        let textStart;\n        if (index > center) {\n            context.textAlign = \"right\";\n            arrowStart = timeline.toItemCenter(index) - 4;\n            arrowStop = arrowStart - 7;\n            _arrowStop = arrowStart - 3;\n            textStart = arrowStop - 4;\n        } else {\n            context.textAlign = \"left\";\n            arrowStart = timeline.toItemCenter(index) + 4;\n            arrowStop = arrowStart + 7;\n            _arrowStop = arrowStart + 3;\n            textStart = arrowStop + 4;\n        }\n        Plotter.drawLine(context, arrowStart, y, arrowStop, y);\n        Plotter.drawLine(context, arrowStart, y, _arrowStop, y + 2);\n        Plotter.drawLine(context, arrowStart, y, _arrowStop, y - 2);\n        context.fillText(Util.fromFloat(v, digits), textStart, y);\n    }\n\n}\n\nexport class TimelinePlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        if (!area.isChanged() && !timeline.isUpdated())\n            return;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (ds.getDataCount() < 2)\n            return;\n        let timeInterval = ds.getDataAt(1).date - ds.getDataAt(0).date;\n        let n, cnt = TimelinePlotter.TIME_INTERVAL.length;\n        for (n = 0; n < cnt; n++) {\n            if (timeInterval < TimelinePlotter.TIME_INTERVAL[n])\n                break;\n        }\n        for (; n < cnt; n++) {\n            if (TimelinePlotter.TIME_INTERVAL[n] % timeInterval === 0)\n                if ((TimelinePlotter.TIME_INTERVAL[n] / timeInterval) * timeline.getColumnWidth() > 60)\n                    break;\n        }\n        let first = timeline.getFirstIndex();\n        let last = timeline.getLastIndex();\n        let d = new Date();\n        let local_utc_diff = d.getTimezoneOffset() * 60 * 1000;\n        let theme = mgr.getTheme(this.getFrameName());\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        let lang = mgr.getLanguage();\n        let gridRects = [];\n        let top = area.getTop();\n        let middle = area.getMiddle();\n        for (let i = first; i < last; i++) {\n            let utcDate = ds.getDataAt(i).date;\n            let localDate = utcDate - local_utc_diff;\n            let time = new Date(utcDate);\n            let year = time.getFullYear();\n            let month = time.getMonth() + 1;\n            let date = time.getDate();\n            let hour = time.getHours();\n            let minute = time.getMinutes();\n            let text = \"\";\n            if (n < cnt) {\n                let m = Math.max(\n                    TimelinePlotter.TP_DAY,\n                    TimelinePlotter.TIME_INTERVAL[n]);\n                if (localDate % m === 0) {\n                    if (lang === \"zh-cn\")\n                        text = month.toString() + \"月\" + date.toString() + \"日\";\n                    else if (lang === \"zh-tw\")\n                        text = month.toString() + \"月\" + date.toString() + \"日\";\n                    else if (lang === \"en-us\")\n                        text = TimelinePlotter.MonthConvert[month] + \" \" + date.toString();\n                    context.fillStyle = theme.getColor(themes.Theme.Color.Text4);\n                } else if (localDate % TimelinePlotter.TIME_INTERVAL[n] === 0) {\n                    let strMinute = minute.toString();\n                    if (minute < 10)\n                        strMinute = \"0\" + strMinute;\n                    text = hour.toString() + \":\" + strMinute;\n                    context.fillStyle = theme.getColor(themes.Theme.Color.Text2);\n                }\n            } else if (date === 1 && (hour < (timeInterval / TimelinePlotter.TP_HOUR))) {\n                if (month === 1) {\n                    text = year.toString();\n                    if (lang === \"zh-cn\")\n                        text += \"年\";\n                    else if (lang === \"zh-tw\")\n                        text += \"年\";\n                } else {\n                    if (lang === \"zh-cn\")\n                        text = month.toString() + \"月\";\n                    else if (lang === \"zh-tw\")\n                        text = month.toString() + \"月\";\n                    else if (lang === \"en-us\")\n                        text = TimelinePlotter.MonthConvert[month];\n                }\n                context.fillStyle = theme.getColor(themes.Theme.Color.Text4);\n            }\n            if (text.length > 0) {\n                let x = timeline.toItemCenter(i);\n                gridRects.push({x: x, y: top, w: 1, h: 4});\n                context.fillText(text, x, middle);\n            }\n        }\n        if (gridRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Grid1);\n            Plotter.createRectangles(context, gridRects);\n            context.fill();\n        }\n    }\n\n}\nTimelinePlotter.TP_MINUTE = 60 * 1000;\nTimelinePlotter.TP_HOUR = 60 * TimelinePlotter.TP_MINUTE;\nTimelinePlotter.TP_DAY = 24 * TimelinePlotter.TP_HOUR;\nTimelinePlotter.TIME_INTERVAL = [\n    5 * TimelinePlotter.TP_MINUTE,\n    10 * TimelinePlotter.TP_MINUTE,\n    15 * TimelinePlotter.TP_MINUTE,\n    30 * TimelinePlotter.TP_MINUTE,\n    TimelinePlotter.TP_HOUR,\n    2 * TimelinePlotter.TP_HOUR,\n    3 * TimelinePlotter.TP_HOUR,\n    6 * TimelinePlotter.TP_HOUR,\n    12 * TimelinePlotter.TP_HOUR,\n    TimelinePlotter.TP_DAY,\n    2 * TimelinePlotter.TP_DAY\n];\nTimelinePlotter.MonthConvert = {\n    1: \"Jan.\",\n    2: \"Feb.\",\n    3: \"Mar.\",\n    4: \"Apr.\",\n    5: \"May.\",\n    6: \"Jun.\",\n    7: \"Jul.\",\n    8: \"Aug.\",\n    9: \"Sep.\",\n    10: \"Oct.\",\n    11: \"Nov.\",\n    12: \"Dec.\"\n};\n\nexport class RangePlotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    getRequiredWidth(context, v) {\n        let mgr = ChartManager.instance;\n        let theme = mgr.getTheme(this.getFrameName());\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        return context.measureText((Math.floor(v) + 0.88).toString()).width + 16;\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let areaName = this.getAreaName();\n        let area = mgr.getArea(areaName);\n        let rangeName = areaName.substring(0, areaName.lastIndexOf(\"Range\"));\n        let range = mgr.getRange(rangeName);\n        if (range.getRange() === 0.0)\n            return;\n        let isMainRange = range.getNameObject().getCompAt(2) === \"main\";\n        if (isMainRange) {\n        } else {\n            if (!area.isChanged() && !range.isUpdated())\n                return;\n        }\n        let gradations = range.getGradations();\n        if (gradations.length === 0)\n            return;\n        let left = area.getLeft();\n        let right = area.getRight();\n        let center = area.getCenter();\n        let theme = mgr.getTheme(this.getFrameName());\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.fillStyle = theme.getColor(themes.Theme.Color.Text2);\n        let gridRects = [];\n        for (let n in gradations) {\n            let y = range.toY(gradations[n]);\n            gridRects.push({x: left, y: y, w: 6, h: 1});\n            gridRects.push({x: right - 6, y: y, w: 6, h: 1});\n            context.fillText(Util.fromFloat(gradations[n], 2), center, y);\n        }\n        if (gridRects.length > 0) {\n            context.fillStyle = theme.getColor(themes.Theme.Color.Grid1);\n            Plotter.createRectangles(context, gridRects);\n            context.fill();\n        }\n    }\n\n}\n\nexport class COrderGraphPlotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        return this._Draw_(context);\n    }\n\n    _Draw_(context) {\n        if (this.Update() === false) return;\n        if (this.updateData() === false) return;\n        this.m_top = this.m_pArea.getTop();\n        this.m_bottom = this.m_pArea.getBottom();\n        this.m_left = this.m_pArea.getLeft();\n        this.m_right = this.m_pArea.getRight();\n        context.save();\n        context.rect(this.m_left, this.m_top, this.m_right - this.m_left, this.m_bottom - this.m_top);\n        context.clip();\n        let all = ChartManager.instance.getChart()._depthData;\n        this.x_offset = 0;\n        this.y_offset = 0;\n        let ask_tmp = {};\n        let bid_tmp = {};\n        ask_tmp.x = this.m_left + all.array[this.m_ask_si].amounts * this.m_Step;\n        ask_tmp.y = this.m_pRange.toY(all.array[this.m_ask_si].rate);\n        bid_tmp.x = this.m_left + all.array[this.m_bid_si].amounts * this.m_Step;\n        bid_tmp.y = this.m_pRange.toY(all.array[this.m_bid_si].rate);\n        if (Math.abs(ask_tmp.y - bid_tmp.y) < 1) {\n            this.y_offset = 1;\n        }\n        this.x_offset = 1;\n        this.DrawBackground(context);\n        this.UpdatePoints();\n        this.FillBlack(context);\n        this.DrawGradations(context);\n        this.DrawLine(context);\n        context.restore();\n    }\n\n    DrawBackground(context) {\n        context.fillStyle = this.m_pTheme.getColor(themes.Theme.Color.Background);\n        context.fillRect(this.m_left, this.m_top, this.m_right - this.m_left, this.m_bottom - this.m_top);\n        let all = ChartManager.instance.getChart()._depthData;\n        if (this.m_mode === 0) {\n            let ask_bottom = this.m_pRange.toY(all.array[this.m_ask_si].rate) - this.y_offset;\n            let bid_top = this.m_pRange.toY(all.array[this.m_bid_si].rate) + this.y_offset;\n            let ask_gradient = context.createLinearGradient(this.m_left, 0, this.m_right, 0);\n            ask_gradient.addColorStop(0, this.m_pTheme.getColor(themes.Theme.Color.Background));\n            ask_gradient.addColorStop(1, this.m_pTheme.getColor(themes.Theme.Color.PositiveDark));\n            context.fillStyle = ask_gradient;\n            context.fillRect(this.m_left, this.m_top, this.m_right - this.m_left, ask_bottom - this.m_top);\n            let bid_gradient = context.createLinearGradient(this.m_left, 0, this.m_right, 0);\n            bid_gradient.addColorStop(0, this.m_pTheme.getColor(themes.Theme.Color.Background));\n            bid_gradient.addColorStop(1, this.m_pTheme.getColor(themes.Theme.Color.NegativeDark));\n            context.fillStyle = bid_gradient;\n            context.fillRect(this.m_left, bid_top, this.m_right - this.m_left, this.m_bottom - bid_top);\n        } else if (this.m_mode === 1) {\n            let ask_gradient = context.createLinearGradient(this.m_left, 0, this.m_right, 0);\n            ask_gradient.addColorStop(0, this.m_pTheme.getColor(themes.Theme.Color.Background));\n            ask_gradient.addColorStop(1, this.m_pTheme.getColor(themes.Theme.Color.PositiveDark));\n            context.fillStyle = ask_gradient;\n            context.fillRect(this.m_left, this.m_top, this.m_right - this.m_left, this.m_bottom - this.m_top);\n        } else if (this.m_mode === 2) {\n            let bid_gradient = context.createLinearGradient(this.m_left, 0, this.m_right, 0);\n            bid_gradient.addColorStop(0, this.m_pTheme.getColor(themes.Theme.Color.Background));\n            bid_gradient.addColorStop(1, this.m_pTheme.getColor(themes.Theme.Color.NegativeDark));\n            context.fillStyle = bid_gradient;\n            context.fillRect(this.m_left, this.m_top, this.m_right - this.m_left, this.m_bottom - this.m_top);\n        }\n    }\n\n    DrawLine(context) {\n        if (this.m_mode === 0 || this.m_mode === 1) {\n            context.strokeStyle = this.m_pTheme.getColor(themes.Theme.Color.Positive);\n            context.beginPath();\n            context.moveTo(Math.floor(this.m_ask_points[0].x) + 0.5, Math.floor(this.m_ask_points[0].y) + 0.5);\n            for (let i = 1; i < this.m_ask_points.length; i++) {\n                context.lineTo(Math.floor(this.m_ask_points[i].x) + 0.5, Math.floor(this.m_ask_points[i].y) + 0.5);\n            }\n            context.stroke();\n        }\n        if (this.m_mode === 0 || this.m_mode === 2) {\n            context.strokeStyle = this.m_pTheme.getColor(themes.Theme.Color.Negative);\n            context.beginPath();\n            context.moveTo(this.m_bid_points[0].x + 0.5, this.m_bid_points[0].y + 0.5);\n            for (let i = 1; i < this.m_bid_points.length; i++) {\n                context.lineTo(this.m_bid_points[i].x + 0.5, this.m_bid_points[i].y + 0.5);\n            }\n            context.stroke();\n        }\n    }\n\n    UpdatePoints() {\n        let all = ChartManager.instance.getChart()._depthData;\n        this.m_ask_points = [];\n        let index_ask = {};\n        index_ask.x = Math.floor(this.m_left);\n        index_ask.y = Math.floor(this.m_pRange.toY(all.array[this.m_ask_si].rate) - this.y_offset);\n        this.m_ask_points.push(index_ask);\n        let ask_p_i = 0;\n        for (let i = this.m_ask_si; i >= this.m_ask_ei; i--) {\n            let index0 = {};\n            let index1 = {};\n            if (i === this.m_ask_si) {\n                index0.x = Math.floor(this.m_left + all.array[i].amounts * this.m_Step + this.x_offset);\n                index0.y = Math.floor(this.m_pRange.toY(all.array[i].rate) - this.y_offset);\n                this.m_ask_points.push(index0);\n                ask_p_i = 1;\n            } else {\n                index0.x = Math.floor(this.m_left + all.array[i].amounts * this.m_Step + this.x_offset);\n                index0.y = Math.floor(this.m_ask_points[ask_p_i].y);\n                index1.x = Math.floor(index0.x);\n                index1.y = Math.floor(this.m_pRange.toY(all.array[i].rate) - this.y_offset);\n                this.m_ask_points.push(index0);\n                ask_p_i++;\n                this.m_ask_points.push(index1);\n                ask_p_i++;\n            }\n        }\n        this.m_bid_points = [];\n        let index_bid = {};\n        index_bid.x = Math.floor(this.m_left);\n        index_bid.y = Math.ceil(this.m_pRange.toY(all.array[this.m_bid_si].rate) + this.y_offset);\n        this.m_bid_points.push(index_bid);\n        let bid_p_i = 0;\n        for (let i = this.m_bid_si; i <= this.m_bid_ei; i++) {\n            let index0 = {};\n            let index1 = {};\n            if (i === this.m_bid_si) {\n                index0.x = Math.floor(this.m_left + all.array[i].amounts * this.m_Step + this.x_offset);\n                index0.y = Math.ceil(this.m_pRange.toY(all.array[i].rate) + this.y_offset);\n                this.m_bid_points.push(index0);\n                bid_p_i = 1;\n            } else {\n                index0.x = Math.floor(this.m_left + all.array[i].amounts * this.m_Step + this.x_offset);\n                index0.y = Math.ceil(this.m_bid_points[bid_p_i].y);\n                index1.x = Math.floor(index0.x);\n                index1.y = Math.ceil(this.m_pRange.toY(all.array[i].rate) + this.x_offset);\n                this.m_bid_points.push(index0);\n                bid_p_i++;\n                this.m_bid_points.push(index1);\n                bid_p_i++;\n            }\n        }\n    }\n\n    updateData() {\n        let all = ChartManager.instance.getChart()._depthData;\n        if (all.array === null) return false;\n        if (all.array.length <= 50) return false;\n        let minRange = this.m_pRange.getOuterMinValue();\n        let maxRange = this.m_pRange.getOuterMaxValue();\n        this.m_ask_si = all.asks_si;\n        this.m_ask_ei = all.asks_si;\n        for (let i = all.asks_si; i >= all.asks_ei; i--) {\n            if (all.array[i].rate < maxRange)\n                this.m_ask_ei = i;\n            else\n                break;\n        }\n        this.m_bid_si = all.bids_si;\n        this.m_bid_ei = all.bids_si;\n        for (let i = all.bids_si; i <= all.bids_ei; i++) {\n            if (all.array[i].rate > minRange)\n                this.m_bid_ei = i;\n            else\n                break;\n        }\n        if (this.m_ask_ei === this.m_ask_si)\n            this.m_mode = 2;\n        else if (this.m_bid_ei === this.m_bid_si)\n            this.m_mode = 1;\n        else\n            this.m_mode = 0;\n        this.m_Step = this.m_pArea.getWidth();\n        if (this.m_mode === 0) {\n            /*\n             * View: B     --------    T\n             * Data: Lo      -----     Hi\n             */\n            if (this.m_ask_ei === all.asks_ei && this.m_bid_ei === all.bids_ei) {\n                this.m_Step /= Math.min(all.array[this.m_ask_ei].amounts,\n                    all.array[this.m_bid_ei].amounts);\n            }\n            /*\n             * View: B     --------     T\n             * Data: Lo         -----   Hi\n             */\n            else if (this.m_ask_ei !== all.asks_ei && this.m_bid_ei === all.bids_ei) {\n                this.m_Step /= all.array[this.m_bid_ei].amounts;\n            }\n            /*\n             * View: B     --------    T\n             * Data: Lo  -----         Hi\n             */\n            else if (this.m_ask_ei === all.asks_ei && this.m_bid_ei !== all.bids_ei) {\n                this.m_Step /= all.array[this.m_ask_ei].amounts;\n            }\n            /*\n             * View: B     --------    T\n             * Data: Lo  ------------  Hi\n             */\n            else if (this.m_ask_ei !== all.asks_ei && this.m_bid_ei !== all.bids_ei) {\n                this.m_Step /= Math.max(all.array[this.m_ask_ei].amounts,\n                    all.array[this.m_bid_ei].amounts);\n            }\n        } else if (this.m_mode === 1) {\n            this.m_Step /= all.array[this.m_ask_ei].amounts;\n        } else if (this.m_mode === 2) {\n            this.m_Step /= all.array[this.m_bid_ei].amounts;\n        }\n        return true;\n    }\n\n    Update() {\n        this.m_pMgr = ChartManager.instance;\n        let areaName = this.getAreaName();\n        this.m_pArea = this.m_pMgr.getArea(areaName);\n        if (this.m_pArea === null)\n            return false;\n        let rangeName = areaName.substring(0, areaName.lastIndexOf(\"Range\"));\n        this.m_pRange = this.m_pMgr.getRange(rangeName);\n        if (this.m_pRange === null || this.m_pRange.getRange() === 0.0)\n            return false;\n        this.m_pTheme = this.m_pMgr.getTheme(this.getFrameName());\n        if (this.m_pTheme === null) {\n            return false;\n        }\n        return true;\n    }\n\n    DrawGradations(context) {\n        let mgr = ChartManager.instance;\n        let areaName = this.getAreaName();\n        let area = mgr.getArea(areaName);\n        let rangeName = areaName.substring(0, areaName.lastIndexOf(\"Range\"));\n        let range = mgr.getRange(rangeName);\n        if (range.getRange() === 0.0)\n            return;\n        let gradations = range.getGradations();\n        if (gradations.length === 0)\n            return;\n        let left = area.getLeft();\n        let right = area.getRight();\n        let gridRects = [];\n        for (let n in gradations) {\n            let y = range.toY(gradations[n]);\n            gridRects.push({x: left, y: y, w: 6, h: 1});\n            gridRects.push({x: right - 6, y: y, w: 6, h: 1});\n        }\n        if (gridRects.length > 0) {\n            let theme = mgr.getTheme(this.getFrameName());\n            context.fillStyle = theme.getColor(themes.Theme.Color.Grid1);\n            Plotter.createRectangles(context, gridRects);\n            context.fill();\n        }\n    }\n\n    FillBlack(context) {\n        let ask_point = this.m_ask_points;\n        let bid_point = this.m_bid_points;\n        let ask_first_add = {};\n        let ask_last_add = {};\n        ask_first_add.x = this.m_right;\n        ask_first_add.y = ask_point[0].y;\n        ask_last_add.x = this.m_right;\n        ask_last_add.y = ask_point[ask_point.length - 1].y;\n        let bid_first_add = {};\n        let bid_last_add = {};\n        bid_first_add.x = this.m_right;\n        bid_first_add.y = bid_point[0].y - 1;\n        bid_last_add.x = this.m_right;\n        bid_last_add.y = bid_point[bid_point.length - 1].y;\n        ask_point.unshift(ask_first_add);\n        ask_point.push(ask_last_add);\n        bid_point.unshift(bid_first_add);\n        bid_point.push(bid_last_add);\n        context.fillStyle = this.m_pTheme.getColor(themes.Theme.Color.Background);\n        context.beginPath();\n        context.moveTo(Math.floor(ask_point[0].x) + 0.5, Math.floor(ask_point[0].y) + 0.5);\n        for (let i = 1; i < ask_point.length; i++) {\n            context.lineTo(Math.floor(ask_point[i].x) + 0.5, Math.floor(ask_point[i].y) + 0.5);\n        }\n        context.fill();\n        context.beginPath();\n        context.moveTo(Math.floor(bid_point[0].x) + 0.5, Math.floor(bid_point[0].y) + 0.5);\n        for (let i = 1; i < bid_point.length; i++) {\n            context.lineTo(Math.floor(bid_point[i].x) + 0.5, Math.floor(bid_point[i].y) + 0.5);\n        }\n        context.fill();\n        ask_point.shift();\n        ask_point.pop();\n        bid_point.shift();\n        bid_point.pop();\n    }\n\n    DrawTickerGraph(context) {\n        // return;\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        let ticker = ds._dataItems[ds._dataItems.length - 1].close;\n        let p1x = this.m_left + 1;\n        let p1y = this.m_pRange.toY(ticker);\n        let p2x = p1x + 5;\n        let p2y = p1y + 2.5;\n        let p3x = p1x + 5;\n        let p3y = p1y - 2.5;\n        context.fillStyle = this.m_pTheme.getColor(themes.Theme.Color.Mark);\n        context.strokeStyle = this.m_pTheme.getColor(themes.Theme.Color.Mark);\n    };\n}\n\nexport class LastVolumePlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let areaName = this.getAreaName();\n        let area = mgr.getArea(areaName);\n        let rangeName = areaName.substring(0, areaName.lastIndexOf(\"Range\"));\n        let range = mgr.getRange(rangeName);\n        if (range.getRange() === 0.0)\n            return;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (ds.getDataCount() < 1)\n            return;\n        let theme = mgr.getTheme(this.getFrameName());\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textAlign = \"left\";\n        context.textBaseline = \"middle\";\n        context.fillStyle = theme.getColor(themes.Theme.Color.RangeMark);\n        context.strokeStyle = theme.getColor(themes.Theme.Color.RangeMark);\n        let v = ds.getDataAt(ds.getDataCount() - 1).volume;\n        let y = range.toY(v);\n        let left = area.getLeft() + 1;\n        Plotter.drawLine(context, left, y, left + 7, y);\n        Plotter.drawLine(context, left, y, left + 3, y + 2);\n        Plotter.drawLine(context, left, y, left + 3, y - 2);\n        context.fillText(Util.fromFloat(v, 2), left + 10, y);\n    }\n\n}\n\nexport class LastClosePlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let areaName = this.getAreaName();\n        let area = mgr.getArea(areaName);\n        let rangeName = areaName.substring(0, areaName.lastIndexOf(\"Range\"));\n        let range = mgr.getRange(rangeName);\n        if (range.getRange() === 0.0)\n            return;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (ds.getDataCount() < 1)\n            return;\n        let v = ds._dataItems[ds._dataItems.length - 1].close;\n        if (v <= range.getMinValue() || v >= range.getMaxValue())\n            return;\n        let theme = mgr.getTheme(this.getFrameName());\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textAlign = \"left\";\n        context.textBaseline = \"middle\";\n        context.fillStyle = theme.getColor(themes.Theme.Color.RangeMark);\n        context.strokeStyle = theme.getColor(themes.Theme.Color.RangeMark);\n        let y = range.toY(v);\n        let left = area.getLeft() + 1;\n        Plotter.drawLine(context, left, y, left + 7, y);\n        Plotter.drawLine(context, left, y, left + 3, y + 2);\n        Plotter.drawLine(context, left, y, left + 3, y - 2);\n        context.fillText(Util.fromFloat(v, ds.getDecimalDigits()), left + 10, y);\n    }\n\n}\n\nexport class SelectionPlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        if (mgr._drawingTool !== ChartManager.DrawingTool.CrossCursor) {\n            return;\n        }\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        if (timeline.getSelectedIndex() < 0) {\n            return;\n        }\n        let range = mgr.getRange(this.getAreaName());\n        let theme = mgr.getTheme(this.getFrameName());\n        context.strokeStyle = theme.getColor(themes.Theme.Color.Cursor);\n        let x = timeline.toItemCenter(timeline.getSelectedIndex());\n        Plotter.drawLine(context, x, area.getTop() - 1, x, area.getBottom());\n        let pos = range.getSelectedPosition();\n        if (pos >= 0) {\n            Plotter.drawLine(context, area.getLeft(), pos, area.getRight(), pos);\n        }\n    }\n}\n\nexport class TimelineSelectionPlotter extends Plotter {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        if (timeline.getSelectedIndex() < 0)\n            return;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (!Util.isInstance(ds, data_sources.MainDataSource))\n            return;\n        let theme = mgr.getTheme(this.getFrameName());\n        let lang = mgr.getLanguage();\n        let x = timeline.toItemCenter(timeline.getSelectedIndex());\n        context.fillStyle = theme.getColor(themes.Theme.Color.Background);\n        context.fillRect(x - 52.5, area.getTop() + 2.5, 106, 18);\n        context.strokeStyle = theme.getColor(themes.Theme.Color.Grid3);\n        context.strokeRect(x - 52.5, area.getTop() + 2.5, 106, 18);\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.fillStyle = theme.getColor(themes.Theme.Color.Text4);\n        let time = new Date(ds.getDataAt(timeline.getSelectedIndex()).date);\n        let month = time.getMonth() + 1;\n        let date = time.getDate();\n        let hour = time.getHours();\n        let minute = time.getMinutes();\n        let second = time.getSeconds();\n        let strMonth = month.toString();\n        let strDate = date.toString();\n        let strHour = hour.toString();\n        let strMinute = minute.toString();\n        let strSecond = second.toString();\n        if (minute < 10) {\n            strMinute = \"0\" + strMinute;\n        }\n        if (second < 10) {\n            strSecond = \"0\" + strSecond;\n        }\n        let text = \"\";\n        if (lang === \"zh-cn\") {\n            text = strMonth + \"月\" + strDate + \"日  \" +\n                strHour + \":\" + strMinute;\n        } else if (lang === \"zh-tw\") {\n            text = strMonth + \"月\" + strDate + \"日  \" +\n                strHour + \":\" + strMinute;\n        } else if (lang === \"en-us\") {\n            text = TimelineSelectionPlotter.MonthConvert[month] + \" \" + strDate + \"  \" +\n                strHour + \":\" + strMinute;\n        }\n        if (Kline.instance.range < 60000) {\n            text += \":\" + strSecond;\n        }\n        context.fillText(text, x, area.getMiddle());\n    }\n\n}\nTimelineSelectionPlotter.MonthConvert = {\n    1: \"Jan.\",\n    2: \"Feb.\",\n    3: \"Mar.\",\n    4: \"Apr.\",\n    5: \"May.\",\n    6: \"Jun.\",\n    7: \"Jul.\",\n    8: \"Aug.\",\n    9: \"Sep.\",\n    10: \"Oct.\",\n    11: \"Nov.\",\n    12: \"Dec.\"\n};\n\nexport class RangeSelectionPlotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    Draw(context) {\n        let mgr = ChartManager.instance;\n        let areaName = this.getAreaName();\n        let area = mgr.getArea(areaName);\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        if (timeline.getSelectedIndex() < 0) {\n            return;\n        }\n        let rangeName = areaName.substring(0, areaName.lastIndexOf(\"Range\"));\n        let range = mgr.getRange(rangeName);\n        if (range.getRange() === 0.0 || range.getSelectedPosition() < 0) {\n            return;\n        }\n        let v = range.getSelectedValue();\n        if (v === -Number.MAX_VALUE) {\n            return;\n        }\n        let y = range.getSelectedPosition();\n        Plotter.createPolygon(context, [\n            {\"x\": area.getLeft(), \"y\": y},\n            {\"x\": area.getLeft() + 5, \"y\": y + 10},\n            {\"x\": area.getRight() - 3, \"y\": y + 10},\n            {\"x\": area.getRight() - 3, \"y\": y - 10},\n            {\"x\": area.getLeft() + 5, \"y\": y - 10}\n        ]);\n        let theme = mgr.getTheme(this.getFrameName());\n        context.fillStyle = theme.getColor(themes.Theme.Color.Background);\n        context.fill();\n        context.strokeStyle = theme.getColor(themes.Theme.Color.Grid4);\n        context.stroke();\n        context.font = theme.getFont(themes.Theme.Font.Default);\n        context.textAlign = \"center\";\n        context.textBaseline = \"middle\";\n        context.fillStyle = theme.getColor(themes.Theme.Color.Text3);\n        let digits = 2;\n        if (range.getNameObject().getCompAt(2) === \"main\") {\n            digits = mgr.getDataSource(this.getDataSourceName()).getDecimalDigits();\n        }\n        context.fillText(Util.fromFloat(v, digits), area.getCenter(), y);\n    }\n\n}\n\nexport class CToolPlotter extends NamedObject {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n        let pMgr = ChartManager.instance;\n        let pArea = pMgr.getArea('frame0.k0.main');\n        if (pArea === null) {\n            this.areaPos = {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            };\n            return;\n        }\n        this.areaPos = {\n            left: pArea.getLeft(),\n            top: pArea.getTop(),\n            right: pArea.getRight(),\n            bottom: pArea.getBottom()\n        };\n        this.crossPt = {};\n        this.normalSize = 4;\n        this.selectedSize = 6;\n        this.cursorLen = 4;\n        this.cursorGapLen = 3;\n        this.theme = ChartManager.instance.getTheme(this.getFrameName());\n    }\n\n    drawCursor(context) {\n        this.drawCrossCursor(context);\n    }\n\n    drawCrossCursor(context) {\n        context.strokeStyle = this.theme.getColor(themes.Theme.Color.LineColorNormal);\n        context.fillStyle = this.theme.getColor(themes.Theme.Color.LineColorNormal);\n        let tempPt = this.toolObject.getPoint(0).getPosXY();\n        if (tempPt === null) {\n            return;\n        }\n        let x = tempPt.x;\n        let y = tempPt.y;\n        let cursorLen = this.cursorLen;\n        let cursorGapLen = this.cursorGapLen;\n        context.fillRect(x, y, 1, 1);\n        Plotter.drawLine(context, x - cursorLen - cursorGapLen, y, x - cursorGapLen, y);\n        Plotter.drawLine(context, x + cursorLen + cursorGapLen, y, x + cursorGapLen, y);\n        Plotter.drawLine(context, x, y - cursorLen - cursorGapLen, x, y - cursorGapLen);\n        Plotter.drawLine(context, x, y + cursorLen + cursorGapLen, x, y + cursorGapLen);\n    }\n\n    drawCircle(context, center, radius) {\n        let centerX = center.x;\n        let centerY = center.y;\n        context.beginPath();\n        context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n        context.fillStyle = this.theme.getColor(themes.Theme.Color.CircleColorFill);\n        context.fill();\n        context.stroke();\n    }\n\n    drawCtrlPt(context) {\n        context.strokeStyle = this.theme.getColor(themes.Theme.Color.CircleColorStroke);\n        for (let i = 0; i < this.ctrlPtsNum; i++) {\n            this.drawCircle(context, this.ctrlPts[1][i], this.normalSize);\n        }\n    }\n\n    highlightCtrlPt(context) {\n        context.strokeStyle = this.theme.getColor(themes.Theme.Color.CircleColorStroke);\n        for (let i = 0; i < this.ctrlPtsNum; i++) {\n            if (this.toolObject.getPoint(i).getState() === CPoint.state.Highlight)\n                this.drawCircle(context, this.ctrlPts[1][i], this.selectedSize);\n        }\n    }\n\n    drawFibRayLines(context, startPoint, endPoint) {\n        for (let i = 0; i < this.fiboFansSequence.length; i++) {\n            let stageY = startPoint.y + (100 - this.fiboFansSequence[i]) / 100 * (endPoint.y - startPoint.y);\n            let tempStartPt = {x: startPoint.x, y: startPoint.y};\n            let tempEndPt = {x: endPoint.x, y: stageY};\n            this.drawRayLines(context, tempStartPt, tempEndPt);\n        }\n    }\n\n    drawRayLines(context, startPoint, endPoint) {\n        this.getAreaPos();\n        let tempStartPt = {x: startPoint.x, y: startPoint.y};\n        let tempEndPt = {x: endPoint.x, y: endPoint.y};\n        let crossPt = this.getRectCrossPt(this.areaPos, tempStartPt, tempEndPt);\n        let tempCrossPt;\n        if (endPoint.x === startPoint.x) {\n            if (endPoint.y === startPoint.y) {\n                tempCrossPt = endPoint;\n            } else {\n                tempCrossPt = endPoint.y > startPoint.y ? {x: crossPt[1].x, y: crossPt[1].y} : {\n                    x: crossPt[0].x,\n                    y: crossPt[0].y\n                };\n            }\n        } else {\n            tempCrossPt = endPoint.x > startPoint.x ? {x: crossPt[1].x, y: crossPt[1].y} : {\n                x: crossPt[0].x,\n                y: crossPt[0].y\n            };\n        }\n        Plotter.drawLine(context, startPoint.x, startPoint.y, tempCrossPt.x, tempCrossPt.y);\n    }\n\n    lenBetweenPts(pt1, pt2) {\n        return Math.sqrt(Math.pow((pt2.x - pt1.x), 2) + Math.pow((pt2.y - pt1.y), 2));\n    }\n\n    getCtrlPts() {\n        for (let i = 0; i < this.ctrlPtsNum; i++) {\n            this.ctrlPts[0][i] = this.toolObject.getPoint(i);\n        }\n    }\n\n    updateCtrlPtPos() {\n        for (let i = 0; i < this.ctrlPtsNum; i++) {\n            this.ctrlPts[1][i] = this.ctrlPts[0][i].getPosXY();\n        }\n    }\n\n    getAreaPos() {\n        let pMgr = ChartManager.instance;\n        let pArea = pMgr.getArea('frame0.k0.main');\n        if (pArea === null) {\n            this.areaPos = {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            };\n            return;\n        }\n        this.areaPos = {\n            left: Math.floor(pArea.getLeft()),\n            top: Math.floor(pArea.getTop()),\n            right: Math.floor(pArea.getRight()),\n            bottom: Math.floor(pArea.getBottom())\n        };\n    }\n\n    updateDraw(context) {\n        context.strokeStyle = this.theme.getColor(themes.Theme.Color.LineColorNormal);\n        this.draw(context);\n        this.drawCtrlPt(context);\n    }\n\n    finishDraw(context) {\n        context.strokeStyle = this.theme.getColor(themes.Theme.Color.LineColorNormal);\n        this.draw(context);\n    }\n\n    highlight(context) {\n        context.strokeStyle = this.theme.getColor(themes.Theme.Color.LineColorSelected);\n        this.draw(context);\n        this.drawCtrlPt(context);\n        this.highlightCtrlPt(context);\n    }\n\n}\n\nexport class DrawStraightLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 2;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.endPoint = this.ctrlPts[1][1];\n        if (this.startPoint.x === this.endPoint.x && this.startPoint.y === this.endPoint.y) {\n            Plotter.drawLine(context, this.areaPos.left, this.startPoint.y, this.areaPos.right, this.startPoint.y);\n        } else {\n            this.crossPt = this.getRectCrossPt(this.areaPos, this.startPoint, this.endPoint);\n            Plotter.drawLine(context, this.crossPt[0].x, this.crossPt[0].y, this.crossPt[1].x, this.crossPt[1].y);\n        }\n    }\n\n}\n\nexport class DrawSegLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 2;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.endPoint = this.ctrlPts[1][1];\n        if (this.startPoint.x === this.endPoint.x && this.startPoint.y === this.endPoint.y) {\n            this.endPoint.x += 1;\n        }\n        Plotter.drawLine(context, this.startPoint.x, this.startPoint.y, this.endPoint.x, this.endPoint.y);\n    }\n\n}\n\nexport class DrawRayLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 2;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.endPoint = this.ctrlPts[1][1];\n        if (this.startPoint.x === this.endPoint.x && this.startPoint.y === this.endPoint.y) {\n            this.endPoint.x += 1;\n        }\n        this.drawRayLines(context, this.startPoint, this.endPoint);\n    }\n\n}\n\nexport class DrawArrowLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.arrowSizeRatio = 0.03;\n        this.arrowSize = 4;\n        this.crossPt = {x: -1, y: -1};\n        this.ctrlPtsNum = 2;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    drawArrow(context, startPoint, endPoint) {\n        let len = this.lenBetweenPts(startPoint, endPoint);\n        let vectorA = [endPoint.x - startPoint.x, endPoint.y - startPoint.y];\n        this.crossPt.x = startPoint.x + (1 - this.arrowSize / len) * vectorA[0];\n        this.crossPt.y = startPoint.y + (1 - this.arrowSize / len) * vectorA[1];\n        let vectorAautho = [-vectorA[1], vectorA[0]];\n        let Aautho = {x: vectorAautho[0], y: vectorAautho[1]};\n        let origin = {x: 0, y: 0};\n        vectorAautho[0] = this.arrowSize * Aautho.x / this.lenBetweenPts(Aautho, origin);\n        vectorAautho[1] = this.arrowSize * Aautho.y / this.lenBetweenPts(Aautho, origin);\n        let arrowEndPt = [this.crossPt.x + vectorAautho[0], this.crossPt.y + vectorAautho[1]];\n        Plotter.drawLine(context, endPoint.x, endPoint.y, arrowEndPt[0], arrowEndPt[1]);\n        arrowEndPt = [this.crossPt.x - vectorAautho[0], this.crossPt.y - vectorAautho[1]];\n        Plotter.drawLine(context, endPoint.x, endPoint.y, arrowEndPt[0], arrowEndPt[1]);\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.endPoint = this.ctrlPts[1][1];\n        if (this.startPoint.x === this.endPoint.x && this.startPoint.y === this.endPoint.y) {\n            this.endPoint.x += 1;\n        }\n        Plotter.drawLine(context, this.startPoint.x, this.startPoint.y, this.endPoint.x, this.endPoint.y);\n        this.drawArrow(context, this.startPoint, this.endPoint);\n    }\n\n}\n\nexport class DrawHoriStraightLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 1;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        Plotter.drawLine(context, this.areaPos.left, this.startPoint.y, this.areaPos.right, this.startPoint.y);\n    }\n\n}\n\nexport class DrawHoriRayLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 2;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.endPoint = this.ctrlPts[1][1];\n        if (this.startPoint.x === this.endPoint.x) {\n            Plotter.drawLine(context, this.startPoint.x, this.startPoint.y, this.areaPos.right, this.startPoint.y);\n        } else {\n            let tempEndPt = {x: this.endPoint.x, y: this.startPoint.y};\n            this.drawRayLines(context, this.startPoint, tempEndPt);\n        }\n    }\n\n}\n\nexport class DrawHoriSegLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 2;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.endPoint = this.ctrlPts[1][1];\n        this.endPoint.y = this.startPoint.y;\n        if (this.startPoint.x === this.endPoint.x && this.startPoint.y === this.endPoint.y) {\n            Plotter.drawLine(context, this.startPoint.x, this.startPoint.y, this.endPoint.x + 1, this.startPoint.y);\n        } else {\n            Plotter.drawLine(context, this.startPoint.x, this.startPoint.y, this.endPoint.x, this.startPoint.y);\n        }\n    }\n\n}\n\nexport class DrawVertiStraightLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 1;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        Plotter.drawLine(context, this.startPoint.x, this.areaPos.top, this.startPoint.x, this.areaPos.bottom);\n    }\n\n}\n\nexport class DrawPriceLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 1;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        context.font = \"12px Tahoma\";\n        context.textAlign = \"left\";\n        context.fillStyle = this.theme.getColor(themes.Theme.Color.LineColorNormal);\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        let text = this.ctrlPts[0][0].getPosIV().v;\n        Plotter.drawLine(context, this.startPoint.x, this.startPoint.y, this.areaPos.right, this.startPoint.y);\n        context.fillText(text.toFixed(2), this.startPoint.x + 2, this.startPoint.y - 15);\n    }\n\n}\n\nexport class ParallelLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n    }\n\n    getParaPt() {\n        let vectorA = [];\n        vectorA[0] = this.endPoint.x - this.startPoint.x;\n        vectorA[1] = this.endPoint.y - this.startPoint.y;\n        let vectorB = [];\n        vectorB[0] = this.paraStartPoint.x - this.startPoint.x;\n        vectorB[1] = this.paraStartPoint.y - this.startPoint.y;\n        this.paraEndPoint = {x: -1, y: -1};\n        this.paraEndPoint.x = vectorA[0] + vectorB[0] + this.startPoint.x;\n        this.paraEndPoint.y = vectorA[1] + vectorB[1] + this.startPoint.y;\n    }\n\n}\n\nexport class DrawBiParallelLinesPlotter extends ParallelLinesPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 3;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.paraStartPoint = this.ctrlPts[1][1];\n        this.endPoint = this.ctrlPts[1][2];\n        this.getParaPt();\n        this.getAreaPos();\n        this.crossPt0 = this.getRectCrossPt(this.areaPos, this.startPoint, this.endPoint);\n        Plotter.drawLine(context, this.crossPt0[0].x, this.crossPt0[0].y, this.crossPt0[1].x, this.crossPt0[1].y);\n        this.crossPt1 = this.getRectCrossPt(this.areaPos, this.paraStartPoint, this.paraEndPoint);\n        Plotter.drawLine(context, this.crossPt1[0].x, this.crossPt1[0].y, this.crossPt1[1].x, this.crossPt1[1].y);\n    }\n\n}\n\nexport class DrawBiParallelRayLinesPlotter extends ParallelLinesPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 3;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.paraStartPoint = this.ctrlPts[1][1];\n        this.endPoint = this.ctrlPts[1][2];\n        if (this.startPoint.x === this.endPoint.x && this.startPoint.y === this.endPoint.y) {\n            this.endPoint.x += 1;\n        }\n        this.getParaPt();\n        this.drawRayLines(context, this.startPoint, this.endPoint);\n        this.drawRayLines(context, this.paraStartPoint, this.paraEndPoint);\n    }\n\n}\n\nexport class DrawTriParallelLinesPlotter extends ParallelLinesPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 3;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.paraStartPoint = this.ctrlPts[1][1];\n        this.endPoint = this.ctrlPts[1][2];\n        let vectorA = [];\n        vectorA[0] = this.endPoint.x - this.startPoint.x;\n        vectorA[1] = this.endPoint.y - this.startPoint.y;\n        let vectorB = [];\n        vectorB[0] = this.paraStartPoint.x - this.startPoint.x;\n        vectorB[1] = this.paraStartPoint.y - this.startPoint.y;\n        this.para1EndPoint = {x: -1, y: -1};\n        this.para2EndPoint = {x: -1, y: -1};\n        this.para2StartPoint = {x: -1, y: -1};\n        this.para1EndPoint.x = vectorA[0] + vectorB[0] + this.startPoint.x;\n        this.para1EndPoint.y = vectorA[1] + vectorB[1] + this.startPoint.y;\n        this.para2StartPoint.x = this.startPoint.x - vectorB[0];\n        this.para2StartPoint.y = this.startPoint.y - vectorB[1];\n        this.para2EndPoint.x = this.endPoint.x - vectorB[0];\n        this.para2EndPoint.y = this.endPoint.y - vectorB[1];\n        this.getAreaPos();\n        this.crossPt0 = this.getRectCrossPt(this.areaPos, this.startPoint, this.endPoint);\n        Plotter.drawLine(context, this.crossPt0[0].x, this.crossPt0[0].y, this.crossPt0[1].x, this.crossPt0[1].y);\n        this.crossPt1 = this.getRectCrossPt(this.areaPos, this.paraStartPoint, this.para1EndPoint);\n        Plotter.drawLine(context, this.crossPt1[0].x, this.crossPt1[0].y, this.crossPt1[1].x, this.crossPt1[1].y);\n        this.crossPt2 = this.getRectCrossPt(this.areaPos, this.para2StartPoint, this.para2EndPoint);\n        Plotter.drawLine(context, this.crossPt2[0].x, this.crossPt2[0].y, this.crossPt2[1].x, this.crossPt2[1].y);\n    }\n\n}\n\nexport class BandLinesPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n        this.ctrlPtsNum = 2;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    drawLinesAndInfo(context, startPoint, endPoint) {\n        context.font = \"12px Tahoma\";\n        context.textAlign = \"left\";\n        context.fillStyle = this.theme.getColor(themes.Theme.Color.LineColorNormal);\n        let text;\n        if (this.toolObject.state === ctools.CToolObject.state.Draw) {\n            this.startPtValue = this.toolObject.getPoint(0).getPosIV().v;\n            this.endPtValue = this.toolObject.getPoint(1).getPosIV().v;\n        }\n        this.getAreaPos();\n        for (let i = 0; i < this.fiboSequence.length; i++) {\n            let stageY = startPoint.y + (100 - this.fiboSequence[i]) / 100 * (endPoint.y - startPoint.y);\n            if (stageY > this.areaPos.bottom)\n                continue;\n            let stageYvalue = this.startPtValue + (100 - this.fiboSequence[i]) / 100 * (this.endPtValue - this.startPtValue);\n            Plotter.drawLine(context, this.areaPos.left, stageY, this.areaPos.right, stageY);\n            text = this.fiboSequence[i].toFixed(1) + '% ' + stageYvalue.toFixed(1);\n            context.fillText(text, this.areaPos.left + 2, stageY - 15);\n        }\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.endPoint = this.ctrlPts[1][1];\n        this.drawLinesAndInfo(context, this.startPoint, this.endPoint);\n    }\n\n}\n\nexport class DrawFibRetracePlotter extends BandLinesPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.fiboSequence = [100.0, 78.6, 61.8, 50.0, 38.2, 23.6, 0.0];\n    }\n\n}\n\nexport class DrawBandLinesPlotter extends BandLinesPlotter {\n\n    constructor(name, toolObject) {\n        super(name, toolObject);\n        this.toolObject = toolObject;\n        this.fiboSequence = [0, 12.5, 25, 37.5, 50, 62.5, 75, 87.5, 100];\n    }\n\n}\n\nexport class DrawFibFansPlotter extends CToolPlotter {\n\n    constructor(name, toolObject) {\n        super(name);\n        this.toolObject = toolObject;\n        this.fiboFansSequence = [0, 38.2, 50, 61.8];\n        this.ctrlPtsNum = 2;\n        this.ctrlPts = [new Array(this.ctrlPtsNum), new Array(2)];\n        this.getCtrlPts();\n    }\n\n    drawLinesAndInfo(context, startPoint, endPoint) {\n        this.drawFibRayLines(context, startPoint, endPoint);\n    }\n\n    draw(context) {\n        this.updateCtrlPtPos();\n        this.getAreaPos();\n        this.startPoint = this.ctrlPts[1][0];\n        this.endPoint = this.ctrlPts[1][1];\n        if (this.startPoint.x === this.endPoint.x && this.startPoint.y === this.endPoint.y) {\n            this.endPoint.x += 1;\n        }\n        this.drawLinesAndInfo(context, this.startPoint, this.endPoint);\n    }\n\n}\n\nexport class CDynamicLinePlotter extends NamedObject {\n\n    constructor(name) {\n        super(name);\n        this.flag = true;\n        this.context = ChartManager.instance._overlayContext;\n    }\n\n    getAreaPos() {\n        let pMgr = ChartManager.instance;\n        let pArea = pMgr.getArea('frame0.k0.main');\n        if (pArea === null) {\n            this.areaPos = {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            };\n            return;\n        }\n        this.areaPos = {\n            left: Math.floor(pArea.getLeft()),\n            top: Math.floor(pArea.getTop()),\n            right: Math.floor(pArea.getRight()),\n            bottom: Math.floor(pArea.getBottom())\n        };\n    }\n\n    Draw(context) {\n        this.getAreaPos();\n        let pMgr = ChartManager.instance;\n        let pTDP = pMgr.getDataSource(this.getDataSourceName());\n        if (pTDP === null || !Util.isInstance(pTDP, data_sources.MainDataSource))\n            return;\n        this.context.save();\n        this.context.rect(this.areaPos.left, this.areaPos.top, this.areaPos.right - this.areaPos.left, this.areaPos.bottom - this.areaPos.top);\n        this.context.clip();\n        let count = pTDP.getToolObjectCount();\n        for (let i = 0; i < count; i++) {\n            let toolObject = pTDP.getToolObject(i);\n            let state = toolObject.getState();\n            switch (state) {\n                case ctools.CToolObject.state.BeforeDraw:\n                    toolObject.getPlotter().theme = ChartManager.instance.getTheme(this.getFrameName());\n                    toolObject.getPlotter().drawCursor(this.context);\n                    break;\n                case ctools.CToolObject.state.Draw:\n                    toolObject.getPlotter().theme = ChartManager.instance.getTheme(this.getFrameName());\n                    toolObject.getPlotter().updateDraw(this.context);\n                    break;\n                case ctools.CToolObject.state.AfterDraw:\n                    toolObject.getPlotter().theme = ChartManager.instance.getTheme(this.getFrameName());\n                    toolObject.getPlotter().finishDraw(this.context);\n                    break;\n                default:\n                    break;\n            }\n        }\n        let sel = pTDP.getSelectToolObjcet();\n        if (sel !== null && sel !== ctools.CToolObject.state.Draw)\n            sel.getPlotter().highlight(this.context);\n        this.context.restore();\n\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/plotters.js","import {ChartManager} from './chart_manager'\nimport {NamedObject} from './named_object'\nimport {CPoint} from './cpoint'\nimport {Util} from './util'\nimport * as data_sources from './data_sources'\nimport * as plotters from './plotters'\n\nexport class CToolObject extends NamedObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = null;\n        this.state = CToolObject.state.BeforeDraw;\n        this.points = [];\n        this.step = 0;\n    }\n\n    getChartObjects() {\n        let ppMgr = ChartManager.instance;\n        let ppCDS = ppMgr.getDataSource(\"frame0.k0\");\n        if (ppCDS === null || !Util.isInstance(ppCDS, data_sources.MainDataSource))\n            return null;\n        let ppTimeline = ppMgr.getTimeline(\"frame0.k0\");\n        if (ppTimeline === null)\n            return null;\n        let ppArea = ppMgr.getArea('frame0.k0.main');\n        if (ppArea === null)\n            return null;\n        let ppRange = ppMgr.getRange(\"frame0.k0.main\");\n        if (ppRange === null)\n            return null;\n        return {pMgr: ppMgr, pCDS: ppCDS, pTimeline: ppTimeline, pArea: ppArea, pRange: ppRange};\n    }\n\n    isValidMouseXY(x, y) {\n        let pObj = this.getChartObjects();\n        let areaPos = {\n            left: pObj.pArea.getLeft(),\n            top: pObj.pArea.getTop(),\n            right: pObj.pArea.getRight(),\n            bottom: pObj.pArea.getBottom()\n        };\n        return !(x < areaPos.left || x > areaPos.right ||\n            y < areaPos.top || y > areaPos.bottom);\n    }\n\n    getPlotter() {\n        return this.drawer;\n    }\n\n    setState(s) {\n        this.state = s;\n    }\n\n    getState() {\n        return this.state;\n    }\n\n    addPoint(point) {\n        this.points.push(point);\n    }\n\n    getPoint(i) {\n        return this.points[i];\n    }\n\n    acceptMouseMoveEvent(x, y) {\n        if (this.isValidMouseXY(x, y) === false) {\n            return false;\n        }\n        if (this.state === CToolObject.state.BeforeDraw) {\n            this.setBeforeDrawPos(x, y);\n        } else if (this.state === CToolObject.state.Draw) {\n            this.setDrawPos(x, y);\n        } else if (this.state === CToolObject.state.AfterDraw) {\n            this.setAfterDrawPos(x, y);\n        }\n        return true;\n    }\n\n    acceptMouseDownEvent(x, y) {\n        if (this.isValidMouseXY(x, y) === false) {\n            return false;\n        }\n        if (this.state === CToolObject.state.BeforeDraw) {\n            this.setDrawPos(x, y);\n            this.setState(CToolObject.state.Draw);\n        } else if (this.state === CToolObject.state.Draw) {\n            this.setAfterDrawPos(x, y);\n            if (this.step === 0)\n                this.setState(CToolObject.state.AfterDraw);\n        } else if (this.state === CToolObject.state.AfterDraw) {\n            if (CToolObject.prototype.isSelected(x, y)) {\n                this.setDrawPos(x, y);\n                this.setState(CToolObject.state.Draw);\n            } else {\n                this.oldx = x;\n                this.oldy = y;\n            }\n        }\n        return true;\n    }\n\n    acceptMouseDownMoveEvent(x, y) {\n        if (this.isValidMouseXY(x, y) === false) {\n            return false;\n        }\n        if (this.state === CToolObject.state.Draw) {\n            this.setDrawPos(x, y);\n        } else if (this.state === CToolObject.state.AfterDraw) {\n            let pObj = this.getChartObjects();\n            let _width = pObj.pTimeline.getItemWidth();\n            let _height = pObj.pRange;\n            if (Math.abs(x - this.oldx) < _width && Math.abs(y - this.oldy) === 0)\n                return true;\n            let _old_x = pObj.pTimeline.toIndex(this.oldx);\n            let _old_y = pObj.pRange.toValue(this.oldy);\n            let _new_x = pObj.pTimeline.toIndex(x);\n            let _new_y = pObj.pRange.toValue(y);\n            this.oldx = x;\n            this.oldy = y;\n            let _dif_x = _new_x - _old_x;\n            let _dif_y = _new_y - _old_y;\n            for (let index in this.points) {\n                this.points[index].pos.index += _dif_x;\n                this.points[index].pos.value += _dif_y;\n            }\n        }\n        return true;\n    }\n\n    acceptMouseUpEvent(x, y) {\n        if (this.isValidMouseXY(x, y) === false) {\n            return false;\n        }\n        if (this.state === CToolObject.state.Draw) {\n            this.setAfterDrawPos(x, y);\n            if (this.step === 0)\n                this.setState(CToolObject.state.AfterDraw);\n            return true;\n        }\n        return false;\n    }\n\n    setBeforeDrawPos(x, y) {\n        for (let index in this.points) {\n            this.points[index].setPosXY(x, y);\n            this.points[index].setState(CPoint.state.Show);\n        }\n    }\n\n    setDrawPos(x, y) {\n        for (let index in this.points) {\n            if (this.points[index].getState() === CPoint.state.Highlight) {\n                this.points[index].setPosXY(x, y);\n            }\n        }\n    }\n\n    setAfterDrawPos(x, y) {\n        if (this.step !== 0) {\n            this.step -= 1;\n        }\n        for (let index in this.points) {\n            this.points[index].setState(CPoint.state.Hide);\n        }\n        if (this.step === 0) {\n            let pObj = this.getChartObjects();\n            pObj.pMgr.setNormalMode();\n        }\n    }\n\n    isSelected(x, y) {\n        let isFind = false;\n        for (let index in this.points) {\n            if (this.points[index].isSelected(x, y)) {\n                this.points[index].setState(CPoint.state.Highlight);\n                isFind = true;\n                break;\n            }\n        }\n        if (isFind === true) {\n            this.select();\n            return true;\n        }\n        return false;\n    }\n\n    select() {\n        for (let index in this.points) {\n            if (this.points[index].getState() === CPoint.state.Hide) {\n                this.points[index].setState(CPoint.state.Show);\n            }\n        }\n    }\n\n    unselect() {\n        for (let index in this.points) {\n            if (this.points[index].getState() !== CPoint.state.Hide) {\n                this.points[index].setState(CPoint.state.Hide);\n            }\n        }\n    }\n\n    calcDistance(point1, point2, point3) {\n        let xa = point1.getPosXY().x;\n        let ya = point1.getPosXY().y;\n        let xb = point2.getPosXY().x;\n        let yb = point2.getPosXY().y;\n        let xc = point3.getPosXY().x;\n        let yc = point3.getPosXY().y;\n        let a1 = xa - xc;\n        let a2 = ya - yc;\n        let b1 = xb - xc;\n        let b2 = yb - yc;\n        let area = Math.abs(a1 * b2 - a2 * b1);\n        let len = Math.sqrt(Math.pow((xb - xa), 2) + Math.pow((yb - ya), 2));\n        return area / len;\n    }\n\n    calcGap(r, x, y) {\n        let xa = r.sx;\n        let ya = r.sy;\n        let xb = r.ex;\n        let yb = r.ey;\n        let xc = x;\n        let yc = y;\n        let a1 = xa - xc;\n        let a2 = ya - yc;\n        let b1 = xb - xc;\n        let b2 = yb - yc;\n        let area = Math.abs(a1 * b2 - a2 * b1);\n        let len = Math.sqrt(Math.pow((xb - xa), 2) + Math.pow((yb - ya), 2));\n        return area / len;\n    }\n\n    isWithRect(point1, point2, point3) {\n        let sx = point1.getPosXY().x;\n        let sy = point1.getPosXY().y;\n        let ex = point2.getPosXY().x;\n        let ey = point2.getPosXY().y;\n        let x = point3.getPosXY().x;\n        let y = point3.getPosXY().y;\n        if (sx > ex) {\n            sx += 4;\n            ex -= 4;\n        } else {\n            sx -= 4;\n            ex += 4;\n        }\n        if (sy > ey) {\n            sy += 4;\n            ey -= 4;\n        } else {\n            sy -= 4;\n            ey += 4;\n        }\n        if (sx <= x && ex >= x && sy <= y && ey >= y) {\n            return true;\n        }\n        if (sx >= x && ex <= x && sy <= y && ey >= y) {\n            return true;\n        }\n        if (sx <= x && ex >= x && sy >= y && ey <= y) {\n            return true;\n        }\n        if (sx >= x && ex <= x && sy >= y && ey <= y) {\n            return true;\n        }\n        return false;\n    }\n\n}\nCToolObject.state = {\n    BeforeDraw: 0,\n    Draw: 1,\n    AfterDraw: 2\n};\n\n\nexport class CBiToolObject extends CToolObject {\n\n    constructor(name) {\n        super(name);\n        this.addPoint(new CPoint(name));\n        this.addPoint(new CPoint(name));\n    }\n\n    setBeforeDrawPos(x, y) {\n        this.step = 1;\n        super.setBeforeDrawPos(x, y);\n        this.getPoint(0).setState(CPoint.state.Show);\n        this.getPoint(1).setState(CPoint.state.Highlight);\n    }\n\n}\n\nexport class CTriToolObject extends CToolObject {\n\n    constructor(name) {\n        super(name);\n        this.addPoint(new CPoint(name));\n        this.addPoint(new CPoint(name));\n        this.addPoint(new CPoint(name));\n    }\n\n    setBeforeDrawPos(x, y) {\n        this.step = 2;\n        super.setBeforeDrawPos(x, y);\n        this.getPoint(0).setState(CPoint.state.Show);\n        this.getPoint(1).setState(CPoint.state.Show);\n        this.getPoint(2).setState(CPoint.state.Highlight);\n    }\n\n    setAfterDrawPos(x, y) {\n        if (this.step !== 0)\n            this.step -= 1;\n        if (this.step === 0) {\n            for (let index in this.points) {\n                this.points[index].setState(CPoint.state.Hide);\n            }\n        } else {\n            this.getPoint(0).setState(CPoint.state.Show);\n            this.getPoint(1).setState(CPoint.state.Highlight);\n            this.getPoint(2).setState(CPoint.state.Show);\n        }\n        if (this.step === 0) {\n            let pObj = this.getChartObjects();\n            pObj.pMgr.setNormalMode();\n        }\n    }\n\n}\n\n\nexport class CBandLineObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawBandLinesPlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sx = this.getPoint(0).getPosXY().x;\n        let sy = this.getPoint(0).getPosXY().y;\n        let ex = this.getPoint(1).getPosXY().x;\n        let ey = this.getPoint(1).getPosXY().y;\n        let fibSequence = [100.0, 87.5, 75.0, 62.5, 50.0, 37.5, 25.0, 12.5, 0.0];\n        for (let i = 0; i < fibSequence.length; i++) {\n            let stage_y = sy + (100 - fibSequence[i]) / 100 * (ey - sy);\n            if (stage_y < y + 4 && stage_y > y - 4) {\n                this.select();\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\n\nexport class CBiParallelLineObject extends CTriToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawBiParallelLinesPlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let _0x = this.getPoint(0).getPosXY().x;\n        let _0y = this.getPoint(0).getPosXY().y;\n        let _1x = this.getPoint(1).getPosXY().x;\n        let _1y = this.getPoint(1).getPosXY().y;\n        let _2x = this.getPoint(2).getPosXY().x;\n        let _2y = this.getPoint(2).getPosXY().y;\n        let _a = {x: _0x - _1x, y: _0y - _1y};\n        let _b = {x: _0x - _2x, y: _0y - _2y};\n        let _c = {x: _a.x + _b.x, y: _a.y + _b.y};\n        let _3x = _0x - _c.x;\n        let _3y = _0y - _c.y;\n        let r1 = {sx: _0x, sy: _0y, ex: _2x, ey: _2y};\n        let r2 = {sx: _1x, sy: _1y, ex: _3x, ey: _3y};\n        if (this.calcGap(r1, x, y) > 4 && this.calcGap(r2, x, y) > 4) {\n            return false;\n        }\n        return true;\n    }\n\n}\n\n\nexport class CBiParallelRayLineObject extends CTriToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawBiParallelRayLinesPlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let _0x = this.getPoint(0).getPosXY().x;\n        let _0y = this.getPoint(0).getPosXY().y;\n        let _1x = this.getPoint(1).getPosXY().x;\n        let _1y = this.getPoint(1).getPosXY().y;\n        let _2x = this.getPoint(2).getPosXY().x;\n        let _2y = this.getPoint(2).getPosXY().y;\n        let _a = {x: _0x - _1x, y: _0y - _1y};\n        let _b = {x: _0x - _2x, y: _0y - _2y};\n        let _c = {x: _a.x + _b.x, y: _a.y + _b.y};\n        let _3x = _0x - _c.x;\n        let _3y = _0y - _c.y;\n        let r1 = {sx: _0x, sy: _0y, ex: _2x, ey: _2y};\n        let r2 = {sx: _1x, sy: _1y, ex: _3x, ey: _3y};\n        if ((r1.ex > r1.sx && x > r1.sx - 4) || (r1.ex < r1.sx && x < r1.sx + 4) ||\n            (r2.ex > r2.sx && x > r2.sx - 4) || (r2.ex < r2.sx && x < r2.sx + 4)) {\n            if (this.calcGap(r1, x, y) > 4 && this.calcGap(r2, x, y) > 4) {\n                return false;\n            }\n        } else {\n            return false;\n        }\n        this.select();\n        return true;\n    }\n\n}\n\n\nexport class CFibFansObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawFibFansPlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sx = this.getPoint(0).getPosXY().x;\n        let sy = this.getPoint(0).getPosXY().y;\n        let ex = this.getPoint(1).getPosXY().x;\n        let ey = this.getPoint(1).getPosXY().y;\n        let pObj = this.getChartObjects();\n        let areaPos = {\n            left: pObj.pArea.getLeft(),\n            top: pObj.pArea.getTop(),\n            right: pObj.pArea.getRight(),\n            bottom: pObj.pArea.getBottom()\n        };\n        let fibFansSequence = [0, 38.2, 50, 61.8];\n        for (let i = 0; i < fibFansSequence.length; i++) {\n            let stageY = sy + (100 - fibFansSequence[i]) / 100 * (ey - sy);\n            let tempStartPt = {x: sx, y: sy};\n            let tempEndPt = {x: ex, y: stageY};\n            let crossPt = this.getRectCrossPt(areaPos, tempStartPt, tempEndPt);\n            let lenToStartPt = Math.pow((crossPt[0].x - sx), 2) + Math.pow((crossPt[0].y - sy), 2);\n            let lenToEndPt = Math.pow((crossPt[0].x - ex), 2) + Math.pow((crossPt[0].y - ey), 2);\n            let tempCrossPt = lenToStartPt > lenToEndPt ? {x: crossPt[0].x, y: crossPt[0].y} : {\n                x: crossPt[1].x,\n                y: crossPt[1].y\n            };\n            if (tempCrossPt.x > sx && x < sx)\n                continue;\n            if (tempCrossPt.x < sx && x > sx)\n                continue;\n            let a = new CPoint(\"frame0.k0\");\n            a.setPosXY(sx, sy);\n            let b = new CPoint(\"frame0.k0\");\n            b.setPosXY(tempCrossPt.x, tempCrossPt.y);\n            if (this.calcDistance(a, b, c) > 4) {\n                continue;\n            }\n            this.select();\n            return true;\n        }\n        return false;\n    }\n\n}\n\n\nexport class CFibRetraceObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawFibRetracePlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sx = this.getPoint(0).getPosXY().x;\n        let sy = this.getPoint(0).getPosXY().y;\n        let ex = this.getPoint(1).getPosXY().x;\n        let ey = this.getPoint(1).getPosXY().y;\n        let fibSequence = [100.0, 78.6, 61.8, 50.0, 38.2, 23.6, 0.0];\n        for (let i = 0; i < fibSequence.length; i++) {\n            let stage_y = sy + (100 - fibSequence[i]) / 100 * (ey - sy);\n            if (stage_y < y + 4 && stage_y > y - 4) {\n                this.select();\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\n\nexport class CHoriRayLineObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawHoriRayLinesPlotter(name, this);\n    }\n\n    setDrawPos(x, y) {\n        if (this.points[0].getState() === CPoint.state.Highlight) {\n            this.points[0].setPosXY(x, y);\n            this.points[1].setPosXYNoSnap(this.points[1].getPosXY().x, this.points[0].getPosXY().y);\n            return;\n        }\n        if (this.points[1].getState() === CPoint.state.Highlight) {\n            this.points[1].setPosXY(x, y);\n            this.points[0].setPosXYNoSnap(this.points[0].getPosXY().x, this.points[1].getPosXY().y);\n        }\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sy = this.getPoint(0).getPosXY().y;\n        let sx = this.getPoint(0).getPosXY().x;\n        let ex = this.getPoint(1).getPosXY().x;\n        if (y > sy + 4 || y < sy - 4) {\n            return false;\n        }\n        if (ex > sx && x < sx - 4) {\n            return false;\n        }\n        if (ex < sx && x > sx + 4) {\n            return false;\n        }\n        this.select();\n        return true;\n    }\n\n}\n\n\nexport class CHoriSegLineObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawHoriSegLinesPlotter(name, this);\n    }\n\n    setDrawPos(x, y) {\n        if (this.points[0].getState() === CPoint.state.Highlight) {\n            this.points[0].setPosXY(x, y);\n            this.points[1].setPosXYNoSnap(this.points[1].getPosXY().x, this.points[0].getPosXY().y);\n            return;\n        }\n        if (this.points[1].getState() === CPoint.state.Highlight) {\n            this.points[1].setPosXY(x, y);\n            this.points[0].setPosXYNoSnap(this.points[0].getPosXY().x, this.points[1].getPosXY().y);\n        }\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sy = this.getPoint(0).getPosXY().y;\n        let sx = this.getPoint(0).getPosXY().x;\n        let ex = this.getPoint(1).getPosXY().x;\n        if (y > sy + 4 || y < sy - 4) {\n            return false;\n        }\n        if (sx > ex && (x > sx + 4 || x < ex - 4)) {\n            return false;\n        }\n        if (sx < ex && (x < sx - 4 || x > ex + 4)) {\n            return false;\n        }\n        this.select();\n        return true;\n    }\n\n}\n\n\nexport class CHoriStraightLineObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawHoriStraightLinesPlotter(name, this);\n    }\n\n    setDrawPos(x, y) {\n        for (let index in this.points) {\n            this.points[index].setPosXY(x, y);\n        }\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sy = this.getPoint(0).getPosXY().y;\n        if (y > sy + 4 || y < sy - 4) {\n            return false;\n        }\n        this.select();\n        return true;\n    }\n\n}\n\n\nexport class CRayLineObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawRayLinesPlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sx = this.getPoint(0).getPosXY().x;\n        let ex = this.getPoint(1).getPosXY().x;\n        if (ex > sx && x < sx - 4) {\n            return false;\n        }\n        if (ex < sx && x > sx + 4) {\n            return false;\n        }\n        if (this.calcDistance(this.getPoint(0), this.getPoint(1), c) < 4) {\n            this.select();\n            return true;\n        }\n        return false;\n    }\n\n}\n\n\nexport class CSegLineObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawSegLinesPlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        if (this.isWithRect(this.getPoint(0), this.getPoint(1), c) === false) {\n            return false;\n        }\n        if (this.calcDistance(this.getPoint(0), this.getPoint(1), c) < 4) {\n            this.select();\n            return true;\n        }\n        return false;\n    }\n\n}\n\n\nexport class CStraightLineObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawStraightLinesPlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        if (this.calcDistance(this.getPoint(0), this.getPoint(1), c) < 4) {\n            this.select();\n            return true;\n        }\n        return false;\n    }\n\n}\n\n\nexport class CTriParallelLineObject extends CTriToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawTriParallelLinesPlotter(name, this);\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let pObj = this.getChartObjects();\n        let _0x = this.getPoint(0).getPosXY().x;\n        let _0y = this.getPoint(0).getPosXY().y;\n        let _1x = this.getPoint(1).getPosXY().x;\n        let _1y = this.getPoint(1).getPosXY().y;\n        let _2x = this.getPoint(2).getPosXY().x;\n        let _2y = this.getPoint(2).getPosXY().y;\n        let _a = {x: _0x - _1x, y: _0y - _1y};\n        let _b = {x: _0x - _2x, y: _0y - _2y};\n        let _c = {x: _a.x + _b.x, y: _a.y + _b.y};\n        let _3x = _0x - _c.x;\n        let _3y = _0y - _c.y;\n        let r1 = {sx: _0x, sy: _0y, ex: _2x, ey: _2y};\n        let r2 = {sx: _1x, sy: _1y, ex: _3x, ey: _3y};\n        let _i = {x: _0x - _1x, y: _0y - _1y};\n        let _j = {x: _2x - _3x, y: _2y - _3y};\n        let _ri = {x: _1x - _0x, y: _1y - _0y};\n        let _rj = {x: _3x - _2x, y: _3y - _2y};\n        let _4x = Math.abs(_ri.x - _0x);\n        let _4y = Math.abs(_ri.y - _0y);\n        let _5x = Math.abs(_rj.x - _2x);\n        let _5y = Math.abs(_rj.y - _2y);\n        let r3 = {sx: _4x, sy: _4y, ex: _5x, ey: _5y};\n        if (this.calcGap(r1, x, y) > 4 &&\n            this.calcGap(r2, x, y) > 4 &&\n            this.calcGap(r3, x, y) > 4) {\n            return false;\n        }\n        this.select();\n        return true;\n    }\n\n}\n\n\nexport class CVertiStraightLineObject extends CBiToolObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawVertiStraightLinesPlotter(name, this);\n    }\n\n    setDrawPos(x, y) {\n        for (let index in this.points) {\n            this.points[index].setPosXY(x, y);\n        }\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sx = this.getPoint(0).getPosXY().x;\n        if (x > sx + 4 || x < sx - 4) {\n            return false;\n        }\n        this.select();\n        return true;\n    }\n\n}\n\n\nexport class CPriceLineObject extends CSegLineObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawPriceLinesPlotter(name, this);\n    }\n\n    setDrawPos(x, y) {\n        for (let index in this.points) {\n            this.points[index].setPosXY(x, y);\n        }\n    }\n\n    isSelected(x, y) {\n        if (super.isSelected(x, y) === true) {\n            return true;\n        }\n        let c = new CPoint(\"frame0.k0\");\n        c.setPosXY(x, y);\n        let sx = this.getPoint(0).getPosXY().x;\n        let sy = this.getPoint(0).getPosXY().y;\n        let ex = this.getPoint(1).getPosXY().x;\n        let ey = this.getPoint(1).getPosXY().y;\n        if (x < sx - 4) {\n            return false;\n        }\n        if (y >= sy + 4 || y <= sy - 4) {\n            return false;\n        }\n        this.select();\n        return true;\n    }\n\n}\n\n\nexport class CArrowLineObject extends CSegLineObject {\n\n    constructor(name) {\n        super(name);\n        this.drawer = new plotters.DrawArrowLinesPlotter(name, this);\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/ctools.js","import {ChartManager} from './chart_manager'\nimport {NamedObject} from './named_object'\nimport * as data_sources from './data_sources'\nimport {Util} from './util'\n\nexport class CPoint extends NamedObject {\n\n    constructor(name) {\n        super(name);\n        this.pos = {index: -1, value: -1};\n\n        this.state = CPoint.state.Hide;\n    }\n\n    getChartObjects() {\n        let ppMgr = ChartManager.instance;\n        let ppCDS = ppMgr.getDataSource(\"frame0.k0\");\n        if (ppCDS === null || !Util.isInstance(ppCDS, data_sources.MainDataSource))\n            return null;\n        let ppTimeline = ppMgr.getTimeline(\"frame0.k0\");\n        if (ppTimeline === null)\n            return null;\n        let ppRange = ppMgr.getRange(\"frame0.k0.main\");\n        if (ppRange === null)\n            return null;\n        return {pMgr: ppMgr, pCDS: ppCDS, pTimeline: ppTimeline, pRange: ppRange};\n    }\n\n    setPosXY(x, y) {\n        let pObj = this.getChartObjects();\n        let i = pObj.pTimeline.toIndex(x);\n        let v = pObj.pRange.toValue(y);\n        let result = this.snapValue(i, v);\n        if (result !== null)\n            v = result;\n        this.setPosIV(i, v);\n    }\n\n    setPosXYNoSnap(x, y) {\n        let pObj = this.getChartObjects();\n        let i = pObj.pTimeline.toIndex(x);\n        let v = pObj.pRange.toValue(y);\n        this.setPosIV(i, v);\n    }\n\n    setPosIV(i, v) {\n        this.pos = {index: i, value: v};\n    }\n\n    getPosXY() {\n        let pObj = this.getChartObjects();\n        let _x = pObj.pTimeline.toItemCenter(this.pos.index);\n        let _y = pObj.pRange.toY(this.pos.value);\n        return {x: _x, y: _y};\n    }\n\n    getPosIV() {\n        return {i: this.pos.index, v: this.pos.value};\n    }\n\n    setState(s) {\n        this.state = s;\n    }\n\n    getState() {\n        return this.state;\n    }\n\n    isSelected(x, y) {\n        let xy = this.getPosXY();\n        if (x < xy.x - 4 || x > xy.x + 4 || y < xy.y - 4 || y > xy.y + 4)\n            return false;\n        this.setState(CPoint.state.Highlight);\n        return true;\n    }\n\n    snapValue(i, v) {\n        let pObj = this.getChartObjects();\n        let result = null;\n        let first = Math.floor(pObj.pTimeline.getFirstIndex());\n        let last = Math.floor(pObj.pTimeline.getLastIndex());\n        if (i < first || i > last)\n            return result;\n        let y = pObj.pRange.toY(v);\n        let pData = pObj.pCDS.getDataAt(i);\n        if (pData === null || pData === undefined)\n            return result;\n        let pDataPre = null;\n        if (i > 0)\n            pDataPre = pObj.pCDS.getDataAt(i - 1);\n        else\n            pDataPre = pObj.pCDS.getDataAt(i);\n        let candleStickStyle = pObj.pMgr.getChartStyle(pObj.pCDS.getFrameName());\n        let open = pObj.pRange.toY(pData.open);\n        let high = pObj.pRange.toY(pData.high);\n        let low = pObj.pRange.toY(pData.low);\n        let close = pObj.pRange.toY(pData.close);\n        if (candleStickStyle === \"CandleStickHLC\") {\n            open = pObj.pRange.toY(pDataPre.close);\n        }\n        let dif_open = Math.abs(open - y);\n        let dif_high = Math.abs(high - y);\n        let dif_low = Math.abs(low - y);\n        let dif_close = Math.abs(close - y);\n        if (dif_open <= dif_high && dif_open <= dif_low && dif_open <= dif_close) {\n            if (dif_open < 6)\n                result = pData.open;\n        }\n        if (dif_high <= dif_open && dif_high <= dif_low && dif_high <= dif_close) {\n            if (dif_high < 6)\n                result = pData.high;\n        }\n        if (dif_low <= dif_open && dif_low <= dif_high && dif_low <= dif_close) {\n            if (dif_low < 6)\n                result = pData.low;\n        }\n        if (dif_close <= dif_open && dif_close <= dif_high && dif_close <= dif_low) {\n            if (dif_close < 6)\n                result = pData.close;\n        }\n        return result;\n    }\n\n}\n\nCPoint.state = {\n    Hide: 0,\n    Show: 1,\n    Highlight: 2\n};\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/cpoint.js","import {NamedObject} from './named_object'\nimport {CPoint} from './cpoint'\nimport * as ctools from './ctools'\n\nexport class CToolManager extends NamedObject {\n\n    constructor(name) {\n        super(name);\n        this.selectedObject = -1;\n        this.toolObjects = [];\n    }\n\n    getToolObjectCount() {\n        return this.toolObjects.length;\n    }\n\n    addToolObject(o) {\n        this.toolObjects.push(o);\n    }\n\n    getToolObject(i) {\n        if (i < this.toolObjects.length && i >= 0) {\n            return this.toolObjects[i];\n        }\n        return null;\n    }\n\n    getCurrentObject() {\n        return this.getToolObject(this.getToolObjectCount() - 1);\n    }\n\n    getSelectedObject() {\n        return this.getToolObject(this.selectedObject);\n    }\n\n    delCurrentObject() {\n        this.toolObjects.splice(this.getToolObjectCount() - 1, 1);\n    }\n\n    delSelectedObject() {\n        this.toolObjects.splice(this.selectedObject, 1);\n        this.selectedObject = -1;\n    }\n\n    acceptMouseMoveEvent(x, y) {\n        if (this.selectedObject === -1) {\n            let curr = this.toolObjects[this.getToolObjectCount() - 1];\n            if (curr !== null && curr !== undefined && curr.getState() !== ctools.CToolObject.state.AfterDraw)\n                return curr.acceptMouseMoveEvent(x, y);\n        } else {\n            let sel = this.toolObjects[this.selectedObject];\n            if (sel.getState() === ctools.CToolObject.state.Draw) {\n                return sel.acceptMouseMoveEvent(x, y);\n            }\n            sel.unselect();\n            this.selectedObject = -1;\n        }\n        for (let index in this.toolObjects) {\n            if (this.toolObjects[index].isSelected(x, y)) {\n                this.selectedObject = index;\n                return false;\n            }\n        }\n        return false;\n    }\n\n    acceptMouseDownEvent(x, y) {\n        this.mouseDownMove = false;\n        if (this.selectedObject === -1) {\n            let curr = this.toolObjects[this.getToolObjectCount() - 1];\n            if (curr !== null && curr !== undefined && curr.getState() !== ctools.CToolObject.state.AfterDraw)\n                return curr.acceptMouseDownEvent(x, y);\n        } else {\n            let sel = this.toolObjects[this.selectedObject];\n            if (sel.getState() !== ctools.CToolObject.state.BeforeDraw)\n                return sel.acceptMouseDownEvent(x, y);\n        }\n        return false;\n    }\n\n    acceptMouseDownMoveEvent(x, y) {\n        this.mouseDownMove = true;\n        if (this.selectedObject === -1) {\n            let curr = this.toolObjects[this.getToolObjectCount() - 1];\n            if (curr !== null && curr !== undefined && curr.getState() === ctools.CToolObject.state.Draw)\n                return curr.acceptMouseDownMoveEvent(x, y);\n            return false;\n        } else {\n            let sel = this.toolObjects[this.selectedObject];\n            if (sel.getState() !== ctools.CToolObject.state.BeforeDraw) {\n                if (sel.acceptMouseDownMoveEvent(x, y) === true) {\n                    let point = this.toolObjects[this.selectedObject].points;\n                    for (let i = 0; i < point.length; i++) {\n                        if (point[i].state === CPoint.state.Highlight || point[i].state === CPoint.state.Show) {\n                            return true;\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n    }\n\n    acceptMouseUpEvent(x, y) {\n        if (this.mouseDownMove === true) {\n            if (this.selectedObject === -1) {\n                let curr = this.toolObjects[this.getToolObjectCount() - 1];\n                if (curr !== null && curr !== undefined && curr.getState() === ctools.CToolObject.state.Draw)\n                    return curr.acceptMouseUpEvent(x, y);\n                return true;\n            } else {\n                let sel = this.toolObjects[this.selectedObject];\n                if (sel.getState() !== ctools.CToolObject.state.BeforeDraw)\n                    return sel.acceptMouseUpEvent(x, y);\n            }\n        }\n        if (this.selectedObject !== -1) {\n            return true;\n        }\n        let curr = this.toolObjects[this.getToolObjectCount() - 1];\n        if (curr !== null && curr !== undefined) {\n            if (curr.getState() === ctools.CToolObject.state.Draw)\n                return true;\n            if (!curr.isValidMouseXY(x, y)) {\n                return false;\n            }\n            if (curr.isSelected(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/ctool_manager.js","import {NamedObject} from './named_object'\nimport {CToolManager} from './ctool_manager'\nimport Kline from './kline'\n\n\n\nexport class DataSource extends NamedObject {\n\n    constructor(name) {\n        super(name);\n    }\n\n    getUpdateMode() {\n        return this._updateMode;\n    }\n\n    setUpdateMode(mode) {\n        this._updateMode = mode;\n    }\n\n    getCacheSize() {\n        return 0;\n    }\n\n    getDataCount() {\n        return 0;\n    }\n\n    getDataAt(index) {\n        return this._dataItems[index];\n    }\n\n}\nDataSource.UpdateMode = {\n    DoNothing: 0,\n    Refresh: 1,\n    Update: 2,\n    Append: 3\n};\n\n\nexport class MainDataSource extends DataSource {\n\n    constructor(name) {\n        super(name);\n        this._erasedCount = 0;\n        this._dataItems = [];\n        this._decimalDigits = 0;\n        this.toolManager = new CToolManager(name);\n    }\n\n    getCacheSize() {\n        return this._dataItems.length;\n    }\n\n    getDataCount() {\n        return this._dataItems.length;\n    }\n\n    getUpdatedCount() {\n        return this._updatedCount;\n    }\n\n    getAppendedCount() {\n        return this._appendedCount;\n    }\n\n    getErasedCount() {\n        return this._erasedCount;\n    }\n\n    getDecimalDigits() {\n        return this._decimalDigits;\n    }\n\n    calcDecimalDigits(v) {\n        let str = \"\" + v;\n        let i = str.indexOf('.');\n        if (i < 0) {\n            return 0;\n        }\n        return (str.length - 1) - i;\n    }\n\n    getLastDate() {\n        let count = this.getDataCount();\n        if (count < 1) {\n            return -1;\n        }\n        return this.getDataAt(count - 1).date;\n    }\n\n    getDataAt(index) {\n        return this._dataItems[index];\n    }\n\n    update(data) {\n        this._updatedCount = 0;\n        this._appendedCount = 0;\n        this._erasedCount = 0;\n        let len = this._dataItems.length;\n        if (len > 0) {\n            let lastIndex = len - 1;\n            let lastItem = this._dataItems[lastIndex];\n            let e, i, cnt = data.length;\n            for (i = 0; i < cnt; i++) {\n                e = data[i];\n                if (e[0] === lastItem.date) {\n                    if (lastItem.open === e[1] &&\n                        lastItem.high === e[2] &&\n                        lastItem.low === e[3] &&\n                        lastItem.close === e[4] &&\n                        lastItem.volume === e[5]) {\n                        this.setUpdateMode(DataSource.UpdateMode.DoNothing);\n                    } else {\n                        this.setUpdateMode(DataSource.UpdateMode.Update);\n                        this._dataItems[lastIndex] = {\n                            date: e[0],\n                            open: e[1],\n                            high: e[2],\n                            low: e[3],\n                            close: e[4],\n                            volume: e[5]\n                        };\n                        this._updatedCount++;\n                    }\n                    i++;\n                    if (i < cnt) {\n                        this.setUpdateMode(DataSource.UpdateMode.Append);\n                        for (; i < cnt; i++, this._appendedCount++) {\n                            e = data[i];\n                            this._dataItems.push({\n                                date: e[0],\n                                open: e[1],\n                                high: e[2],\n                                low: e[3],\n                                close: e[4],\n                                volume: e[5]\n                            });\n                        }\n                    }\n                    return true;\n                }\n            }\n            if (cnt < Kline.instance.limit) {\n                this.setUpdateMode(DataSource.UpdateMode.DoNothing);\n                return false;\n            }\n        }\n        this.setUpdateMode(DataSource.UpdateMode.Refresh);\n        this._dataItems = [];\n        let d, n, e, i, cnt = data.length;\n        for (i = 0; i < cnt; i++) {\n            e = data[i];\n            for (n = 1; n <= 4; n++) {\n                d = this.calcDecimalDigits(e[n]);\n                if (this._decimalDigits < d)\n                    this._decimalDigits = d;\n            }\n            this._dataItems.push({\n                date: e[0],\n                open: e[1],\n                high: e[2],\n                low: e[3],\n                close: e[4],\n                volume: e[5]\n            });\n        }\n        return true;\n    }\n\n    select(id) {\n        this.toolManager.selecedObject = id;\n    }\n\n    unselect() {\n        this.toolManager.selecedObject = -1;\n    }\n\n    addToolObject(toolObject) {\n        this.toolManager.addToolObject(toolObject);\n    }\n\n    delToolObject() {\n        this.toolManager.delCurrentObject();\n    }\n\n    getToolObject(index) {\n        return this.toolManager.getToolObject(index);\n    }\n\n    getToolObjectCount() {\n        return this.toolManager.toolObjects.length;\n    }\n\n    getCurrentToolObject() {\n        return this.toolManager.getCurrentObject();\n    }\n\n    getSelectToolObjcet() {\n        return this.toolManager.getSelectedObject();\n    }\n\n    delSelectToolObject() {\n        this.toolManager.delSelectedObject();\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/data_sources.js","export class Util {\n\n    static fromFloat(v, fractionDigits) {\n        let text = v.toFixed(fractionDigits);\n        for (let i = text.length - 1; i >= 0; i--) {\n            if (text[i] === '.')\n                return text.substring(0, i);\n            if (text[i] !== '0')\n                return text.substring(0, i + 1);\n        }\n    };\n\n    static formatTime(v) {\n        return (v < 10) ? \"0\" + v.toString() : v.toString();\n    }\n\n    static isInstance(obj, clazz) {\n        if (obj === null || obj === undefined) {\n            return false;\n        }\n        return obj instanceof clazz;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/util.js","import {ChartManager} from './chart_manager'\nimport {Control} from './control'\nimport Kline from './kline'\nimport {Template} from './templates'\nimport $ from 'jquery'\n\nexport class Chart {\n    constructor() {\n        this._data = null;\n        this._charStyle = \"CandleStick\";\n        this._depthData = {\n            array: null,\n            asks_count: 0,\n            bids_count: 0,\n            asks_si: 0,\n            asks_ei: 0,\n            bids_si: 0,\n            bids_ei: 0\n        };\n        this.strIsLine = false;\n        this._range = Kline.instance.range;\n        this._symbol = Kline.instance.symbol;\n    }\n\n    setTitle() {\n        let lang = ChartManager.instance.getLanguage();\n        let title = Kline.instance.symbolName;\n        title += ' ';\n        title += this.strIsLine ? Chart.strPeriod[lang]['line'] : Chart.strPeriod[lang][this._range];\n        title += (this._contract_unit + '/' + this._money_type).toUpperCase();\n        ChartManager.instance.setTitle('frame0.k0', title);\n    }\n\n\n    setSymbol(symbol) {\n        this._symbol = symbol;\n        this.updateDataAndDisplay();\n    }\n\n    updateDataAndDisplay() {\n        Kline.instance.symbol = this._symbol;\n        Kline.instance.range = this._range;\n        ChartManager.instance.setCurrentDataSource('frame0.k0', this._symbol + '.' + this._range);\n        ChartManager.instance.setNormalMode();\n        let f = Kline.instance.chartMgr.getDataSource(\"frame0.k0\").getLastDate();\n        if (f === -1) {\n            Kline.instance.requestParam = Control.setHttpRequestParam(Kline.instance.symbol, Kline.instance.range, Kline.instance.limit, null);\n            Control.requestData(true);\n        } else {\n            Kline.instance.requestParam = Control.setHttpRequestParam(Kline.instance.symbol, Kline.instance.range, null, f.toString());\n            Control.requestData();\n        }\n        ChartManager.instance.redraw('All', false);\n    }\n\n\n    setCurrentContractUnit(contractUnit) {\n        this._contract_unit = contractUnit;\n        this.updateDataAndDisplay();\n    }\n\n    setCurrentMoneyType(moneyType) {\n        this._money_type = moneyType;\n        this.updateDataAndDisplay();\n    }\n\n    setCurrentPeriod(period) {\n        this._range = Kline.instance.periodMap[period];\n        if (Kline.instance.type === \"stomp\" && Kline.instance.stompClient.ws.readyState === 1) {\n            Kline.instance.subscribed.unsubscribe();\n            Kline.instance.subscribed = Kline.instance.stompClient.subscribe(Kline.instance.subscribePath + '/' + Kline.instance.symbol + '/' + this._range, Control.subscribeCallback);\n        }\n        this.updateDataAndDisplay();\n        Kline.instance.onRangeChangeFunc(this._range);\n    }\n\n    updateDataSource(data) {\n        this._data = data;\n        ChartManager.instance.updateData(\"frame0.k0\", this._data);\n    }\n\n    updateDepth(array) {\n        if (array == null) {\n            this._depthData.array = [];\n            ChartManager.instance.redraw('All', false);\n            return;\n        }\n        if (!array.asks || !array.bids || array.asks === '' || array.bids === '')\n            return;\n        let _data = this._depthData;\n        _data.array = [];\n        for (let i = 0; i < array.asks.length; i++) {\n            let data = {};\n            data.rate = array.asks[i][0];\n            data.amount = array.asks[i][1];\n            _data.array.push(data);\n        }\n        for (let i = 0; i < array.bids.length; i++) {\n            let data = {};\n            data.rate = array.bids[i][0];\n            data.amount = array.bids[i][1];\n            _data.array.push(data);\n        }\n        _data.asks_count = array.asks.length;\n        _data.bids_count = array.bids.length;\n        _data.asks_si = _data.asks_count - 1;\n        _data.asks_ei = 0;\n        _data.bids_si = _data.asks_count - 1;\n        _data.bids_ei = _data.asks_count + _data.bids_count - 2;\n        for (let i = _data.asks_si; i >= _data.asks_ei; i--) {\n            if (i === _data.asks_si && _data.array[i] !== undefined) {\n                _data.array[i].amounts = _data.array[i].amount;\n            } else if(_data.array[i + 1] !== undefined) {\n                _data.array[i].amounts = _data.array[i + 1].amounts + _data.array[i].amount;\n            }\n        }\n        for (let i = _data.bids_si; i <= _data.bids_ei; i++) {\n            if (i === _data.bids_si && _data.array[i] !== undefined) {\n                _data.array[i].amounts = _data.array[i].amount;\n            } else if (_data.array[i - 1] !== undefined) {\n                _data.array[i].amounts = _data.array[i - 1].amounts + _data.array[i].amount;\n            }\n        }\n        ChartManager.instance.redraw('All', false);\n    }\n\n    setMainIndicator(indicName) {\n        this._mainIndicator = indicName;\n        if (indicName === 'NONE') {\n            ChartManager.instance.removeMainIndicator('frame0.k0');\n        } else {\n            ChartManager.instance.setMainIndicator('frame0.k0', indicName);\n        }\n        ChartManager.instance.redraw('All', true);\n    }\n\n    setIndicator(index, indicName) {\n        if (indicName === 'NONE') {\n            /*\n            let index = 2;\n            if (Template.displayVolume === false)\n                index = 1;\n            */\n            let index=1;\n            let areaName = ChartManager.instance.getIndicatorAreaName('frame0.k0', index);\n            if (areaName !== '')\n                ChartManager.instance.removeIndicator(areaName);\n        } else {\n            /*\n            let index = 2;\n            if (Template.displayVolume === false)\n                index = 1;\n            */\n            let index=1;\n            let areaName = ChartManager.instance.getIndicatorAreaName('frame0.k0', index);\n            if (areaName === '') {\n                Template.createIndicatorChartComps('frame0.k0', indicName);\n            } else {\n                ChartManager.instance.setIndicator(areaName, indicName);\n            }\n        }\n        ChartManager.instance.redraw('All', true);\n    }\n\n    addIndicator(indicName) {\n        ChartManager.instance.addIndicator(indicName);\n        ChartManager.instance.redraw('All', true);\n    }\n\n    removeIndicator(indicName) {\n        let areaName = ChartManager.instance.getIndicatorAreaName(2);\n        ChartManager.instance.removeIndicator(areaName);\n        ChartManager.instance.redraw('All', true);\n    };\n\n}\nChart.strPeriod = {\n    'zh-cn': {\n        'line': '(分时)',\n        '1min': '(1分钟)',\n        '5min': '(5分钟)',\n        '15min': '(15分钟)',\n        '30min': '(30分钟)',\n        '1hour': '(1小时)',\n        '1day': '(日线)',\n        '1week': '(周线)',\n        '3min': '(3分钟)',\n        '2hour': '(2小时)',\n        '4hour': '(4小时)',\n        '6hour': '(6小时)',\n        '12hour': '(12小时)',\n        '3day': '(3天)'\n    },\n    'en-us': {\n        'line': '(Line)',\n        '1min': '(1m)',\n        '5min': '(5m)',\n        '15min': '(15m)',\n        '30min': '(30m)',\n        '1hour': '(1h)',\n        '1day': '(1d)',\n        '1week': '(1w)',\n        '3min': '(3m)',\n        '2hour': '(2h)',\n        '4hour': '(4h)',\n        '6hour': '(6h)',\n        '12hour': '(12h)',\n        '3day': '(3d)'\n    },\n    'zh-tw': {\n        'line': '(分時)',\n        '1min': '(1分鐘)',\n        '5min': '(5分鐘)',\n        '15min': '(15分鐘)',\n        '30min': '(30分鐘)',\n        '1hour': '(1小時)',\n        '1day': '(日線)',\n        '1week': '(周線)',\n        '3min': '(3分鐘)',\n        '2hour': '(2小時)',\n        '4hour': '(4小時)',\n        '6hour': '(6小時)',\n        '12hour': '(12小時)',\n        '3day': '(3天)'\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/chart.js","import * as exprs from \"./exprs\";\nimport * as themes from \"./themes\";\n\nexport class Indicator {\n\n    constructor() {\n        this._exprEnv = new exprs.ExprEnv();\n        this._rid = 0;\n        this._params = [];\n        this._assigns = [];\n        this._outputs = [];\n    }\n\n    addParameter(expr) {\n        this._params.push(expr);\n    }\n\n    addAssign(expr) {\n        this._assigns.push(expr);\n    }\n\n    addOutput(expr) {\n        this._outputs.push(expr);\n    }\n\n    getParameterCount() {\n        return this._params.length;\n    }\n\n    getParameterAt(index) {\n        return this._params[index];\n    }\n\n    getOutputCount() {\n        return this._outputs.length;\n    }\n\n    getOutputAt(index) {\n        return this._outputs[index];\n    }\n\n    clear() {\n        this._exprEnv.setFirstIndex(-1);\n        let i, cnt;\n        cnt = this._assigns.length;\n        for (i = 0; i < cnt; i++) {\n            this._assigns[i].clear();\n        }\n        cnt = this._outputs.length;\n        for (i = 0; i < cnt; i++) {\n            this._outputs[i].clear();\n        }\n    }\n\n    reserve(count) {\n        this._rid++;\n        let i, cnt;\n        cnt = this._assigns.length;\n        for (i = 0; i < cnt; i++) {\n            this._assigns[i].reserve(this._rid, count);\n        }\n        cnt = this._outputs.length;\n        for (i = 0; i < cnt; i++) {\n            this._outputs[i].reserve(this._rid, count);\n        }\n    }\n\n    execute(ds, index) {\n        if (index < 0) {\n            return;\n        }\n        this._exprEnv.setDataSource(ds);\n        exprs.ExprEnv.set(this._exprEnv);\n        try {\n            let i, cnt;\n            cnt = this._assigns.length;\n            for (i = 0; i < cnt; i++) {\n                this._assigns[i].assign(index);\n            }\n            cnt = this._outputs.length;\n            for (i = 0; i < cnt; i++) {\n                this._outputs[i].assign(index);\n            }\n            if (this._exprEnv.getFirstIndex() < 0) {\n                this._exprEnv.setFirstIndex(index);\n            }\n        } catch (e) {\n            if (this._exprEnv.getFirstIndex() >= 0) {\n                alert(e);\n                throw e;\n            }\n        }\n    }\n\n    getParameters() {\n        let params = [];\n        let i, cnt = this._params.length;\n        for (i = 0; i < cnt; i++)\n            params.push(this._params[i].getValue());\n        return params;\n    }\n\n    setParameters(params) {\n        if ((params instanceof Array) && params.length === this._params.length) {\n            for (let i in this._params)\n                this._params[i].setValue(params[i]);\n        }\n    }\n}\n\n\nexport class HLCIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let M1 = new exprs.ParameterExpr(\"M1\", 2, 1000, 60);\n        this.addParameter(M1);\n        this.addOutput(new exprs.OutputExpr(\"HIGH\",\n            new exprs.HighExpr(),\n            exprs.OutputExpr.outputStyle.None\n        ));\n        this.addOutput(new exprs.OutputExpr(\"LOW\",\n            new exprs.LowExpr(),\n            exprs.OutputExpr.outputStyle.None\n        ));\n        this.addOutput(new exprs.OutputExpr(\"CLOSE\",\n            new exprs.CloseExpr(),\n            exprs.OutputExpr.outputStyle.Line,\n            themes.Theme.Color.Indicator0\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(new exprs.CloseExpr(), M1),\n            exprs.OutputExpr.outputStyle.Line,\n            themes.Theme.Color.Indicator1\n        ));\n    }\n\n    getName() {\n        return \"CLOSE\";\n    }\n\n}\n\n\nexport class MAIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let M1 = new exprs.ParameterExpr(\"M1\", 2, 1000, 7);\n        let M2 = new exprs.ParameterExpr(\"M2\", 2, 1000, 30);\n        let M3 = new exprs.ParameterExpr(\"M3\", 2, 1000, 0);\n        let M4 = new exprs.ParameterExpr(\"M4\", 2, 1000, 0);\n        let M5 = new exprs.ParameterExpr(\"M5\", 2, 1000, 0);\n        let M6 = new exprs.ParameterExpr(\"M6\", 2, 1000, 0);\n        this.addParameter(M1);\n        this.addParameter(M2);\n        this.addParameter(M3);\n        this.addParameter(M4);\n        this.addParameter(M5);\n        this.addParameter(M6);\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(new exprs.CloseExpr(), M1)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(new exprs.CloseExpr(), M2)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(new exprs.CloseExpr(), M3)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(new exprs.CloseExpr(), M4)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(new exprs.CloseExpr(), M5)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(new exprs.CloseExpr(), M6)\n        ));\n    }\n\n    getName() {\n        return \"MA\";\n    }\n}\n\n\nexport class EMAIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let M1 = new exprs.ParameterExpr(\"M1\", 2, 1000, 7);\n        let M2 = new exprs.ParameterExpr(\"M2\", 2, 1000, 30);\n        let M3 = new exprs.ParameterExpr(\"M3\", 2, 1000, 0);\n        let M4 = new exprs.ParameterExpr(\"M4\", 2, 1000, 0);\n        let M5 = new exprs.ParameterExpr(\"M5\", 2, 1000, 0);\n        let M6 = new exprs.ParameterExpr(\"M6\", 2, 1000, 0);\n        this.addParameter(M1);\n        this.addParameter(M2);\n        this.addParameter(M3);\n        this.addParameter(M4);\n        this.addParameter(M5);\n        this.addParameter(M6);\n        this.addOutput(new exprs.RangeOutputExpr(\"EMA\",\n            new exprs.EmaExpr(new exprs.CloseExpr(), M1)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"EMA\",\n            new exprs.EmaExpr(new exprs.CloseExpr(), M2)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"EMA\",\n            new exprs.EmaExpr(new exprs.CloseExpr(), M3)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"EMA\",\n            new exprs.EmaExpr(new exprs.CloseExpr(), M4)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"EMA\",\n            new exprs.EmaExpr(new exprs.CloseExpr(), M5)\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"EMA\",\n            new exprs.EmaExpr(new exprs.CloseExpr(), M6)\n        ));\n    }\n\n    getName() {\n        return \"EMA\";\n    }\n}\n\n\nexport class VOLUMEIndicator extends Indicator {\n\n    constructor() {\n        super();\n\n        let M1 = new exprs.ParameterExpr(\"M1\", 2, 500, 5);\n        let M2 = new exprs.ParameterExpr(\"M2\", 2, 500, 10);\n        this.addParameter(M1);\n        this.addParameter(M2);\n        let VOLUME = new exprs.OutputExpr(\"VOLUME\",\n            new exprs.VolumeExpr(),\n            exprs.OutputExpr.outputStyle.VolumeStick,\n            themes.Theme.Color.Text4\n        );\n        this.addOutput(VOLUME);\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(VOLUME, M1),\n            exprs.OutputExpr.outputStyle.Line,\n            themes.Theme.Color.Indicator0\n        ));\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(VOLUME, M2),\n            exprs.OutputExpr.outputStyle.Line,\n            themes.Theme.Color.Indicator1\n        ));\n    }\n\n    getName() {\n        return \"VOLUME\";\n    }\n}\n\n\nexport class MACDIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let SHORT = new exprs.ParameterExpr(\"SHORT\", 2, 200, 12);\n        let LONG = new exprs.ParameterExpr(\"LONG\", 2, 200, 26);\n        let MID = new exprs.ParameterExpr(\"MID\", 2, 200, 9);\n        this.addParameter(SHORT);\n        this.addParameter(LONG);\n        this.addParameter(MID);\n        let DIF = new exprs.OutputExpr(\"DIF\",\n            new exprs.SubExpr(\n                new exprs.EmaExpr(new exprs.CloseExpr(), SHORT),\n                new exprs.EmaExpr(new exprs.CloseExpr(), LONG)\n            )\n        );\n        this.addOutput(DIF);\n        let DEA = new exprs.OutputExpr(\"DEA\",\n            new exprs.EmaExpr(DIF, MID)\n        );\n        this.addOutput(DEA);\n        let MACD = new exprs.OutputExpr(\"MACD\",\n            new exprs.MulExpr(\n                new exprs.SubExpr(DIF, DEA),\n                new exprs.ConstExpr(2)\n            ),\n            exprs.OutputExpr.outputStyle.MACDStick\n        );\n        this.addOutput(MACD);\n    }\n\n    getName() {\n        return \"MACD\";\n    }\n}\n\n\nexport class DMIIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ParameterExpr(\"N\", 2, 90, 14);\n        let MM = new exprs.ParameterExpr(\"MM\", 2, 60, 6);\n        this.addParameter(N);\n        this.addParameter(MM);\n        let MTR = new exprs.AssignExpr(\"MTR\",\n            new exprs.ExpmemaExpr(\n                new exprs.MaxExpr(\n                    new exprs.MaxExpr(\n                        new exprs.SubExpr(new exprs.HighExpr(), new exprs.LowExpr()),\n                        new exprs.AbsExpr(\n                            new exprs.SubExpr(\n                                new exprs.HighExpr(),\n                                new exprs.RefExpr(new exprs.CloseExpr(), new exprs.ConstExpr(1))\n                            )\n                        )\n                    ),\n                    new exprs.AbsExpr(\n                        new exprs.SubExpr(\n                            new exprs.RefExpr(new exprs.CloseExpr(), new exprs.ConstExpr(1)),\n                            new exprs.LowExpr()\n                        )\n                    )\n                ),\n                N\n            )\n        );\n        this.addAssign(MTR);\n        let HD = new exprs.AssignExpr(\"HD\",\n            new exprs.SubExpr(\n                new exprs.HighExpr(),\n                new exprs.RefExpr(new exprs.HighExpr(), new exprs.ConstExpr(1))\n            )\n        );\n        this.addAssign(HD);\n        let LD = new exprs.AssignExpr(\"LD\",\n            new exprs.SubExpr(\n                new exprs.RefExpr(new exprs.LowExpr(), new exprs.ConstExpr(1)),\n                new exprs.LowExpr()\n            )\n        );\n        this.addAssign(LD);\n        let DMP = new exprs.AssignExpr(\"DMP\",\n            new exprs.ExpmemaExpr(\n                new exprs.IfExpr(\n                    new exprs.AndExpr(\n                        new exprs.GtExpr(HD, new exprs.ConstExpr(0)),\n                        new exprs.GtExpr(HD, LD)\n                    ),\n                    HD,\n                    new exprs.ConstExpr(0)\n                ),\n                N\n            )\n        );\n        this.addAssign(DMP);\n        let DMM = new exprs.AssignExpr(\"DMM\",\n            new exprs.ExpmemaExpr(\n                new exprs.IfExpr(\n                    new exprs.AndExpr(\n                        new exprs.GtExpr(LD, new exprs.ConstExpr(0)),\n                        new exprs.GtExpr(LD, HD)\n                    ),\n                    LD,\n                    new exprs.ConstExpr(0)\n                ),\n                N\n            )\n        );\n        this.addAssign(DMM);\n        let PDI = new exprs.OutputExpr(\"PDI\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(DMP, MTR),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(PDI);\n        let MDI = new exprs.OutputExpr(\"MDI\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(DMM, MTR),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(MDI);\n        let ADX = new exprs.OutputExpr(\"ADX\",\n            new exprs.ExpmemaExpr(\n                new exprs.MulExpr(\n                    new exprs.DivExpr(\n                        new exprs.AbsExpr(\n                            new exprs.SubExpr(MDI, PDI)\n                        ),\n                        new exprs.AddExpr(MDI, PDI)\n                    ),\n                    new exprs.ConstExpr(100)\n                ),\n                MM\n            )\n        );\n        this.addOutput(ADX);\n        let ADXR = new exprs.OutputExpr(\"ADXR\",\n            new exprs.ExpmemaExpr(ADX, MM)\n        );\n        this.addOutput(ADXR);\n    }\n\n    getName() {\n        return \"DMI\";\n    }\n\n}\n\n\nexport class DMAIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N1 = new exprs.ParameterExpr(\"N1\", 2, 60, 10);\n        let N2 = new exprs.ParameterExpr(\"N2\", 2, 250, 50);\n        let M = new exprs.ParameterExpr(\"M\", 2, 100, 10);\n        this.addParameter(N1);\n        this.addParameter(N2);\n        this.addParameter(M);\n        let DIF = new exprs.OutputExpr(\"DIF\",\n            new exprs.SubExpr(\n                new exprs.MaExpr(new exprs.CloseExpr(), N1),\n                new exprs.MaExpr(new exprs.CloseExpr(), N2)\n            )\n        );\n        this.addOutput(DIF);\n        let DIFMA = new exprs.OutputExpr(\"DIFMA\",\n            new exprs.MaExpr(DIF, M)\n        );\n        this.addOutput(DIFMA);\n    }\n\n    getName() {\n        return \"DMA\";\n    }\n\n}\n\n\nexport class TRIXIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ParameterExpr(\"N\", 2, 100, 12);\n        let M = new exprs.ParameterExpr(\"M\", 2, 100, 9);\n        this.addParameter(N);\n        this.addParameter(M);\n        let MTR = new exprs.AssignExpr(\"MTR\",\n            new exprs.EmaExpr(\n                new exprs.EmaExpr(\n                    new exprs.EmaExpr(new exprs.CloseExpr(), N), N), N)\n        );\n        this.addAssign(MTR);\n        let TRIX = new exprs.OutputExpr(\"TRIX\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SubExpr(\n                        MTR,\n                        new exprs.RefExpr(\n                            MTR,\n                            new exprs.ConstExpr(1)\n                        )\n                    ),\n                    new exprs.RefExpr(\n                        MTR,\n                        new exprs.ConstExpr(1)\n                    )\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(TRIX);\n        let MATRIX = new exprs.OutputExpr(\"MATRIX\",\n            new exprs.MaExpr(TRIX, M)\n        );\n        this.addOutput(MATRIX);\n    }\n\n    getName() {\n        return \"TRIX\";\n    }\n\n}\n\n\nexport class BRARIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ParameterExpr(\"N\", 2, 120, 26);\n        this.addParameter(N);\n        let REF_CLOSE_1 = new exprs.AssignExpr(\"REF_CLOSE_1\",\n            new exprs.RefExpr(new exprs.CloseExpr(), new exprs.ConstExpr(1))\n        );\n        this.addAssign(REF_CLOSE_1);\n        let BR = new exprs.OutputExpr(\"BR\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SumExpr(\n                        new exprs.MaxExpr(\n                            new exprs.ConstExpr(0),\n                            new exprs.SubExpr(\n                                new exprs.HighExpr(),\n                                REF_CLOSE_1\n                            )\n                        ),\n                        N\n                    ),\n                    new exprs.SumExpr(\n                        new exprs.MaxExpr(\n                            new exprs.ConstExpr(0),\n                            new exprs.SubExpr(\n                                REF_CLOSE_1,\n                                new exprs.LowExpr()\n                            )\n                        ),\n                        N\n                    )\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(BR);\n        let AR = new exprs.OutputExpr(\"AR\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SumExpr(\n                        new exprs.SubExpr(\n                            new exprs.HighExpr(),\n                            new exprs.OpenExpr()\n                        ),\n                        N\n                    ),\n                    new exprs.SumExpr(\n                        new exprs.SubExpr(\n                            new exprs.OpenExpr(),\n                            new exprs.LowExpr()\n                        ),\n                        N\n                    )\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(AR);\n    }\n\n    getName() {\n        return \"BRAR\";\n    }\n\n}\n\n\nexport class VRIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ParameterExpr(\"N\", 2, 100, 26);\n        let M = new exprs.ParameterExpr(\"M\", 2, 100, 6);\n        this.addParameter(N);\n        this.addParameter(M);\n        let REF_CLOSE_1 = new exprs.AssignExpr(\"REF_CLOSE_1\",\n            new exprs.RefExpr(new exprs.CloseExpr(), new exprs.ConstExpr(1))\n        );\n        this.addAssign(REF_CLOSE_1);\n        let TH = new exprs.AssignExpr(\"TH\",\n            new exprs.SumExpr(\n                new exprs.IfExpr(\n                    new exprs.GtExpr(\n                        new exprs.CloseExpr(),\n                        REF_CLOSE_1\n                    ),\n                    new exprs.VolumeExpr(),\n                    new exprs.ConstExpr(0)\n                ),\n                N\n            )\n        );\n        this.addAssign(TH);\n        let TL = new exprs.AssignExpr(\"TL\",\n            new exprs.SumExpr(\n                new exprs.IfExpr(\n                    new exprs.LtExpr(\n                        new exprs.CloseExpr(),\n                        REF_CLOSE_1\n                    ),\n                    new exprs.VolumeExpr(),\n                    new exprs.ConstExpr(0)\n                ),\n                N\n            )\n        );\n        this.addAssign(TL);\n        let TQ = new exprs.AssignExpr(\"TQ\",\n            new exprs.SumExpr(\n                new exprs.IfExpr(\n                    new exprs.EqExpr(\n                        new exprs.CloseExpr(),\n                        REF_CLOSE_1\n                    ),\n                    new exprs.VolumeExpr(),\n                    new exprs.ConstExpr(0)\n                ),\n                N\n            )\n        );\n        this.addAssign(TQ);\n        let VR = new exprs.OutputExpr(\"VR\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.AddExpr(\n                        new exprs.MulExpr(\n                            TH,\n                            new exprs.ConstExpr(2)\n                        ),\n                        TQ\n                    ),\n                    new exprs.AddExpr(\n                        new exprs.MulExpr(\n                            TL,\n                            new exprs.ConstExpr(2)\n                        ),\n                        TQ\n                    )\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(VR);\n        let MAVR = new exprs.OutputExpr(\"MAVR\",\n            new exprs.MaExpr(VR, M)\n        );\n        this.addOutput(MAVR);\n    }\n\n    getName() {\n        return \"VR\";\n    }\n\n}\n\n\nexport class OBVIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let M = new exprs.ParameterExpr(\"M\", 2, 100, 30);\n        this.addParameter(M);\n        let REF_CLOSE_1 = new exprs.AssignExpr(\"REF_CLOSE_1\",\n            new exprs.RefExpr(new exprs.CloseExpr(), new exprs.ConstExpr(1))\n        );\n        this.addAssign(REF_CLOSE_1);\n        let VA = new exprs.AssignExpr(\"VA\",\n            new exprs.IfExpr(\n                new exprs.GtExpr(new exprs.CloseExpr(), REF_CLOSE_1),\n                new exprs.VolumeExpr(),\n                new exprs.NegExpr(new exprs.VolumeExpr())\n            )\n        );\n        this.addAssign(VA);\n        let OBV = new exprs.OutputExpr(\"OBV\",\n            new exprs.SumExpr(\n                new exprs.IfExpr(\n                    new exprs.EqExpr(new exprs.CloseExpr(), REF_CLOSE_1),\n                    new exprs.ConstExpr(0),\n                    VA\n                ),\n                new exprs.ConstExpr(0)\n            )\n        );\n        this.addOutput(OBV);\n        let MAOBV = new exprs.OutputExpr(\"MAOBV\",\n            new exprs.MaExpr(OBV, M)\n        );\n        this.addOutput(MAOBV);\n    }\n\n    getName() {\n        return \"OBV\";\n    }\n\n}\n\n\nexport class EMVIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ParameterExpr(\"N\", 2, 90, 14);\n        let M = new exprs.ParameterExpr(\"M\", 2, 60, 9);\n        this.addParameter(N);\n        this.addParameter(M);\n        let VOLUME = new exprs.AssignExpr(\"VOLUME\",\n            new exprs.DivExpr(\n                new exprs.MaExpr(new exprs.VolumeExpr(), N),\n                new exprs.VolumeExpr()\n            )\n        );\n        this.addAssign(VOLUME);\n        let MID = new exprs.AssignExpr(\"MID\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SubExpr(\n                        new exprs.AddExpr(new exprs.HighExpr(), new exprs.LowExpr()),\n                        new exprs.RefExpr(\n                            new exprs.AddExpr(new exprs.HighExpr(), new exprs.LowExpr()),\n                            new exprs.ConstExpr(1)\n                        )\n                    ),\n                    new exprs.AddExpr(new exprs.HighExpr(), new exprs.LowExpr())\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addAssign(MID);\n        let EMV = new exprs.OutputExpr(\"EMV\",\n            new exprs.MaExpr(\n                new exprs.DivExpr(\n                    new exprs.MulExpr(\n                        MID,\n                        new exprs.MulExpr(\n                            VOLUME,\n                            new exprs.SubExpr(new exprs.HighExpr(), new exprs.LowExpr())\n                        )\n                    ),\n                    new exprs.MaExpr(\n                        new exprs.SubExpr(new exprs.HighExpr(), new exprs.LowExpr()),\n                        N\n                    )\n                ),\n                N\n            )\n        );\n        this.addOutput(EMV);\n        let MAEMV = new exprs.OutputExpr(\"MAEMV\",\n            new exprs.MaExpr(EMV, M)\n        );\n        this.addOutput(MAEMV);\n    }\n\n    getName() {\n        return \"EMV\";\n    }\n\n}\n\n\nexport class RSIIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N1 = new exprs.ParameterExpr(\"N1\", 2, 120, 6);\n        let N2 = new exprs.ParameterExpr(\"N2\", 2, 250, 12);\n        let N3 = new exprs.ParameterExpr(\"N3\", 2, 500, 24);\n        this.addParameter(N1);\n        this.addParameter(N2);\n        this.addParameter(N3);\n        let LC = new exprs.AssignExpr(\"LC\",\n            new exprs.RefExpr(new exprs.CloseExpr(), new exprs.ConstExpr(1))\n        );\n        this.addAssign(LC);\n        let CLOSE_LC = new exprs.AssignExpr(\"CLOSE_LC\",\n            new exprs.SubExpr(new exprs.CloseExpr(), LC)\n        );\n        this.addAssign(CLOSE_LC);\n        this.addOutput(new exprs.OutputExpr(\"RSI1\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SmaExpr(new exprs.MaxExpr(CLOSE_LC, new exprs.ConstExpr(0)), N1, new exprs.ConstExpr(1)),\n                    new exprs.SmaExpr(new exprs.AbsExpr(CLOSE_LC), N1, new exprs.ConstExpr(1))\n                ),\n                new exprs.ConstExpr(100)\n            )\n        ));\n        this.addOutput(new exprs.OutputExpr(\"RSI2\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SmaExpr(new exprs.MaxExpr(CLOSE_LC, new exprs.ConstExpr(0)), N2, new exprs.ConstExpr(1)),\n                    new exprs.SmaExpr(new exprs.AbsExpr(CLOSE_LC), N2, new exprs.ConstExpr(1))\n                ),\n                new exprs.ConstExpr(100)\n            )\n        ));\n        this.addOutput(new exprs.OutputExpr(\"RSI3\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SmaExpr(new exprs.MaxExpr(CLOSE_LC, new exprs.ConstExpr(0)), N3, new exprs.ConstExpr(1)),\n                    new exprs.SmaExpr(new exprs.AbsExpr(CLOSE_LC), N3, new exprs.ConstExpr(1))\n                ),\n                new exprs.ConstExpr(100)\n            )\n        ));\n    }\n\n    getName() {\n        return \"RSI\";\n    }\n\n}\n\n\nexport class WRIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ParameterExpr(\"N\", 2, 100, 10);\n        let N1 = new exprs.ParameterExpr(\"N1\", 2, 100, 6);\n        this.addParameter(N);\n        this.addParameter(N1);\n        let HHV = new exprs.AssignExpr(\"HHV\",\n            new exprs.HhvExpr(new exprs.HighExpr(), N)\n        );\n        this.addAssign(HHV);\n        let HHV1 = new exprs.AssignExpr(\"HHV1\",\n            new exprs.HhvExpr(new exprs.HighExpr(), N1)\n        );\n        this.addAssign(HHV1);\n        let LLV = new exprs.AssignExpr(\"LLV\",\n            new exprs.LlvExpr(new exprs.LowExpr(), N)\n        );\n        this.addAssign(LLV);\n        let LLV1 = new exprs.AssignExpr(\"LLV1\",\n            new exprs.LlvExpr(new exprs.LowExpr(), N1)\n        );\n        this.addAssign(LLV1);\n        let WR1 = new exprs.OutputExpr(\"WR1\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SubExpr(\n                        HHV,\n                        new exprs.CloseExpr()\n                    ),\n                    new exprs.SubExpr(\n                        HHV,\n                        LLV\n                    )\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(WR1);\n        let WR2 = new exprs.OutputExpr(\"WR2\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SubExpr(\n                        HHV1,\n                        new exprs.CloseExpr()\n                    ),\n                    new exprs.SubExpr(\n                        HHV1,\n                        LLV1\n                    )\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(WR2);\n    }\n\n    getName() {\n        return \"WR\";\n    }\n\n}\n\n\nexport class SARIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ConstExpr(4);\n        let MIN = new exprs.ConstExpr(2);\n        let STEP = new exprs.ConstExpr(2);\n        let MAX = new exprs.ConstExpr(20);\n        this.addOutput(new exprs.OutputExpr(\"SAR\",\n            new exprs.SarExpr(N, MIN, STEP, MAX),\n            exprs.OutputExpr.outputStyle.SARPoint\n        ));\n    }\n\n    getName() {\n        return \"SAR\";\n    }\n\n}\n\n\nexport class KDJIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ParameterExpr(\"N\", 2, 90, 9);\n        let M1 = new exprs.ParameterExpr(\"M1\", 2, 30, 3);\n        let M2 = new exprs.ParameterExpr(\"M2\", 2, 30, 3);\n        this.addParameter(N);\n        this.addParameter(M1);\n        this.addParameter(M2);\n        let HHV = new exprs.AssignExpr(\"HHV\",\n            new exprs.HhvExpr(new exprs.HighExpr(), N)\n        );\n        this.addAssign(HHV);\n        let LLV = new exprs.AssignExpr(\"LLV\",\n            new exprs.LlvExpr(new exprs.LowExpr(), N)\n        );\n        this.addAssign(LLV);\n        let RSV = new exprs.AssignExpr(\"RSV\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SubExpr(\n                        new exprs.CloseExpr(),\n                        LLV\n                    ),\n                    new exprs.SubExpr(\n                        HHV,\n                        LLV\n                    )\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addAssign(RSV);\n        let K = new exprs.OutputExpr(\"K\",\n            new exprs.SmaExpr(RSV, M1, new exprs.ConstExpr(1))\n        );\n        this.addOutput(K);\n        let D = new exprs.OutputExpr(\"D\",\n            new exprs.SmaExpr(K, M2, new exprs.ConstExpr(1))\n        );\n        this.addOutput(D);\n        let J = new exprs.OutputExpr(\"J\",\n            new exprs.SubExpr(\n                new exprs.MulExpr(\n                    K,\n                    new exprs.ConstExpr(3)\n                ),\n                new exprs.MulExpr(\n                    D,\n                    new exprs.ConstExpr(2)\n                )\n            )\n        );\n        this.addOutput(J);\n    }\n\n    getName() {\n        return \"KDJ\";\n    }\n\n}\n\n\nexport class ROCIndicator extends Indicator {\n\n    constructor() {\n        super();\n\n        let N = new exprs.ParameterExpr(\"N\", 2, 120, 12);\n        let M = new exprs.ParameterExpr(\"M\", 2, 60, 6);\n        this.addParameter(N);\n        this.addParameter(M);\n        let REF_CLOSE_N = new exprs.AssignExpr(\"REF_CLOSE_N\",\n            new exprs.RefExpr(new exprs.CloseExpr(), N)\n        );\n        this.addAssign(REF_CLOSE_N);\n        let ROC = new exprs.OutputExpr(\"ROC\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SubExpr(\n                        new exprs.CloseExpr(),\n                        REF_CLOSE_N\n                    ),\n                    REF_CLOSE_N\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(ROC);\n        let MAROC = new exprs.OutputExpr(\"MAROC\",\n            new exprs.MaExpr(ROC, M)\n        );\n        this.addOutput(MAROC);\n    }\n\n    getName() {\n        return \"ROC\";\n    }\n\n}\n\n\nexport class MTMIndicator extends Indicator {\n\n    constructor() {\n        super();\n        let N = new exprs.ParameterExpr(\"N\", 2, 120, 12);\n        let M = new exprs.ParameterExpr(\"M\", 2, 60, 6);\n        this.addParameter(N);\n        this.addParameter(M);\n        let MTM = new exprs.OutputExpr(\"MTM\",\n            new exprs.SubExpr(\n                new exprs.CloseExpr(),\n                new exprs.RefExpr(new exprs.CloseExpr(), N)\n            )\n        );\n        this.addOutput(MTM);\n        let MTMMA = new exprs.OutputExpr(\"MTMMA\",\n            new exprs.MaExpr(MTM, M)\n        );\n        this.addOutput(MTMMA);\n    }\n\n    getName() {\n        return \"MTM\";\n    }\n\n}\n\n\nexport class BOLLIndicator extends Indicator {\n\n    constructor() {\n        super();\n\n        let N = new exprs.ParameterExpr(\"N\", 2, 120, 20);\n        this.addParameter(N);\n        let STD_CLOSE_N = new exprs.AssignExpr(\"STD_CLOSE_N\",\n            new exprs.StdExpr(new exprs.CloseExpr(), N)\n        );\n        this.addAssign(STD_CLOSE_N);\n        let BOLL = new exprs.OutputExpr(\"BOLL\",\n            new exprs.MaExpr(new exprs.CloseExpr(), N)\n        );\n        this.addOutput(BOLL);\n        let UB = new exprs.OutputExpr(\"UB\",\n            new exprs.AddExpr(\n                BOLL,\n                new exprs.MulExpr(\n                    new exprs.ConstExpr(2),\n                    STD_CLOSE_N\n                )\n            )\n        );\n        this.addOutput(UB);\n        let LB = new exprs.OutputExpr(\"LB\",\n            new exprs.SubExpr(\n                BOLL,\n                new exprs.MulExpr(\n                    new exprs.ConstExpr(2),\n                    STD_CLOSE_N\n                )\n            )\n        );\n        this.addOutput(LB);\n    }\n\n    getName() {\n        return \"BOLL\";\n    }\n\n}\n\n\nexport class PSYIndicator extends Indicator {\n\n    constructor() {\n        super();\n\n        let N = new exprs.ParameterExpr(\"N\", 2, 100, 12);\n        let M = new exprs.ParameterExpr(\"M\", 2, 100, 6);\n        this.addParameter(N);\n        this.addParameter(M);\n        let PSY = new exprs.OutputExpr(\"PSY\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.CountExpr(\n                        new exprs.GtExpr(\n                            new exprs.CloseExpr(),\n                            new exprs.RefExpr(new exprs.CloseExpr(), new exprs.ConstExpr(1))\n                        ),\n                        N\n                    ),\n                    N\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(PSY);\n        let PSYMA = new exprs.OutputExpr(\"PSYMA\",\n            new exprs.MaExpr(PSY, M)\n        );\n        this.addOutput(PSYMA);\n    }\n\n    getName() {\n        return \"PSY\";\n    }\n\n}\n\n\nexport class STOCHRSIIndicator extends Indicator {\n\n    constructor() {\n        super();\n\n        let N = new exprs.ParameterExpr(\"N\", 3, 100, 14);\n        let M = new exprs.ParameterExpr(\"M\", 3, 100, 14);\n        let P1 = new exprs.ParameterExpr(\"P1\", 2, 50, 3);\n        let P2 = new exprs.ParameterExpr(\"P2\", 2, 50, 3);\n        this.addParameter(N);\n        this.addParameter(M);\n        this.addParameter(P1);\n        this.addParameter(P2);\n        let LC = new exprs.AssignExpr(\"LC\",\n            new exprs.RefExpr(new exprs.CloseExpr(), new exprs.ConstExpr(1))\n        );\n        this.addAssign(LC);\n        let CLOSE_LC = new exprs.AssignExpr(\"CLOSE_LC\",\n            new exprs.SubExpr(new exprs.CloseExpr(), LC)\n        );\n        this.addAssign(CLOSE_LC);\n        let RSI = new exprs.AssignExpr(\"RSI\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.SmaExpr(new exprs.MaxExpr(CLOSE_LC, new exprs.ConstExpr(0)), N, new exprs.ConstExpr(1)),\n                    new exprs.SmaExpr(new exprs.AbsExpr(CLOSE_LC), N, new exprs.ConstExpr(1))\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addAssign(RSI);\n        let STOCHRSI = new exprs.OutputExpr(\"STOCHRSI\",\n            new exprs.MulExpr(\n                new exprs.DivExpr(\n                    new exprs.MaExpr(\n                        new exprs.SubExpr(\n                            RSI,\n                            new exprs.LlvExpr(RSI, M)\n                        ),\n                        P1\n                    ),\n                    new exprs.MaExpr(\n                        new exprs.SubExpr(\n                            new exprs.HhvExpr(RSI, M),\n                            new exprs.LlvExpr(RSI, M)\n                        ),\n                        P1\n                    )\n                ),\n                new exprs.ConstExpr(100)\n            )\n        );\n        this.addOutput(STOCHRSI);\n        this.addOutput(new exprs.RangeOutputExpr(\"MA\",\n            new exprs.MaExpr(STOCHRSI, P2)\n        ));\n    }\n\n    getName() {\n        return \"StochRSI\";\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/indicators.js","import {Control} from './control'\nimport {Chart} from './chart'\nimport * as indicators from './indicators'\nimport * as ranges from './ranges'\nimport * as templates from './templates'\nimport * as data_sources from './data_sources'\nimport {ChartSettings} from './chart_settings'\nimport * as data_providers from './data_providers'\nimport * as themes from './themes'\nimport * as plotters from './plotters'\nimport * as ctools from './ctools'\nimport * as areas from './areas'\nimport {Util} from './util'\nimport $ from 'jquery'\nrequire('jquery-mousewheel');\n\nexport class ChartManager {\n    constructor() {\n        this._dataSources = {};\n        this._dataSourceCache = {};\n        this._dataProviders = {};\n        this._frames = {};\n        this._areas = {};\n        this._timelines = {};\n        this._ranges = {};\n        this._plotters = {};\n        this._themes = {};\n        this._titles = {};\n        this._frameMousePos = {};\n        this._dsChartStyle = {};\n        this._dragStarted = false;\n        this._oldX = 0;\n        this._fakeIndicators = {};\n        this._captureMouseWheelDirectly = true;\n        this._chart = {};\n        this._chart.defaultFrame = new Chart();\n        this._drawingTool = ChartManager.DrawingTool[\"CrossCursor\"];\n        this._beforeDrawingTool = this._drawingTool;\n        this._language = \"zh-cn\";\n        this._mainCanvas = null;\n        this._overlayCanvas = null;\n        this._mainContext = null;\n        this._overlayContext = null;\n\n        if (!ChartManager.created) {\n            ChartManager.instance = this;\n            ChartManager.created = true;\n        }\n        return ChartManager.instance;\n    }\n\n    redraw(layer, refresh) {\n        if (layer === undefined || refresh) {\n            layer = \"All\";\n        }\n        if (layer === \"All\" || layer === \"MainCanvas\") {\n            if (refresh) {\n                this.getFrame(\"frame0\").setChanged(true);\n            }\n            this.layout(this._mainContext, \"frame0\", 0, 0, this._mainCanvas.width, this._mainCanvas.height);\n            this.drawMain(\"frame0\", this._mainContext);\n        }\n        if (layer === \"All\" || layer === \"OverlayCanvas\") {\n            this._overlayContext.clearRect(0, 0, this._overlayCanvas.width, this._overlayCanvas.height);\n            this.drawOverlay(\"frame0\", this._overlayContext);\n        }\n    }\n\n\n    bindCanvas(layer, canvas) {\n        if (layer === \"main\") {\n            this._mainCanvas = canvas;\n            this._mainContext = canvas.getContext(\"2d\");\n        } else if (layer === \"overlay\") {\n            this._overlayCanvas = canvas;\n            this._overlayContext = canvas.getContext(\"2d\");\n            if (this._captureMouseWheelDirectly) {\n                $(this._overlayCanvas).bind('mousewheel', Control.mouseWheel);\n            }\n        }\n    }\n\n    getCaptureMouseWheelDirectly() {\n        return this._captureMouseWheelDirectly;\n    }\n\n    setCaptureMouseWheelDirectly(v) {\n        this._captureMouseWheelDirectly = v;\n        if (v)\n            $(this._overlayCanvas).bind('mousewheel', Control.mouseWheel);\n        else\n            $(this._overlayCanvas).unbind('mousewheel');\n    }\n\n    getChart(nouseParam) {\n        return this._chart[\"defaultFrame\"];\n    }\n\n    init() {\n        delete this._ranges['frame0.k0.indic1'];\n        delete this._ranges['frame0.k0.indic1Range'];\n        delete this._areas['frame0.k0.indic1'];\n        delete this._areas['frame0.k0.indic1Range'];\n        templates.DefaultTemplate.loadTemplate(\"frame0.k0\", \"\");\n        this.redraw('All', true);\n    }\n\n    setCurrentDrawingTool(paramTool) {\n        this._drawingTool = ChartManager.DrawingTool[paramTool];\n        this.setRunningMode(this._drawingTool);\n    }\n\n    getLanguage() {\n        return this._language;\n    }\n\n    setLanguage(lang) {\n        this._language = lang;\n    }\n\n    setThemeName(frameName, themeName) {\n        if (themeName === undefined)\n            themeName = \"Dark\";\n        let theme;\n        switch (themeName) {\n            case \"Light\":\n                theme = new themes.LightTheme();\n                break;\n            default:\n                themeName = \"Dark\";\n                theme = new themes.DarkTheme();\n                break;\n        }\n        this._themeName = themeName;\n        this.setTheme(frameName, theme);\n        this.getFrame(frameName).setChanged(true);\n    }\n\n    getChartStyle(dsName) {\n        let chartStyle = this._dsChartStyle[dsName];\n        if (chartStyle === undefined)\n            return \"CandleStick\";\n        return chartStyle;\n    }\n\n    setChartStyle(dsName, style) {\n        if (this._dsChartStyle[dsName] === style)\n            return;\n        let areaName = dsName + \".main\";\n        let dpName = areaName + \".main\";\n        let plotterName = areaName + \".main\";\n        let dp, plotter;\n        switch (style) {\n            case \"CandleStick\":\n            case \"CandleStickHLC\":\n            case \"OHLC\":\n                dp = this.getDataProvider(dpName);\n                if (dp === undefined || !Util.isInstance(dp, data_providers.MainDataProvider)) {\n                    dp = new data_providers.MainDataProvider(dpName);\n                    this.setDataProvider(dpName, dp);\n                    dp.updateData();\n                }\n                this.setMainIndicator(dsName, ChartSettings.get().charts.mIndic);\n                switch (style) {\n                    case \"CandleStick\":\n                        plotter = new plotters.CandlestickPlotter(plotterName);\n                        break;\n                    case \"CandleStickHLC\":\n                        plotter = new plotters.CandlestickHLCPlotter(plotterName);\n                        break;\n                    case \"OHLC\":\n                        plotter = new plotters.OHLCPlotter(plotterName);\n                        break;\n                }\n                this.setPlotter(plotterName, plotter);\n                plotter = new plotters.MinMaxPlotter(areaName + \".decoration\");\n                this.setPlotter(plotter.getName(), plotter);\n                break;\n            case \"Line\":\n                dp = new data_providers.IndicatorDataProvider(dpName);\n                this.setDataProvider(dp.getName(), dp);\n                dp.setIndicator(new indicators.HLCIndicator());\n                this.removeMainIndicator(dsName);\n                plotter = new plotters.IndicatorPlotter(plotterName);\n                this.setPlotter(plotterName, plotter);\n                this.removePlotter(areaName + \".decoration\");\n                break;\n        }\n        this.getArea(plotter.getAreaName()).setChanged(true);\n        this._dsChartStyle[dsName] = style;\n    }\n\n    setNormalMode() {\n        this._drawingTool = this._beforeDrawingTool;\n        $(\".chart_dropdown_data\").removeClass(\"chart_dropdown-hover\");\n        $(\"#chart_toolpanel .chart_toolpanel_button\").removeClass(\"selected\");\n        $(\"#chart_CrossCursor\").parent().addClass(\"selected\");\n        if (this._drawingTool === ChartManager.DrawingTool.Cursor) {\n            this.showCursor();\n            $(\"#mode a\").removeClass(\"selected\");\n            $(\"#chart_toolpanel .chart_toolpanel_button\").removeClass(\"selected\");\n            $(\"#chart_Cursor\").parent().addClass(\"selected\");\n        } else {\n            this.hideCursor();\n        }\n    }\n\n    setRunningMode(mode) {\n        let pds = this.getDataSource(\"frame0.k0\");\n        let curr_o = pds.getCurrentToolObject();\n        if (curr_o !== null && curr_o.state !== ctools.CToolObject.state.AfterDraw) {\n            pds.delToolObject();\n        }\n        if (pds.getToolObjectCount() > 10) {\n            this.setNormalMode();\n            return;\n        }\n        this._drawingTool = mode;\n        if (mode === ChartManager.DrawingTool.Cursor) {\n            this.showCursor();\n        } else {\n        }\n        switch (mode) {\n            case ChartManager.DrawingTool.Cursor: {\n                this._beforeDrawingTool = mode;\n                break;\n            }\n            case ChartManager.DrawingTool.ArrowLine: {\n                pds.addToolObject(new ctools.CArrowLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.BandLine: {\n                pds.addToolObject(new ctools.CBandLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.BiParallelLine: {\n                pds.addToolObject(new ctools.CBiParallelLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.BiParallelRayLine: {\n                pds.addToolObject(new ctools.CBiParallelRayLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.CrossCursor: {\n                this._beforeDrawingTool = mode;\n                break;\n            }\n            case ChartManager.DrawingTool.DrawFibFans: {\n                pds.addToolObject(new ctools.CFibFansObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.DrawFibRetrace: {\n                pds.addToolObject(new ctools.CFibRetraceObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.DrawLines: {\n                pds.addToolObject(new ctools.CStraightLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.HoriRayLine: {\n                pds.addToolObject(new ctools.CHoriRayLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.HoriSegLine: {\n                pds.addToolObject(new ctools.CHoriSegLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.HoriStraightLine: {\n                pds.addToolObject(new ctools.CHoriStraightLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.PriceLine: {\n                pds.addToolObject(new ctools.CPriceLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.RayLine: {\n                pds.addToolObject(new ctools.CRayLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.SegLine: {\n                pds.addToolObject(new ctools.CSegLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.StraightLine: {\n                pds.addToolObject(new ctools.CStraightLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.TriParallelLine: {\n                pds.addToolObject(new ctools.CTriParallelLineObject(\"frame0.k0\"));\n                break;\n            }\n            case ChartManager.DrawingTool.VertiStraightLine: {\n                pds.addToolObject(new ctools.CVertiStraightLineObject(\"frame0.k0\"));\n                break;\n            }\n        }\n    }\n\n    getTitle(dsName) {\n        return this._titles[dsName];\n    }\n\n    setTitle(dsName, title) {\n        this._titles[dsName] = title;\n    }\n\n    setCurrentDataSource(dsName, dsAlias) {\n        let cached = this.getCachedDataSource(dsAlias);\n        if (cached !== undefined && cached !== null) {\n            this.setDataSource(dsName, cached, true);\n        } else {\n            cached = new data_sources.MainDataSource(dsAlias);\n            this.setDataSource(dsName, cached, true);\n            this.setCachedDataSource(dsAlias, cached);\n        }\n    }\n\n    getDataSource(name) {\n        return this._dataSources[name];\n    }\n\n    setDataSource(name, ds, forceRefresh) {\n        this._dataSources[name] = ds;\n        if (forceRefresh) {\n            this.updateData(name, null);\n        }\n    }\n\n    getCachedDataSource(name) {\n        return this._dataSourceCache[name];\n    }\n\n    setCachedDataSource(name, ds) {\n        this._dataSourceCache[name] = ds;\n    }\n\n    getDataProvider(name) {\n        return this._dataProviders[name];\n    }\n\n    setDataProvider(name, dp) {\n        this._dataProviders[name] = dp;\n    }\n\n    removeDataProvider(name) {\n        delete this._dataProviders[name];\n    }\n\n    getFrame(name) {\n        return this._frames[name];\n    }\n\n    setFrame(name, frame) {\n        this._frames[name] = frame;\n    }\n\n    removeFrame(name) {\n        delete this._frames[name];\n    }\n\n    getArea(name) {\n        return this._areas[name];\n    }\n\n    setArea(name, area) {\n        this._areas[name] = area;\n    }\n\n    removeArea(name) {\n        delete this._areas[name];\n    }\n\n    getTimeline(name) {\n        return this._timelines[name];\n    }\n\n    setTimeline(name, timeline) {\n        this._timelines[name] = timeline;\n    }\n\n    removeTimeline(name) {\n        delete this._timelines[name];\n    }\n\n    getRange(name) {\n        return this._ranges[name];\n    }\n\n    setRange(name, range) {\n        this._ranges[name] = range;\n    }\n\n    removeRange(name) {\n        delete this._ranges[name];\n    }\n\n    getPlotter(name) {\n        return this._plotters[name];\n    }\n\n    setPlotter(name, plotter) {\n        this._plotters[name] = plotter;\n    }\n\n    removePlotter(name) {\n        delete this._plotters[name];\n    }\n\n    getTheme(name) {\n        return this._themes[name];\n    }\n\n    setTheme(name, theme) {\n        this._themes[name] = theme;\n    }\n\n    getFrameMousePos(name, point) {\n        if (this._frameMousePos[name] !== undefined) {\n            point.x = this._frameMousePos[name].x;\n            point.y = this._frameMousePos[name].y;\n        } else {\n            point.x = -1;\n            point.y = -1;\n        }\n    }\n\n    setFrameMousePos(name, px, py) {\n        this._frameMousePos[name] = {x: px, y: py};\n    }\n\n    drawArea(context, area, plotterNames) {\n        let areaName = area.getNameObject().getCompAt(2);\n        if (areaName === \"timeline\") {\n            if (area.getHeight() < 20)\n                return;\n        } else {\n            if (area.getHeight() < 30)\n                return;\n        }\n        if (area.getWidth() < 30)\n            return;\n        areaName = area.getName();\n        let plotter;\n        let i, cnt = plotterNames.length;\n        for (i = 0; i < cnt; i++) {\n            plotter = this._plotters[areaName + plotterNames[i]];\n            if (plotter !== undefined)\n                plotter.Draw(context);\n        }\n    }\n\n    drawAreaMain(context, area) {\n        let ds = this._dataSources[area.getDataSourceName()];\n        let plotterNames;\n        if (ds.getDataCount() < 1)\n            plotterNames = [\".background\"];\n        else\n            plotterNames = [\".background\", \".grid\", \".main\", \".secondary\"];\n        this.drawArea(context, area, plotterNames);\n        area.setChanged(false);\n    }\n\n    drawAreaOverlay(context, area) {\n        let ds = this._dataSources[area.getDataSourceName()];\n        let plotterNames;\n        if (ds.getDataCount() < 1)\n            plotterNames = [\".selection\"];\n        else\n            plotterNames = [\".decoration\", \".selection\", \".info\", \".tool\"];\n        this.drawArea(context, area, plotterNames);\n    }\n\n    drawMain(frameName, context) {\n        let drawn = false;\n\n        if (!drawn) {\n            for (let it in this._areas) {\n                if (this._areas[it].getFrameName() === frameName && !Util.isInstance(this._areas[it], areas.ChartAreaGroup))\n                    this.drawAreaMain(context, this._areas[it]);\n            }\n        }\n        let e;\n        for (let i in this._timelines) {\n            e = this._timelines[i];\n            if (e.getFrameName() === frameName)\n                e.setUpdated(false);\n        }\n        for (let i in this._ranges) {\n            e = this._ranges[i];\n            if (e.getFrameName() === frameName)\n                e.setUpdated(false);\n        }\n        for (let i in this._areas) {\n            e = this._areas[i];\n            if (e.getFrameName() === frameName)\n                e.setChanged(false);\n        }\n    }\n\n    drawOverlay(frameName, context) {\n        for (let n in this._areas) {\n            let area = this._areas[n];\n            if (Util.isInstance(area, areas.ChartAreaGroup))\n                if (area.getFrameName() === frameName) {\n                    area.drawGrid(context);\n                }\n        }\n        for (let n in this._areas) {\n            let area = this._areas[n];\n            if (Util.isInstance(area, areas.ChartAreaGroup) === false)\n                if (area.getFrameName() === frameName) {\n                    this.drawAreaOverlay(context, area);\n                }\n        }\n    }\n\n    updateData(dsName, data) {\n        let ds = this.getDataSource(dsName);\n        if (ds === undefined || ds === null) {\n            return;\n        }\n        if (data !== undefined && data !== null) {\n            if (!ds.update(data)) {\n                return false;\n            }\n            if (ds.getUpdateMode() === data_sources.DataSource.UpdateMode.DoNothing)\n                return true;\n        } else {\n            ds.setUpdateMode(data_sources.DataSource.UpdateMode.Refresh);\n        }\n        let timeline = this.getTimeline(dsName);\n        if (timeline !== undefined && timeline !== null) {\n            timeline.update();\n        }\n        if (ds.getDataCount() < 1) {\n            return true;\n        }\n        let dpNames = [\".main\", \".secondary\"];\n        let area, areaName;\n        for (let n in this._areas) {\n            area = this._areas[n];\n            if (Util.isInstance(area, areas.ChartAreaGroup)) {\n                continue;\n            }\n            if (area.getDataSourceName() !== dsName) {\n                continue;\n            }\n            areaName = area.getName();\n            for (let i = 0; i < dpNames.length; i++) {\n                let dp = this.getDataProvider(areaName + dpNames[i]);\n                if (dp !== undefined && dp !== null) {\n                    dp.updateData();\n                }\n            }\n        }\n        return true;\n    }\n\n    updateRange(dsName) {\n        let ds = this.getDataSource(dsName);\n        if (ds.getDataCount() < 1) {\n            return;\n        }\n        let dpNames = [\".main\", \".secondary\"];\n        let area, areaName;\n        for (let n in this._areas) {\n            area = this._areas[n];\n            if (Util.isInstance(area, areas.ChartAreaGroup))\n                continue;\n            if (area.getDataSourceName() !== dsName)\n                continue;\n            areaName = area.getName();\n            for (let i = 0; i < dpNames.length; i++) {\n                let dp = this.getDataProvider(areaName + dpNames[i]);\n                if (dp !== undefined && dp !== null) {\n                    dp.updateRange();\n                }\n            }\n            let timeline = this.getTimeline(dsName);\n            if (timeline !== undefined && timeline.getMaxItemCount() > 0) {\n                let range = this.getRange(areaName);\n                if (range !== undefined && range !== null) {\n                    range.update();\n                }\n            }\n        }\n    }\n\n    layout(context, frameName, left, top, right, bottom) {\n        let frame = this.getFrame(frameName);\n        frame.measure(context, right - left, bottom - top);\n        frame.layout(left, top, right, bottom);\n        for (let n in this._timelines) {\n            let e = this._timelines[n];\n            if (e.getFrameName() === frameName)\n                e.onLayout();\n        }\n        for (let n in this._dataSources) {\n            if (n.substring(0, frameName.length) === frameName)\n                this.updateRange(n);\n        }\n    }\n\n    SelectRange(pArea, y) {\n        for (let ee in this._ranges) {\n            let _1 = this._ranges[ee].getAreaName();\n            let _2 = pArea.getName();\n            if (_1 === _2)\n                this._ranges[ee].selectAt(y);\n            else\n                this._ranges[ee].unselect();\n        }\n    }\n\n    scale(s) {\n        if (this._highlightedFrame === null)\n            return;\n        let hiArea = this._highlightedFrame.getHighlightedArea();\n        if (this.getRange(hiArea.getName()) !== undefined) {\n            let dsName = hiArea.getDataSourceName();\n            let timeline = this.getTimeline(dsName);\n            if (timeline !== null) {\n                timeline.scale(s);\n                this.updateRange(dsName);\n            }\n        }\n    }\n\n    showCursor(cursor) {\n        if (cursor === undefined)\n            cursor = 'default';\n        this._mainCanvas.style.cursor = cursor;\n        this._overlayCanvas.style.cursor = cursor;\n    }\n\n    hideCursor() {\n        this._mainCanvas.style.cursor = 'none';\n        this._overlayCanvas.style.cursor = 'none';\n    }\n\n    showCrossCursor(area, x, y) {\n        let e = this.getRange(area.getName());\n        if (e !== undefined) {\n            e.selectAt(y);\n            e = this.getTimeline(area.getDataSourceName());\n            if (e !== undefined)\n                if (e.selectAt(x))\n                    return true;\n        }\n        return false;\n    }\n\n    hideCrossCursor(exceptTimeline) {\n        if (exceptTimeline !== null && exceptTimeline !== undefined) {\n            for (let n in this._timelines) {\n                let e = this._timelines[n];\n                if (e !== exceptTimeline) {\n                    e.unselect();\n                }\n            }\n        } else {\n            for (let n in this._timelines)\n                this._timelines[n].unselect();\n        }\n        for (let n in this._ranges)\n            this._ranges[n].unselect();\n    }\n\n    clearHighlight() {\n        if (this._highlightedFrame !== null && this._highlightedFrame !== undefined) {\n            this._highlightedFrame.highlight(null);\n            this._highlightedFrame = null;\n        }\n    }\n\n    onToolMouseMove(frameName, x, y) {\n        let ret = false;\n        frameName += \".\";\n        for (let n in this._dataSources) {\n            if (n.indexOf(frameName) === 0) {\n                let ds = this._dataSources[n];\n                if (Util.isInstance(ds, data_sources.MainDataSource))\n                    if (ds.toolManager.acceptMouseMoveEvent(x, y))\n                        ret = true;\n            }\n        }\n        return ret;\n    }\n\n    onToolMouseDown(frameName, x, y) {\n        let ret = false;\n        frameName += \".\";\n        for (let n in this._dataSources) {\n            if (n.indexOf(frameName) === 0) {\n                let ds = this._dataSources[n];\n                if (Util.isInstance(ds, data_sources.MainDataSource))\n                    if (ds.toolManager.acceptMouseDownEvent(x, y))\n                        ret = true;\n            }\n        }\n        return ret;\n    }\n\n    onToolMouseUp(frameName, x, y) {\n        let ret = false;\n        frameName += \".\";\n        for (let n in this._dataSources) {\n            if (n.indexOf(frameName) === 0) {\n                let ds = this._dataSources[n];\n                if (Util.isInstance(ds, data_sources.MainDataSource))\n                    if (ds.toolManager.acceptMouseUpEvent(x, y))\n                        ret = true;\n            }\n        }\n        return ret;\n    }\n\n    onToolMouseDrag(frameName, x, y) {\n        let ret = false;\n        frameName += \".\";\n        for (let n in this._dataSources) {\n            if (n.indexOf(frameName) === 0) {\n                let ds = this._dataSources[n];\n                if (Util.isInstance(ds, data_sources.MainDataSource))\n                    if (ds.toolManager.acceptMouseDownMoveEvent(x, y))\n                        ret = true;\n            }\n        }\n        return ret;\n    }\n\n    onMouseMove(frameName, x, y, drag) {\n        let frame = this.getFrame(frameName);\n        if (frame === undefined)\n            return;\n        this.setFrameMousePos(frameName, x, y);\n        this.hideCrossCursor();\n        if (this._highlightedFrame !== frame)\n            this.clearHighlight();\n        if (this._capturingMouseArea !== null && this._capturingMouseArea !== undefined) {\n            this._capturingMouseArea.onMouseMove(x, y);\n            return;\n        }\n        let _areas = frame.contains(x, y);\n        if (_areas === null)\n            return;\n        let a, i, cnt = _areas.length;\n        for (i = cnt - 1; i >= 0; i--) {\n            a = _areas[i];\n            a = a.onMouseMove(x, y);\n            if (a !== null) {\n                if (!Util.isInstance(a, areas.ChartAreaGroup)) {\n                    frame.highlight(a);\n                    this._highlightedFrame = frame;\n                }\n                return;\n            }\n        }\n    }\n\n    onMouseLeave(frameName, x, y, move) {\n        let frame = this.getFrame(frameName);\n        if (frame === undefined)\n            return;\n        this.setFrameMousePos(frameName, x, y);\n        this.hideCrossCursor();\n        this.clearHighlight();\n        if (this._capturingMouseArea !== null && this._capturingMouseArea !== undefined) {\n            this._capturingMouseArea.onMouseLeave(x, y);\n            this._capturingMouseArea = null;\n        }\n        this._dragStarted = false;\n    }\n\n    onMouseDown(frameName, x, y) {\n        let frame = this.getFrame(frameName);\n        if (frame === undefined)\n            return;\n        let areas = frame.contains(x, y);\n        if (areas === null)\n            return;\n        let a, i, cnt = areas.length;\n        for (i = cnt - 1; i >= 0; i--) {\n            a = areas[i];\n            a = a.onMouseDown(x, y);\n            if (a !== null) {\n                this._capturingMouseArea = a;\n                return;\n            }\n        }\n    }\n\n    onMouseUp(frameName, x, y) {\n        let frame = this.getFrame(frameName);\n        if (frame === undefined)\n            return;\n        if (this._capturingMouseArea) {\n            if (this._capturingMouseArea.onMouseUp(x, y) === null && this._dragStarted === false) {\n                if (this._selectedFrame !== null && this._selectedFrame !== undefined && this._selectedFrame !== frame)\n                    this._selectedFrame.select(null);\n                if (this._capturingMouseArea.isSelected()) {\n                    if (!this._captureMouseWheelDirectly)\n                        $(this._overlayCanvas).unbind('mousewheel');\n                    frame.select(null);\n                    this._selectedFrame = null;\n                } else {\n                    if (this._selectedFrame !== frame)\n                        if (!this._captureMouseWheelDirectly)\n                            $(this._overlayCanvas).bind('mousewheel', Control.mouseWheel);\n                    frame.select(this._capturingMouseArea);\n                    this._selectedFrame = frame;\n                }\n            }\n            this._capturingMouseArea = null;\n            this._dragStarted = false;\n        }\n    }\n\n    deleteToolObject() {\n        let pDPTool = this.getDataSource(\"frame0.k0\");\n        let selectObject = pDPTool.getSelectToolObjcet();\n        if (selectObject !== null)\n            pDPTool.delSelectToolObject();\n        let currentObject = pDPTool.getCurrentToolObject();\n        if (currentObject !== null && currentObject.getState() !== ctools.CToolObject.state.AfterDraw) {\n            pDPTool.delToolObject();\n        }\n        this.setNormalMode();\n    }\n\n    unloadTemplate(frameName) {\n        let frame = this.getFrame(frameName);\n        if (frame === undefined)\n            return;\n        for (let n in this._dataSources) {\n            if (n.match(frameName + \".\"))\n                delete this._dataSources[n];\n        }\n        for (let n in this._dataProviders) {\n            if (this._dataProviders[n].getFrameName() === frameName)\n                delete this._dataProviders[n];\n        }\n        delete this._frames[frameName];\n        for (let n in this._areas) {\n            if (this._areas[n].getFrameName() === frameName)\n                delete this._areas[n];\n        }\n        for (let n in this._timelines) {\n            if (this._timelines[n].getFrameName() === frameName)\n                delete this._timelines[n];\n        }\n        for (let n in this._ranges) {\n            if (this._ranges[n].getFrameName() === frameName)\n                delete this._ranges[n];\n        }\n        for (let n in this._plotters) {\n            if (this._plotters[n].getFrameName() === frameName)\n                delete this._plotters[n];\n        }\n        delete this._themes[frameName];\n        delete this._frameMousePos[frameName];\n    }\n\n    createIndicatorAndRange(areaName, indicName, notLoadSettings) {\n        let indic, range;\n        switch (indicName) {\n            case \"MA\":\n                indic = new indicators.MAIndicator();\n                range = new ranges.PositiveRange(areaName);\n                break;\n            case \"EMA\":\n                indic = new indicators.EMAIndicator();\n                range = new ranges.PositiveRange(areaName);\n                break;\n            case \"VOLUME\":\n                indic = new indicators.VOLUMEIndicator();\n                range = new ranges.ZeroBasedPositiveRange(areaName);\n                break;\n            case \"MACD\":\n                indic = new indicators.MACDIndicator();\n                range = new ranges.ZeroCenteredRange(areaName);\n                break;\n            case \"DMI\":\n                indic = new indicators.DMIIndicator();\n                range = new ranges.PercentageRange(areaName);\n                break;\n            case \"DMA\":\n                indic = new indicators.DMAIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"TRIX\":\n                indic = new indicators.TRIXIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"BRAR\":\n                indic = new indicators.BRARIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"VR\":\n                indic = new indicators.VRIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"OBV\":\n                indic = new indicators.OBVIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"EMV\":\n                indic = new indicators.EMVIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"RSI\":\n                indic = new indicators.RSIIndicator();\n                range = new ranges.PercentageRange(areaName);\n                break;\n            case \"WR\":\n                indic = new indicators.WRIndicator();\n                range = new ranges.PercentageRange(areaName);\n                break;\n            case \"SAR\":\n                indic = new indicators.SARIndicator();\n                range = new ranges.PositiveRange(areaName);\n                break;\n            case \"KDJ\":\n                indic = new indicators.KDJIndicator();\n                range = new ranges.PercentageRange(areaName);\n                break;\n            case \"ROC\":\n                indic = new indicators.ROCIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"MTM\":\n                indic = new indicators.MTMIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"BOLL\":\n                indic = new indicators.BOLLIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"PSY\":\n                indic = new indicators.PSYIndicator();\n                range = new ranges.Range(areaName);\n                break;\n            case \"StochRSI\":\n                indic = new indicators.STOCHRSIIndicator();\n                range = new ranges.PercentageRange(areaName);\n                break;\n            default:\n                return null;\n        }\n        if (!notLoadSettings) {\n            indic.setParameters(ChartSettings.get().indics[indicName]);\n        }\n        return {\"indic\": indic, \"range\": range};\n    }\n\n    setMainIndicator(dsName, indicName) {\n        let areaName = dsName + \".main\";\n        let dp = this.getDataProvider(areaName + \".main\");\n        if (dp === undefined || !Util.isInstance(dp, data_providers.MainDataProvider))\n            return false;\n        let indic;\n        switch (indicName) {\n            case \"MA\":\n                indic = new indicators.MAIndicator();\n                break;\n            case \"EMA\":\n                indic = new indicators.EMAIndicator();\n                break;\n            case \"BOLL\":\n                indic = new indicators.BOLLIndicator();\n                break;\n            case \"SAR\":\n                indic = new indicators.SARIndicator();\n                break;\n            default:\n                return false;\n        }\n        indic.setParameters(ChartSettings.get().indics[indicName]);\n        let indicDpName = areaName + \".secondary\";\n        let indicDp = this.getDataProvider(indicDpName);\n        if (indicDp === undefined) {\n            indicDp = new data_providers.IndicatorDataProvider(indicDpName);\n            this.setDataProvider(indicDp.getName(), indicDp);\n        }\n        indicDp.setIndicator(indic);\n        let plotter = this.getPlotter(indicDpName);\n        if (plotter === undefined) {\n            plotter = new plotters.IndicatorPlotter(indicDpName);\n            this.setPlotter(plotter.getName(), plotter);\n        }\n        this.getArea(areaName).setChanged(true);\n        return true;\n    }\n\n    setIndicator(areaName, indicName) {\n        let area = this.getArea(areaName);\n        if (area === null || area === undefined || area.getNameObject().getCompAt(2) === \"main\") {\n            return false;\n        }\n        let dp = this.getDataProvider(areaName + \".secondary\");\n        if (dp === null || dp === undefined || !Util.isInstance(dp, data_providers.IndicatorDataProvider)) {\n            return false;\n        }\n        let ret = this.createIndicatorAndRange(areaName, indicName);\n        if (ret === null || ret === undefined) {\n            return false;\n        }\n        let indic = ret.indic;\n        let range = ret.range;\n        this.removeDataProvider(areaName + \".main\");\n        this.removePlotter(areaName + \".main\");\n        this.removeRange(areaName);\n        this.removePlotter(areaName + \"Range.decoration\");\n        dp.setIndicator(indic);\n        this.setRange(areaName, range);\n        range.setPaddingTop(20);\n        range.setPaddingBottom(4);\n        range.setMinInterval(20);\n        if (Util.isInstance(indic, indicators.VOLUMEIndicator)) {\n            let plotter = new plotters.LastVolumePlotter(areaName + \"Range.decoration\");\n            this.setPlotter(plotter.getName(), plotter);\n        } else if (Util.isInstance(indic, indicators.BOLLIndicator) || Util.isInstance(indic, indicators.SARIndicator)) {\n            let dp = new data_providers.MainDataProvider(areaName + \".main\");\n            this.setDataProvider(dp.getName(), dp);\n            dp.updateData();\n            let plotter = new plotters.OHLCPlotter(areaName + \".main\");\n            this.setPlotter(plotter.getName(), plotter);\n        }\n        return true;\n    }\n\n    removeMainIndicator(dsName) {\n        let areaName = dsName + \".main\";\n        let indicDpName = areaName + \".secondary\";\n        let indicDp = this.getDataProvider(indicDpName);\n        if (indicDp === undefined || !Util.isInstance(indicDp, data_providers.IndicatorDataProvider))\n            return;\n        this.removeDataProvider(indicDpName);\n        this.removePlotter(indicDpName);\n        this.getArea(areaName).setChanged(true);\n    }\n\n    removeIndicator(areaName) {\n        let area = this.getArea(areaName);\n        if (area === undefined || area.getNameObject().getCompAt(2) === \"main\")\n            return;\n        let dp = this.getDataProvider(areaName + \".secondary\");\n        if (dp === undefined || !Util.isInstance(dp, data_providers.IndicatorDataProvider))\n            return;\n        let rangeAreaName = areaName + \"Range\";\n        let rangeArea = this.getArea(rangeAreaName);\n        if (rangeArea === undefined)\n            return;\n        let tableLayout = this.getArea(area.getDataSourceName() + \".charts\");\n        if (tableLayout === undefined)\n            return;\n        tableLayout.removeArea(area);\n        this.removeArea(areaName);\n        tableLayout.removeArea(rangeArea);\n        this.removeArea(rangeAreaName);\n        for (let n in this._dataProviders) {\n            if (this._dataProviders[n].getAreaName() === areaName)\n                this.removeDataProvider(n);\n        }\n        for (let n in this._ranges) {\n            if (this._ranges[n].getAreaName() === areaName)\n                this.removeRange(n);\n        }\n        for (let n in this._plotters) {\n            if (this._plotters[n].getAreaName() === areaName)\n                this.removePlotter(n);\n        }\n        for (let n in this._plotters) {\n            if (this._plotters[n].getAreaName() === rangeAreaName)\n                this.removePlotter(n);\n        }\n    }\n\n    getIndicatorParameters(indicName) {\n        let indic = this._fakeIndicators[indicName];\n        if (indic === undefined) {\n            let ret = this.createIndicatorAndRange(\"\", indicName);\n            if (ret === null)\n                return null;\n            this._fakeIndicators[indicName] = indic = ret.indic;\n        }\n        let params = [];\n        let i, cnt = indic.getParameterCount();\n        for (i = 0; i < cnt; i++)\n            params.push(indic.getParameterAt(i));\n        return params;\n    }\n\n    setIndicatorParameters(indicName, params) {\n        let n, indic;\n        for (n in this._dataProviders) {\n            let dp = this._dataProviders[n];\n            if (Util.isInstance(dp, data_providers.IndicatorDataProvider) === false)\n                continue;\n            indic = dp.getIndicator();\n            if (indic.getName() === indicName) {\n                indic.setParameters(params);\n                dp.refresh();\n                this.getArea(dp.getAreaName()).setChanged(true);\n            }\n        }\n        indic = this._fakeIndicators[indicName];\n        if (indic === undefined) {\n            let ret = this.createIndicatorAndRange(\"\", indicName, true);\n            if (ret === null)\n                return;\n            this._fakeIndicators[indicName] = indic = ret.indic;\n        }\n        indic.setParameters(params);\n    }\n\n    getIndicatorAreaName(dsName, index) {\n        let tableLayout = this.getArea(dsName + \".charts\");\n        let cnt = tableLayout.getAreaCount() >> 1;\n        if (index < 0 || index >= cnt)\n            return \"\";\n        return tableLayout.getAreaAt(index << 1).getName();\n    }\n\n}\nChartManager.DrawingTool = {\n    Cursor: 0,\n    CrossCursor: 1,\n    DrawLines: 2,\n    DrawFibRetrace: 3,\n    DrawFibFans: 4,\n    SegLine: 5,\n    StraightLine: 6,\n    ArrowLine: 7,\n    RayLine: 8,\n    HoriStraightLine: 9,\n    HoriRayLine: 10,\n    HoriSegLine: 11,\n    VertiStraightLine: 12,\n    PriceLine: 13,\n    BiParallelLine: 14,\n    BiParallelRayLine: 15,\n    TriParallelLine: 16,\n    BandLine: 17\n};\nChartManager.created = false;\nChartManager.instance = null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/chart_manager.js","import { Control } from './control'\r\nimport { ChartManager } from './chart_manager'\r\nimport { ChartSettings } from './chart_settings'\r\nimport $ from 'jquery'\r\n\r\nexport default class Kline {\r\n\r\n    constructor(option) {\r\n        this.element = \"#kline_container\";\r\n        this.chartMgr = null;\r\n        this.timer = null;\r\n        this.buttonDown = false;\r\n        this.init = false;\r\n        this.requestParam = \"\";\r\n        this.isSized = false;\r\n        this.data = {};\r\n        this.width = 1200;\r\n        this.height = 650;\r\n        this.symbol = \"\";\r\n        this.symbolName = \"\";\r\n        this.range = null;\r\n        this.url = \"\";\r\n        this.limit = 1000;\r\n        this.intervalTime = 5000;\r\n        this.debug = true;\r\n        this.language = \"zh-cn\";\r\n        this.theme = \"dark\";\r\n        this.ranges = [\"1w\", \"1d\", \"1h\", \"30m\", \"15m\", \"5m\", \"1m\", \"line\"];\r\n        this.depthWidth = 100;\r\n\r\n        this.periodMap = {\r\n            \"01w\": 7 * 86400 * 1000,\r\n            \"03d\": 3 * 86400 * 1000,\r\n            \"01d\": 86400 * 1000,\r\n            \"12h\": 12 * 3600 * 1000,\r\n            \"06h\": 6 * 3600 * 1000,\r\n            \"04h\": 4 * 3600 * 1000,\r\n            \"02h\": 2 * 3600 * 1000,\r\n            \"01h\": 3600 * 1000,\r\n            \"30m\": 30 * 60 * 1000,\r\n            \"15m\": 15 * 60 * 1000,\r\n            \"05m\": 5 * 60 * 1000,\r\n            \"03m\": 3 * 60 * 1000,\r\n            \"01m\": 60 * 1000,\r\n            \"line\": 60 * 1000\r\n        };\r\n        this.tagMapPeriod = {\r\n            \"1w\": \"01w\",\r\n            \"3d\": \"03d\",\r\n            \"1d\": \"01d\",\r\n            \"12h\": \"12h\",\r\n            \"6h\": \"06h\",\r\n            \"4h\": \"04h\",\r\n            \"2h\": \"02h\",\r\n            \"1h\": \"01h\",\r\n            \"30m\": \"30m\",\r\n            \"15m\": \"15m\",\r\n            \"5m\": \"05m\",\r\n            \"3m\": \"03m\",\r\n            \"1m\": \"01m\",\r\n            \"line\": \"line\"\r\n        };\r\n        //event\r\n        this.onResize = null;\r\n        this.onLangChange = null;\r\n        this.onSymbolChange = null;\r\n        this.onThemeChange = null;\r\n        this.onRangeChange = null;\r\n        this.onRequestData = null;\r\n\r\n\r\n        Object.assign(this, option);\r\n\r\n        if (!Kline.created) {\r\n            Kline.instance = this;\r\n            Kline.created = true;\r\n        }\r\n        return Kline.instance;\r\n    }\r\n\r\n\r\n    /*********************************************\r\n     * Methods\r\n     *********************************************/\r\n\r\n    draw() {\r\n        Kline.chartMgr = new ChartManager();\r\n\r\n        let view = $(this.element);\r\n        for (let k in this.ranges) {\r\n            let res = $(view).find('[name=\"' + this.ranges[k] + '\"]');\r\n            res.each(function (i, e) {\r\n                $(e).attr(\"style\", \"display:inline-block\");\r\n            });\r\n        }\r\n\r\n        setInterval(Control.refreshFunction, this.intervalTime);\r\n\r\n        this.registerMouseEvent();\r\n        ChartManager.instance.bindCanvas(\"main\", document.getElementById(\"chart_mainCanvas\"));\r\n        ChartManager.instance.bindCanvas(\"overlay\", document.getElementById(\"chart_overlayCanvas\"));\r\n        Control.refreshTemplate();\r\n        Control.onSize(this.width, this.height);\r\n        Control.readCookie();\r\n\r\n        this.setTheme(this.theme);\r\n        this.setLanguage(this.language);\r\n        this.setSymbol(this.symbol, this.symbolName);\r\n\r\n        $(this.element).css({ visibility: \"visible\" });\r\n    }\r\n\r\n    resize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        Control.onSize(this.width, this.height);\r\n    }\r\n\r\n    setSymbol(symbol, symbolName) {\r\n        this.symbol = symbol;\r\n        this.symbolName = symbolName;\r\n        Control.switchSymbol(symbol, symbolName);\r\n        this.onSymbolChangeFunc(symbol, symbolName);\r\n    }\r\n\r\n    setTheme(style) {\r\n        this.theme = style;\r\n        Control.switchTheme(style);\r\n    }\r\n\r\n    setLanguage(lang) {\r\n        this.language = lang;\r\n        Control.chartSwitchLanguage(lang);\r\n    }\r\n\r\n    setIntervalTime(intervalTime) {\r\n        this.intervalTime = intervalTime;\r\n        if (this.debug) {\r\n            console.log('DEBUG: interval time changed to ' + intervalTime);\r\n        }\r\n    }\r\n\r\n    setDepthWidth(width) {\r\n        this.depthWidth = width;\r\n        ChartManager.instance.redraw('All', false);\r\n    }\r\n\r\n    /*********************************************\r\n     * Events\r\n     *********************************************/\r\n\r\n    onResizeFunc(width, height) {\r\n        if (this.debug) {\r\n            console.log(\"DEBUG: chart resized to width: \" + width + \" height: \" + height);\r\n        }\r\n        this.onResize && this.onResize(width, height);\r\n    }\r\n\r\n    onLangChangeFunc(lang) {\r\n        if (this.debug) {\r\n            console.log(\"DEBUG: language changed to \" + lang);\r\n        }\r\n        this.onLangChange && this.onLangChange(lang);\r\n    }\r\n\r\n    onSymbolChangeFunc(symbol, symbolName) {\r\n        if (this.debug) {\r\n            console.log(\"DEBUG: symbol changed to \" + symbol + \" \" + symbolName);\r\n        }\r\n        this.onSymbolChange && this.onSymbolChange(symbol, symbolName);\r\n    }\r\n\r\n    onThemeChangeFunc(theme) {\r\n        if (this.debug) {\r\n            console.log(\"DEBUG: themes changed to : \" + theme);\r\n        }\r\n        this.onThemeChange && this.onThemeChange(theme);\r\n    }\r\n\r\n    onRangeChangeFunc(range) {\r\n        if (this.debug) {\r\n            console.log(\"DEBUG: range changed to \" + range);\r\n        }\r\n        this.onRangeChange && this.onRangeChange(range);\r\n    }\r\n\r\n    onRequestDataFunc(param, callback) {\r\n        if (this.debug) {\r\n            console.log(\"DEBUG: request data to \" + JSON.stringify(param));\r\n        }\r\n        this.onRequestData && this.onRequestData(param, callback);\r\n    }\r\n\r\n    registerMouseEvent() {\r\n        $(document).ready(function () {\r\n            function __resize() {\r\n                if (navigator.userAgent.indexOf('Firefox') >= 0) {\r\n                    setTimeout(function () {\r\n                        Control.onSize(this.width, this.height)\r\n                    }, 200);\r\n                } else {\r\n                    Control.onSize(this.width, this.height)\r\n                }\r\n            }\r\n            $('#chart_overlayCanvas').bind(\"contextmenu\", function (e) {\r\n                e.cancelBubble = true;\r\n                e.returnValue = false;\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            });\r\n            $(\".chart_container .chart_dropdown .chart_dropdown_t\")\r\n                .mouseover(function () {\r\n                    let container = $(\".chart_container\");\r\n                    let title = $(this);\r\n                    let dropdown = title.next();\r\n                    let containerLeft = container.offset().left;\r\n                    let titleLeft = title.offset().left;\r\n                    let containerWidth = container.width();\r\n                    let titleWidth = title.width();\r\n                    let dropdownWidth = dropdown.width();\r\n                    let d = ((dropdownWidth - titleWidth) / 2) << 0;\r\n                    if (titleLeft - d < containerLeft + 4) {\r\n                        d = titleLeft - containerLeft - 4;\r\n                    } else if (titleLeft + titleWidth + d > containerLeft + containerWidth - 4) {\r\n                        d += titleLeft + titleWidth + d - (containerLeft + containerWidth - 4) + 19;\r\n                    } else {\r\n                        d += 4;\r\n                    }\r\n                    dropdown.css({ \"margin-left\": -d });\r\n                    title.addClass(\"chart_dropdown-hover\");\r\n                    dropdown.addClass(\"chart_dropdown-hover\");\r\n                })\r\n                .mouseout(function () {\r\n                    $(this).next().removeClass(\"chart_dropdown-hover\");\r\n                    $(this).removeClass(\"chart_dropdown-hover\");\r\n                });\r\n            $(\".chart_dropdown_data\")\r\n                .mouseover(function () {\r\n                    $(this).addClass(\"chart_dropdown-hover\");\r\n                    $(this).prev().addClass(\"chart_dropdown-hover\");\r\n                })\r\n                .mouseout(function () {\r\n                    $(this).prev().removeClass(\"chart_dropdown-hover\");\r\n                    $(this).removeClass(\"chart_dropdown-hover\");\r\n                });\r\n            $(\"#chart_btn_parameter_settings\").click(function () {\r\n                $('#chart_parameter_settings').addClass(\"clicked\");\r\n                $(\".chart_dropdown_data\").removeClass(\"chart_dropdown-hover\");\r\n                $(\"#chart_parameter_settings\").find(\"th\").each(function () {\r\n                    let name = $(this).html();\r\n                    let index = 0;\r\n                    let tmp = ChartSettings.get();\r\n                    let value = tmp.indics[name];\r\n                    $(this.nextElementSibling).find(\"input\").each(function () {\r\n                        if (value !== null && index < value.length) {\r\n                            $(this).val(value[index]);\r\n                        }\r\n                        index++;\r\n                    });\r\n                });\r\n            });\r\n            $(\"#close_settings\").click(function () {\r\n                $('#chart_parameter_settings').removeClass(\"clicked\");\r\n            });\r\n            $(\".chart_container .chart_toolbar_tabgroup a\")\r\n                .click(function () {\r\n                    Control.switchPeriod($(this).parent().attr('name'));\r\n                });\r\n            $(\"#chart_toolbar_periods_vert ul a\").click(function () {\r\n                Control.switchPeriod($(this).parent().attr('name'));\r\n            });\r\n            $(\"#chart_show_depth\")\r\n                .click(function () {\r\n                    if ($(this).hasClass('selected')) {\r\n                        Control.switchDepth(\"off\");\r\n                    } else {\r\n                        Control.switchDepth(\"on\");\r\n                    }\r\n                });\r\n            $(\"#chart_show_tools\")\r\n                .click(function () {\r\n                    if ($(this).hasClass('selected')) {\r\n                        Control.switchTools('off');\r\n                    } else {\r\n                        Control.switchTools('on');\r\n                    }\r\n                });\r\n            $(\"#chart_toolpanel .chart_toolpanel_button\")\r\n                .click(function () {\r\n                    $(\".chart_dropdown_data\").removeClass(\"chart_dropdown-hover\");\r\n                    $(\"#chart_toolpanel .chart_toolpanel_button\").removeClass(\"selected\");\r\n                    $(this).addClass(\"selected\");\r\n                    let name = $(this).children().attr('name');\r\n                    Kline.instance.chartMgr.setRunningMode(ChartManager.DrawingTool[name]);\r\n                });\r\n            $('#chart_show_indicator')\r\n                .click(function () {\r\n                    if ($(this).hasClass('selected')) {\r\n                        Control.switchIndic('off');\r\n                    } else {\r\n                        Control.switchIndic('on');\r\n                    }\r\n                });\r\n            $(\"#chart_tabbar li a\")\r\n                .click(function () {\r\n                    $(\"#chart_tabbar li a\").removeClass('selected');\r\n                    $(this).addClass('selected');\r\n                    let name = $(this).attr('name');\r\n                    let tmp = ChartSettings.get();\r\n                    tmp.charts.indics[1] = name;\r\n                    ChartSettings.save();\r\n                    ChartManager.instance.getChart().setIndicator(1, name);\r\n                });\r\n            $(\"#chart_select_chart_style a\")\r\n                .click(function () {\r\n                    $(\"#chart_select_chart_style a\").removeClass('selected');\r\n                    $(this).addClass(\"selected\");\r\n                    let tmp = ChartSettings.get();\r\n                    tmp.charts.chartStyle = $(this)[0].innerHTML;\r\n                    ChartSettings.save();\r\n                    let mgr = ChartManager.instance;\r\n                    mgr.setChartStyle(\"frame0.k0\", $(this).html());\r\n                    mgr.redraw();\r\n                });\r\n            $('#chart_dropdown_themes li').click(function () {\r\n                $('#chart_dropdown_themes li a').removeClass('selected');\r\n                let name = $(this).attr('name');\r\n                if (name === 'chart_themes_dark') {\r\n                    Control.switchTheme('dark');\r\n                } else if (name === 'chart_themes_light') {\r\n                    Control.switchTheme('light');\r\n                }\r\n            });\r\n            $(\"#chart_select_main_indicator a\")\r\n                .click(function () {\r\n                    $(\"#chart_select_main_indicator a\").removeClass('selected');\r\n                    $(this).addClass(\"selected\");\r\n                    let name = $(this).attr('name');\r\n                    let tmp = ChartSettings.get();\r\n                    tmp.charts.mIndic = name;\r\n                    ChartSettings.save();\r\n                    let mgr = ChartManager.instance;\r\n                    if (!mgr.setMainIndicator(\"frame0.k0\", name))\r\n                        mgr.removeMainIndicator(\"frame0.k0\");\r\n                    mgr.redraw();\r\n                });\r\n            $('#chart_toolbar_theme a').click(function () {\r\n                $('#chart_toolbar_theme a').removeClass('selected');\r\n                if ($(this).attr('name') === 'dark') {\r\n                    Control.switchTheme('dark');\r\n                } else if ($(this).attr('name') === 'light') {\r\n                    Control.switchTheme('light');\r\n                }\r\n            });\r\n            $('#chart_select_theme li a').click(function () {\r\n                $('#chart_select_theme a').removeClass('selected');\r\n                if ($(this).attr('name') === 'dark') {\r\n                    Control.switchTheme('dark');\r\n                } else if ($(this).attr('name') === 'light') {\r\n                    Control.switchTheme('light');\r\n                }\r\n            });\r\n            $('#chart_enable_tools li a').click(function () {\r\n                $('#chart_enable_tools a').removeClass('selected');\r\n                if ($(this).attr('name') === 'on') {\r\n                    Control.switchTools('on');\r\n                } else if ($(this).attr('name') === 'off') {\r\n                    Control.switchTools('off');\r\n                }\r\n            });\r\n            $('#chart_enable_indicator li a').click(function () {\r\n                $('#chart_enable_indicator a').removeClass('selected');\r\n                if ($(this).attr('name') === 'on') {\r\n                    Control.switchIndic('on');\r\n                } else if ($(this).attr('name') === 'off') {\r\n                    Control.switchIndic('off');\r\n                }\r\n            });\r\n            $('#chart_language_setting_div li a').click(function () {\r\n\r\n                $('#chart_language_setting_div a').removeClass('selected');\r\n                if ($(this).attr('name') === 'zh-cn') {\r\n                    Control.chartSwitchLanguage('zh-cn');\r\n                } else if ($(this).attr('name') === 'en-us') {\r\n\r\n                    Control.chartSwitchLanguage('en-us');\r\n                } else if ($(this).attr('name') === 'zh-tw') {\r\n                    Control.chartSwitchLanguage('zh-tw');\r\n                }\r\n            });\r\n            $(document).keyup(function (e) {\r\n                if (e.keyCode === 46) {\r\n                    ChartManager.instance.deleteToolObject();\r\n                    ChartManager.instance.redraw('OverlayCanvas', false);\r\n                }\r\n            });\r\n            $(\"#clearCanvas\").click(function () {\r\n                let pDPTool = ChartManager.instance.getDataSource(\"frame0.k0\");\r\n                let len = pDPTool.getToolObjectCount();\r\n                for (let i = 0; i < len; i++) {\r\n                    pDPTool.delToolObject();\r\n                }\r\n                ChartManager.instance.redraw('OverlayCanvas', false);\r\n            });\r\n            $(\"#chart_overlayCanvas\")\r\n                .mousemove(function (e) {\r\n                    let r = e.target.getBoundingClientRect();\r\n                    let x = e.clientX - r.left;\r\n                    let y = e.clientY - r.top;\r\n                    let mgr = ChartManager.instance;\r\n                    if (Kline.instance.buttonDown === true) {\r\n                        mgr.onMouseMove(\"frame0\", x, y, true);\r\n                        mgr.redraw(\"All\", false);\r\n                    } else {\r\n                        mgr.onMouseMove(\"frame0\", x, y, false);\r\n                        mgr.redraw(\"OverlayCanvas\");\r\n                    }\r\n                })\r\n                .mouseleave(function (e) {\r\n                    let r = e.target.getBoundingClientRect();\r\n                    let x = e.clientX - r.left;\r\n                    let y = e.clientY - r.top;\r\n                    let mgr = ChartManager.instance;\r\n                    mgr.onMouseLeave(\"frame0\", x, y, false);\r\n                    mgr.redraw(\"OverlayCanvas\");\r\n                })\r\n                .mouseup(function (e) {\r\n                    if (e.which !== 1) {\r\n                        return;\r\n                    }\r\n                    Kline.instance.buttonDown = false;\r\n                    let r = e.target.getBoundingClientRect();\r\n                    let x = e.clientX - r.left;\r\n                    let y = e.clientY - r.top;\r\n                    let mgr = ChartManager.instance;\r\n                    mgr.onMouseUp(\"frame0\", x, y);\r\n                    mgr.redraw(\"All\");\r\n                })\r\n                .mousedown(function (e) {\r\n                    if (e.which !== 1) {\r\n                        ChartManager.instance.deleteToolObject();\r\n                        ChartManager.instance.redraw('OverlayCanvas', false);\r\n                        return;\r\n                    }\r\n                    Kline.instance.buttonDown = true;\r\n                    let r = e.target.getBoundingClientRect();\r\n                    let x = e.clientX - r.left;\r\n                    let y = e.clientY - r.top;\r\n                    ChartManager.instance.onMouseDown(\"frame0\", x, y);\r\n                });\r\n            $(\"#chart_parameter_settings :input\").change(function () {\r\n                let name = $(this).attr(\"name\");\r\n                let index = 0;\r\n                let valueArray = [];\r\n                let mgr = ChartManager.instance;\r\n                $(\"#chart_parameter_settings :input\").each(function () {\r\n                    if ($(this).attr(\"name\") === name) {\r\n                        if ($(this).val() !== \"\" && $(this).val() !== null && $(this).val() !== undefined) {\r\n                            let i = parseInt($(this).val());\r\n                            valueArray.push(i);\r\n                        }\r\n                        index++;\r\n                    }\r\n                });\r\n                if (valueArray.length !== 0) {\r\n                    mgr.setIndicatorParameters(name, valueArray);\r\n                    let value = mgr.getIndicatorParameters(name);\r\n                    let cookieArray = [];\r\n                    index = 0;\r\n                    $(\"#chart_parameter_settings :input\").each(function () {\r\n                        if ($(this).attr(\"name\") === name) {\r\n                            if ($(this).val() !== \"\" && $(this).val() !== null && $(this).val() !== undefined) {\r\n                                $(this).val(value[index].getValue());\r\n                                cookieArray.push(value[index].getValue());\r\n                            }\r\n                            index++;\r\n                        }\r\n                    });\r\n                    let tmp = ChartSettings.get();\r\n                    tmp.indics[name] = cookieArray;\r\n                    ChartSettings.save();\r\n                    mgr.redraw('All', false);\r\n                }\r\n            });\r\n            $(\"#chart_parameter_settings button\").click(function () {\r\n                let name = $(this).parents(\"tr\").children(\"th\").html();\r\n                let index = 0;\r\n                let value = ChartManager.instance.getIndicatorParameters(name);\r\n                let valueArray = [];\r\n                $(this).parent().prev().children('input').each(function () {\r\n                    if (value !== null && index < value.length) {\r\n                        $(this).val(value[index].getDefaultValue());\r\n                        valueArray.push(value[index].getDefaultValue());\r\n                    }\r\n                    index++;\r\n                });\r\n                ChartManager.instance.setIndicatorParameters(name, valueArray);\r\n                let tmp = ChartSettings.get();\r\n                tmp.indics[name] = valueArray;\r\n                ChartSettings.save();\r\n                ChartManager.instance.redraw('All', false);\r\n            });\r\n\r\n            $('body').on('click', '#sizeIcon', function () {\r\n                Kline.instance.isSized = !Kline.instance.isSized;\r\n                if (Kline.instance.isSized) {\r\n                    $(Kline.instance.element).css({\r\n                        position: 'fixed',\r\n                        left: '0',\r\n                        right: '0',\r\n                        top: '0',\r\n                        bottom: '0',\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        zIndex: '10000'\r\n                    });\r\n\r\n                    Control.onSize();\r\n                    $('html,body').css({ width: '100%', height: '100%', overflow: 'hidden' });\r\n                } else {\r\n                    $(Kline.instance.element).attr('style', '');\r\n\r\n                    $('html,body').attr('style', '');\r\n\r\n                    Control.onSize(Kline.instance.width, Kline.instance.height);\r\n                    $(Kline.instance.element).css({ visibility: 'visible', height: Kline.instance.height + 'px' });\r\n                }\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n}\r\nKline.created = false;\r\nKline.instance = null;\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/kline.js","import {NamedObject} from './named_object'\nimport {ChartManager} from './chart_manager'\nimport {Util} from './util'\nimport * as data_sources from './data_sources'\n\n\nexport class DataProvider extends NamedObject {\n\n    constructor(name) {\n        super(name);\n        this._minValue = 0;\n        this._maxValue = 0;\n        this._minValueIndex = -1;\n        this._maxValueIndex = -1;\n    }\n\n    getMinValue() {\n        return this._minValue;\n    }\n\n    getMaxValue() {\n        return this._maxValue;\n    }\n\n    getMinValueIndex() {\n        return this._minValueIndex;\n    }\n\n    getMaxValueIndex() {\n        return this._maxValueIndex;\n    }\n\n    getMinMaxAt(index, minmax) {\n        return true;\n    }\n\n    calcRange(firstIndexes, lastIndex, minmaxes, indexes) {\n        let min = Number.MAX_VALUE;\n        let max = -Number.MAX_VALUE;\n        let minIndex = -1;\n        let maxIndex = -1;\n        let minmax = {};\n        let i = lastIndex - 1;\n        let n = firstIndexes.length - 1;\n        for (; n >= 0; n--) {\n            let first = firstIndexes[n];\n            if (i < first) {\n                minmaxes[n] = {\"min\": min, \"max\": max};\n            } else {\n                for (; i >= first; i--) {\n                    if (this.getMinMaxAt(i, minmax) === false) {\n                        continue;\n                    }\n                    if (min > minmax.min) {\n                        min = minmax.min;\n                        minIndex = i;\n                    }\n                    if (max < minmax.max) {\n                        max = minmax.max;\n                        maxIndex = i;\n                    }\n                }\n                minmaxes[n] = {\"min\": min, \"max\": max};\n            }\n            if (indexes !== null && indexes !== undefined) {\n                indexes[n] = {\"minIndex\": minIndex, \"maxIndex\": maxIndex};\n            }\n        }\n    }\n\n    updateRange() {\n        let mgr = ChartManager.instance;\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let firstIndexes = [timeline.getFirstIndex()];\n        let minmaxes = [{}];\n        let indexes = [{}];\n        this.calcRange(firstIndexes, timeline.getLastIndex(), minmaxes, indexes);\n        this._minValue = minmaxes[0].min;\n        this._maxValue = minmaxes[0].max;\n        this._minValueIndex = indexes[0].minIndex;\n        this._maxValueIndex = indexes[0].maxIndex;\n    }\n\n}\n\n\nexport class MainDataProvider extends DataProvider {\n\n    constructor(name) {\n        super(name);\n        this._candlestickDS = null;\n    }\n\n    updateData() {\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (!Util.isInstance(ds, data_sources.MainDataSource)) {\n            return;\n        }\n        this._candlestickDS = ds;\n    }\n\n    getMinMaxAt(index, minmax) {\n        let data = this._candlestickDS.getDataAt(index);\n        minmax.min = data.low;\n        minmax.max = data.high;\n        return true;\n    }\n\n}\n\n\nexport class IndicatorDataProvider extends DataProvider {\n\n    getIndicator() {\n        return this._indicator;\n    }\n\n    setIndicator(v) {\n        this._indicator = v;\n        this.refresh();\n    }\n\n    refresh() {\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (ds.getDataCount() < 1) {\n            return;\n        }\n        let indic = this._indicator;\n        let i, last = ds.getDataCount();\n        indic.clear();\n        indic.reserve(last);\n        for (i = 0; i < last; i++) {\n            indic.execute(ds, i);\n        }\n    }\n\n    updateData() {\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        if (ds.getDataCount() < 1) {\n            return;\n        }\n        let indic = this._indicator;\n        let mode = ds.getUpdateMode();\n        switch (mode) {\n            case data_sources.DataSource.UpdateMode.Refresh: {\n                this.refresh();\n                break;\n            }\n            case data_sources.DataSource.UpdateMode.Append: {\n                indic.reserve(ds.getAppendedCount());\n                break;\n            }\n            case data_sources.DataSource.UpdateMode.Update: {\n                let i, last = ds.getDataCount();\n                let cnt = ds.getUpdatedCount() + ds.getAppendedCount();\n                for (i = last - cnt; i < last; i++) {\n                    indic.execute(ds, i);\n                }\n                break;\n            }\n        }\n    }\n\n    getMinMaxAt(index, minmax) {\n        minmax.min = Number.MAX_VALUE;\n        minmax.max = -Number.MAX_VALUE;\n        let result, valid = false;\n        let i, cnt = this._indicator.getOutputCount();\n        for (i = 0; i < cnt; i++) {\n            result = this._indicator.getOutputAt(i).execute(index);\n            if (isNaN(result) === false) {\n                valid = true;\n                if (minmax.min > result) {\n                    minmax.min = result;\n                }\n                if (minmax.max < result) {\n                    minmax.max = result;\n                }\n            }\n        }\n        return valid;\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/data_providers.js","import {NamedObject} from './named_object'\nimport {ChartManager} from './chart_manager'\n\nexport class Range extends NamedObject {\n\n    constructor(name) {\n        super(name);\n        this._updated = true;\n        this._minValue = Number.MAX_VALUE;\n        this._maxValue = -Number.MAX_VALUE;\n        this._outerMinValue = Number.MAX_VALUE;\n        this._outerMaxValue = -Number.MAX_VALUE;\n        this._ratio = 0;\n        this._top = 0;\n        this._bottom = 0;\n        this._paddingTop = 0;\n        this._paddingBottom = 0;\n        this._minInterval = 36;\n        this._selectedPosition = -1;\n        this._selectedValue = -Number.MAX_VALUE;\n        this._gradations = [];\n    }\n\n    isUpdated() {\n        return this._updated;\n    }\n\n    setUpdated(v) {\n        this._updated = v;\n    }\n\n    getMinValue() {\n        return this._minValue;\n    }\n\n    getMaxValue() {\n        return this._maxValue;\n    }\n\n    getRange() {\n        return this._maxValue - this._minValue;\n    }\n\n    getOuterMinValue() {\n        return this._outerMinValue;\n    }\n\n    getOuterMaxValue() {\n        return this._outerMaxValue;\n    }\n\n    getOuterRange() {\n        return this._outerMaxValue - this._outerMinValue;\n    }\n\n    getHeight() {\n        return Math.max(0, this._bottom - this._top);\n    }\n\n    getGradations() {\n        return this._gradations;\n    }\n\n    getMinInterval() {\n        return this._minInterval;\n    }\n\n    setMinInterval(v) {\n        this._minInterval = v;\n    }\n\n    getSelectedPosition() {\n        if (this._selectedPosition >= 0) {\n            return this._selectedPosition;\n        }\n        if (this._selectedValue > -Number.MAX_VALUE) {\n            return this.toY(this._selectedValue);\n        }\n        return -1;\n    }\n\n    getSelectedValue() {\n        if (this._selectedValue > -Number.MAX_VALUE) {\n            return this._selectedValue;\n        }\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        if (area === null) {\n            return -Number.MAX_VALUE;\n        }\n        if (this._selectedPosition < area.getTop() + 12 || this._selectedPosition >= area.getBottom() - 4) {\n            return -Number.MAX_VALUE;\n        }\n        return this.toValue(this._selectedPosition);\n    }\n\n    setPaddingTop(p) {\n        this._paddingTop = p;\n    }\n\n    setPaddingBottom(p) {\n        this._paddingBottom = p;\n    }\n\n    toValue(y) {\n        return this._maxValue - (y - this._top) / this._ratio;\n    }\n\n    toY(value) {\n        if (this._ratio > 0) {\n            return this._top + Math.floor((this._maxValue - value) * this._ratio + 0.5);\n        }\n        return this._top;\n    }\n\n    toHeight(value) {\n\t\tif (value == Infinity || this._ratio == 0) {\n\t\t  return 1.5;\n\t\t}\n\t  \treturn Math.floor(value * this._ratio + 1.5);\n    }\n\n    update() {\n        let min = Number.MAX_VALUE;\n        let max = -Number.MAX_VALUE;\n        let mgr = ChartManager.instance;\n        let dp, dpNames = [\".main\", \".secondary\"];\n        for (let i = 0; i < dpNames.length; i++) {\n            dp = mgr.getDataProvider(this.getName() + dpNames[i]);\n            if (dp !== null && dp !== undefined) {\n                min = Math.min(min, dp.getMinValue());\n                max = Math.max(max, dp.getMaxValue());\n            }\n        }\n        let r = {\"min\": min, \"max\": max};\n        this.preSetRange(r);\n        this.setRange(r.min, r.max);\n    }\n\n    select(v) {\n        this._selectedValue = v;\n        this._selectedPosition = -1;\n    }\n\n    selectAt(y) {\n        this._selectedPosition = y;\n        this._selectedValue = -Number.MAX_VALUE;\n    }\n\n    unselect() {\n        this._selectedPosition = -1;\n        this._selectedValue = -Number.MAX_VALUE;\n    }\n\n    preSetRange(r) {\n        if (r.min === r.max) {\n            r.min = -1.0;\n            r.max = 1.0;\n        }\n    }\n\n    setRange(minValue, maxValue) {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        if (this._minValue === minValue && this._maxValue === maxValue && !area.isChanged()) {\n            return;\n        }\n        this._updated = true;\n        this._minValue = minValue;\n        this._maxValue = maxValue;\n        this._gradations = [];\n        let top = area.getTop() + this._paddingTop;\n        let bottom = area.getBottom() - (this._paddingBottom + 1);\n        if (top >= bottom) {\n            this._minValue = this._maxValue;\n            return;\n        }\n        this._top = top;\n        this._bottom = bottom;\n        if (this._maxValue > this._minValue)\n            this._ratio = (bottom - top) / (this._maxValue - this._minValue);\n        else {\n            this._ratio = 1;\n        }\n        this._outerMinValue = this.toValue(area.getBottom());\n        this._outerMaxValue = this.toValue(area.getTop());\n        this.updateGradations();\n    }\n\n    calcInterval() {\n        let H = this.getHeight();\n        let h = this.getMinInterval();\n        if ((H / h) <= 1) {\n            h = H >> 1;\n        }\n        let d = this.getRange();\n        let i = 0;\n        while (i > -2 && Math.floor(d) < d) {\n            d *= 10.0;\n            i--;\n        }\n        let m, c;\n        for (; ; i++) {\n            c = Math.pow(10.0, i);\n            m = c;\n            if (this.toHeight(m) > h)\n                break;\n            m = 2.0 * c;\n            if (this.toHeight(m) > h)\n                break;\n            m = 5.0 * c;\n            if (this.toHeight(m) > h)\n                break;\n        }\n        return m;\n    }\n\n    updateGradations() {\n        this._gradations = [];\n        let interval = this.calcInterval();\n        if (interval <= 0.0) {\n            return;\n        }\n        let v = Math.floor(this.getMaxValue() / interval) * interval;\n        do {\n            this._gradations.push(v);\n            v -= interval;\n        } while (v > this.getMinValue());\n    }\n\n}\n\n\nexport class PositiveRange extends Range {\n\n    constructor(name) {\n        super(name);\n    }\n\n    preSetRange(r) {\n        if (r.min < 0) r.min = 0;\n        if (r.max < 0) r.max = 0;\n    }\n\n}\n\n\nexport class ZeroBasedPositiveRange extends Range {\n\n    constructor(name) {\n        super(name);\n    }\n\n    preSetRange(r) {\n        r.min = 0;\n        if (r.max < 0) r.max = 0;\n    }\n\n}\n\n\nexport class MainRange extends Range {\n\n    constructor(name) {\n        super(name);\n    }\n\n    preSetRange(r) {\n        let mgr = ChartManager.instance;\n\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        let dIndex = timeline.getMaxIndex() - timeline.getLastIndex();\n        if (dIndex < 25) {\n            let ds = mgr.getDataSource(this.getDataSourceName());\n\n            let data = ds.getDataAt(ds.getDataCount() - 1);\n            let d = ((r.max - r.min) / 4) * (1 - (dIndex / 25));\n\n            r.min = Math.min(r.min, Math.max(data.low - d, 0));\n            r.max = Math.max(r.max, data.high + d);\n        }\n\n        if (r.min > 0) {\n            let a = r.max / r.min;\n\n            if (a < 1.016) {\n                let m = (r.max + r.min) / 2.0;\n                let c = (a - 1.0) * 1.5;\n                r.max = m * (1.0 + c);\n                r.min = m * (1.0 - c);\n            } else if (a < 1.048) {\n                let m = (r.max + r.min) / 2.0;\n                r.max = m * 1.024;\n                r.min = m * 0.976;\n            }\n        }\n        if (r.min < 0) r.min = 0;\n        if (r.max < 0) r.max = 0;\n    }\n\n}\n\n\nexport class ZeroCenteredRange extends Range {\n\n    constructor(name) {\n        super(name);\n    }\n\n    calcInterval(area) {\n        let h = this.getMinInterval();\n        if (area.getHeight() / h < 2) {\n            return 0.0;\n        }\n        let r = this.getRange();\n        let i;\n        for (i = 3; ; i += 2) {\n            if (this.toHeight(r / i) <= h)\n                break;\n        }\n        i -= 2;\n        return r / i;\n    }\n\n    updateGradations() {\n        this._gradations = [];\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let interval = this.calcInterval(area);\n        if (interval <= 0.0) {\n            return;\n        }\n        let v = interval / 2.0;\n        do {\n            this._gradations.push(v);\n            this._gradations.push(-v);\n            v += interval;\n        } while (v <= this.getMaxValue());\n    }\n\n    preSetRange(r) {\n        let abs = Math.max(Math.abs(r.min), Math.abs(r.max));\n        r.min = -abs;\n        r.max = abs;\n    }\n\n}\n\n\nexport class PercentageRange extends Range {\n\n    constructor(name) {\n        super(name);\n    }\n\n    updateGradations() {\n        this._gradations = [];\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getAreaName());\n        let interval = 10.0;\n        let h = Math.floor(this.toHeight(interval));\n        if ((h << 2) > area.getHeight())\n            return;\n        let v = Math.ceil(this.getMinValue() / interval) * interval;\n        if (v === 0.0)\n            v = 0;\n        if ((h << 2) < 24) {\n            if ((h << 1) < 8)\n                return;\n            do {\n                if (v === 20.0 || v === 80.0)\n                    this._gradations.push(v);\n                v += interval;\n            } while (v < this.getMaxValue());\n        } else {\n            do {\n                if (h < 8) {\n                    if (v === 20.0 || v === 50.0 || v === 80.0)\n                        this._gradations.push(v);\n                } else {\n                    if (v === 0.0 || v === 20.0 || v === 50.0 || v === 80.0 || v === 100.0)\n                        this._gradations.push(v);\n                }\n                v += interval;\n            } while (v < this.getMaxValue());\n        }\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/ranges.js","export class CName {\n\n    constructor(name) {\n        this._names = [];\n        this._comps = [];\n        if (name instanceof CName) {\n            this._names = name._names;\n            this._comps = name._comps;\n        } else {\n            let comps = name.split(\".\");\n            let dotNum = comps.length - 1;\n            if (dotNum > 0) {\n                this._comps = comps;\n                this._names.push(comps[0]);\n                for (let i = 1; i <= dotNum; i++) {\n                    this._names.push(this._names[i - 1] + \".\" + comps[i]);\n                }\n            } else {\n                this._comps.push(name);\n                this._names.push(name);\n            }\n        }\n    }\n\n    getCompAt(index) {\n        if (index >= 0 && index < this._comps.length)\n            return this._comps[index];\n        return \"\";\n    }\n\n    getName(index) {\n        if (index < 0) {\n            if (this._names.length > 0)\n                return this._names[this._names.length - 1];\n        } else if (index < this._names.length) {\n            return this._names[index];\n        }\n        return \"\";\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/cname.js","import {NamedObject} from './named_object'\nimport {ChartManager} from './chart_manager'\nimport {MEvent} from './mevent'\n\nexport class ChartArea extends NamedObject {\n\n    constructor(name) {\n        super(name);\n        this._left = 0;\n        this._top = 0;\n        this._right = 0;\n        this._bottom = 0;\n        this._changed = false;\n        this._highlighted = false;\n        this._pressed = false;\n        this._selected = false;\n        this.Measuring = new MEvent();\n    }\n\n    getDockStyle() {\n        return this._dockStyle;\n    }\n\n    setDockStyle(dockStyle) {\n        this._dockStyle = dockStyle;\n    }\n\n    getLeft() {\n        return this._left;\n    }\n\n\n    getTop() {\n        return this._top;\n    }\n\n\n    setTop(v) {\n        if (this._top !== v) {\n            this._top = v;\n            this._changed = true;\n        }\n    }\n\n\n    getRight() {\n        return this._right;\n    }\n\n\n    getBottom() {\n        return this._bottom;\n    }\n\n    setBottom(v) {\n        if (this._bottom !== v) {\n            this._bottom = v;\n            this._changed = true;\n        }\n    }\n\n    getCenter() {\n        return (this._left + this._right) >> 1;\n    }\n\n    getMiddle() {\n        return (this._top + this._bottom) >> 1;\n    }\n\n    getWidth() {\n        return this._right - this._left;\n    }\n\n    getHeight() {\n        return this._bottom - this._top;\n    }\n\n    getRect() {\n        return {\n            X: this._left,\n            Y: this._top,\n            Width: this._right - this._left,\n            Height: this._bottom - this._top\n        };\n    }\n\n    contains(x, y) {\n        if (x >= this._left && x < this._right)\n            if (y >= this._top && y < this._bottom)\n                return [this];\n        return null;\n    }\n\n    getMeasuredWidth() {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight() {\n        return this._measuredHeight;\n    }\n\n    setMeasuredDimension(width, height) {\n        this._measuredWidth = width;\n        this._measuredHeight = height;\n    }\n\n    measure(context, width, height) {\n        this._measuredWidth = 0;\n        this._measuredHeight = 0;\n        this.Measuring.raise(this, {Width: width, Height: height});\n        if (this._measuredWidth === 0 && this._measuredHeight === 0)\n            this.setMeasuredDimension(width, height);\n    }\n\n    layout(left, top, right, bottom, forceChange) {\n        left <<= 0;\n        if (this._left !== left) {\n            this._left = left;\n            this._changed = true;\n        }\n        top <<= 0;\n        if (this._top !== top) {\n            this._top = top;\n            this._changed = true;\n        }\n        right <<= 0;\n        if (this._right !== right) {\n            this._right = right;\n            this._changed = true;\n        }\n        bottom <<= 0;\n        if (this._bottom !== bottom) {\n            this._bottom = bottom;\n            this._changed = true;\n        }\n        if (forceChange)\n            this._changed = true;\n    }\n\n    isChanged() {\n        return this._changed;\n    }\n\n    setChanged(v) {\n        this._changed = v;\n    }\n\n    isHighlighted() {\n        return this._highlighted;\n    }\n\n    getHighlightedArea() {\n        return this._highlighted ? this : null;\n    }\n\n\n    highlight(area) {\n        this._highlighted = (this === area);\n        return this._highlighted ? this : null;\n    }\n\n    isPressed() {\n        return this._pressed;\n    }\n\n\n    setPressed(v) {\n        this._pressed = v;\n    }\n\n    isSelected() {\n        return this._selected;\n    }\n\n    getSelectedArea() {\n        return this._selected ? this : null;\n    }\n\n    select(area) {\n        this._selected = (this === area);\n        return this._selected ? this : null;\n    }\n\n    onMouseMove(x, y) {\n        return null;\n    }\n\n    onMouseLeave(x, y) {\n    }\n\n    onMouseDown(x, y) {\n        return null;\n    }\n\n    onMouseUp(x, y) {\n        return null;\n    }\n\n}\nChartArea.DockStyle = {\n    Left: 0,\n    Top: 1,\n    Right: 2,\n    Bottom: 3,\n    Fill: 4\n};\n\nexport class MainArea extends ChartArea {\n\n    constructor(name) {\n        super(name);\n        this._dragStarted = false;\n        this._oldX = 0;\n        this._oldY = 0;\n        this._passMoveEventToToolManager = true;\n    }\n\n    onMouseMove(x, y) {\n        let mgr = ChartManager.instance;\n        if (mgr._capturingMouseArea === this)\n            if (this._dragStarted === false)\n                if (Math.abs(this._oldX - x) > 1 || Math.abs(this._oldY - y) > 1)\n                    this._dragStarted = true;\n        if (this._dragStarted) {\n            mgr.hideCursor();\n            if (mgr.onToolMouseDrag(this.getFrameName(), x, y))\n                return this;\n            mgr.getTimeline(this.getDataSourceName()).move(x - this._oldX);\n            return this;\n        }\n        if (this._passMoveEventToToolManager && mgr.onToolMouseMove(this.getFrameName(), x, y)) {\n            mgr.hideCursor();\n            return this;\n        }\n        switch (mgr._drawingTool) {\n            case ChartManager.DrawingTool.Cursor:\n                mgr.showCursor();\n                break;\n            case ChartManager.DrawingTool.CrossCursor:\n                if (mgr.showCrossCursor(this, x, y))\n                    mgr.hideCursor();\n                else\n                    mgr.showCursor();\n                break;\n            default:\n                mgr.hideCursor();\n                break;\n        }\n        return this;\n    }\n\n    onMouseLeave(x, y) {\n        this._dragStarted = false;\n        this._passMoveEventToToolManager = true;\n    }\n\n    onMouseDown(x, y) {\n        let mgr = ChartManager.instance;\n        mgr.getTimeline(this.getDataSourceName()).startMove();\n        this._oldX = x;\n        this._oldY = y;\n        this._dragStarted = false;\n        if (mgr.onToolMouseDown(this.getFrameName(), x, y))\n            this._passMoveEventToToolManager = false;\n        return this;\n    }\n\n    onMouseUp(x, y) {\n        let mgr = ChartManager.instance;\n        let ret = null;\n        if (this._dragStarted) {\n            this._dragStarted = false;\n            ret = this;\n        }\n        if (mgr.onToolMouseUp(this.getFrameName(), x, y))\n            ret = this;\n        this._passMoveEventToToolManager = true;\n        return ret;\n    }\n}\n\nexport class IndicatorArea extends ChartArea {\n\n    constructor(name) {\n        super(name);\n        this._dragStarted = false;\n        this._oldX = 0;\n        this._oldY = 0;\n    }\n\n    onMouseMove(x, y) {\n        let mgr = ChartManager.instance;\n        if (mgr._capturingMouseArea === this) {\n            if (this._dragStarted === false) {\n                if (this._oldX !== x || this._oldY !== y) {\n                    this._dragStarted = true;\n                }\n            }\n        }\n        if (this._dragStarted) {\n            mgr.hideCursor();\n            mgr.getTimeline(this.getDataSourceName()).move(x - this._oldX);\n            return this;\n        }\n        switch (mgr._drawingTool) {\n            case ChartManager.DrawingTool.CrossCursor:\n                if (mgr.showCrossCursor(this, x, y))\n                    mgr.hideCursor();\n                else\n                    mgr.showCursor();\n                break;\n            default:\n                mgr.showCursor();\n                break;\n        }\n        return this;\n    }\n\n    onMouseLeave(x, y) {\n        this._dragStarted = false;\n    }\n\n\n    onMouseDown(x, y) {\n        let mgr = ChartManager.instance;\n        mgr.getTimeline(this.getDataSourceName()).startMove();\n        this._oldX = x;\n        this._oldY = y;\n        this._dragStarted = false;\n        return this;\n    }\n\n    onMouseUp(x, y) {\n        if (this._dragStarted) {\n            this._dragStarted = false;\n            return this;\n        }\n        return null;\n    }\n\n}\n\nexport class MainRangeArea extends ChartArea {\n\n    constructor(name) {\n        super(name);\n    }\n\n    onMouseMove(x, y) {\n        ChartManager.instance.showCursor();\n        return this;\n    }\n\n}\n\nexport class IndicatorRangeArea extends ChartArea {\n\n    constructor(name) {\n        super(name);\n    }\n\n    onMouseMove(x, y) {\n        ChartManager.instance.showCursor();\n        return this;\n    }\n\n}\n\nexport class TimelineArea extends ChartArea {\n\n    constructor(name) {\n        super(name);\n    }\n\n    onMouseMove(x, y) {\n        ChartManager.instance.showCursor();\n        return this;\n    }\n\n}\n\nexport class ChartAreaGroup extends ChartArea {\n\n    constructor(name) {\n        super(name);\n        this._areas = [];\n        this._highlightedArea = null;\n        this._selectedArea = null;\n    }\n\n    contains(x, y) {\n        let areas;\n        let a, i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++) {\n            a = this._areas[i];\n            areas = a.contains(x, y);\n            if (areas !== null) {\n                areas.push(this);\n                return areas;\n            }\n        }\n        return super.contains(x, y);\n    }\n\n    getAreaCount() {\n        return this._areas.length;\n    }\n\n    getAreaAt(index) {\n        if (index < 0 || index >= this._areas.length) {\n            return null;\n        }\n        return this._areas[index];\n    }\n\n\n    addArea(area) {\n        this._areas.push(area);\n    }\n\n    removeArea(area) {\n        let i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++) {\n            if (area === this._areas[i]) {\n                this._areas.splice(i);\n                this.setChanged(true);\n                break;\n            }\n        }\n    }\n\n    getGridColor() {\n        return this._gridColor;\n    }\n\n    setGridColor(c) {\n        this._gridColor = c;\n    }\n\n    getHighlightedArea() {\n        if (this._highlightedArea !== null) {\n            return this._highlightedArea.getHighlightedArea();\n        }\n        return null;\n    }\n\n    highlight(area) {\n        this._highlightedArea = null;\n        let e, i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++) {\n            e = this._areas[i].highlight(area);\n            if (e !== null) {\n                this._highlightedArea = e;\n                return this;\n            }\n        }\n        return null;\n    }\n\n    getSelectedArea() {\n        if (this._selectedArea !== null) {\n            return this._selectedArea.getSelectedArea();\n        }\n        return null;\n    }\n\n    select(area) {\n        this._selectedArea = null;\n        let e, i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++) {\n            e = this._areas[i].select(area);\n            if (e !== null) {\n                this._selectedArea = e;\n                return this;\n            }\n        }\n        return null;\n    }\n\n    onMouseLeave(x, y) {\n        let i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++)\n            this._areas[i].onMouseLeave(x, y);\n    }\n\n    onMouseUp(x, y) {\n        let a, i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++) {\n            a = this._areas[i].onMouseUp(x, y);\n            if (a !== null)\n                return a;\n        }\n        return null;\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/areas.js","import Kline from './kline'\n\nexport class Theme {\n    constructor(){\n        this._colors=[];\n        this._fonts=[];\n    }\n    getColor(which) {\n        return this._colors[which];\n    }\n    getFont(which) {\n        return this._fonts[which];\n    }\n}\nTheme.theme_color_id = 0;\nTheme.theme_font_id = 0;\nTheme.Color = {\n    Positive: Theme.theme_color_id++,\n    Negative: Theme.theme_color_id++,\n    PositiveDark: Theme.theme_color_id++,\n    NegativeDark: Theme.theme_color_id++,\n    Unchanged: Theme.theme_color_id++,\n    Background: Theme.theme_color_id++,\n    Cursor: Theme.theme_color_id++,\n    RangeMark: Theme.theme_color_id++,\n    Indicator0: Theme.theme_color_id++,\n    Indicator1: Theme.theme_color_id++,\n    Indicator2: Theme.theme_color_id++,\n    Indicator3: Theme.theme_color_id++,\n    Indicator4: Theme.theme_color_id++,\n    Indicator5: Theme.theme_color_id++,\n    Grid0: Theme.theme_color_id++,\n    Grid1: Theme.theme_color_id++,\n    Grid2: Theme.theme_color_id++,\n    Grid3: Theme.theme_color_id++,\n    Grid4: Theme.theme_color_id++,\n    TextPositive: Theme.theme_color_id++,\n    TextNegative: Theme.theme_color_id++,\n    Text0: Theme.theme_color_id++,\n    Text1: Theme.theme_color_id++,\n    Text2: Theme.theme_color_id++,\n    Text3: Theme.theme_color_id++,\n    Text4: Theme.theme_color_id++,\n    LineColorNormal: Theme.theme_color_id++,\n    LineColorSelected: Theme.theme_color_id++,\n    CircleColorFill: Theme.theme_color_id++,\n    CircleColorStroke: Theme.theme_color_id++\n};\nTheme.Font = {\n    Default: Theme.theme_font_id++\n};\n\nexport class DarkTheme extends Theme {\n\n    constructor() {\n        super();\n        this._colors = [];\n\n        this._colors[Theme.Color.Positive] = \"#19b34c\";\n        this._colors[Theme.Color.Negative] = \"#990e0e\";\n        this._colors[Theme.Color.PositiveDark] = \"#004718\";\n        this._colors[Theme.Color.NegativeDark] = \"#3b0e08\";\n\n        this._colors[Theme.Color.Unchanged] = \"#fff\";\n        this._colors[Theme.Color.Background] = \"#161616\";\n        this._colors[Theme.Color.Cursor] = \"#aaa\";\n        this._colors[Theme.Color.RangeMark] = \"#f9ee30\";\n        this._colors[Theme.Color.Indicator0] = \"#ddd\";\n        this._colors[Theme.Color.Indicator1] = \"#f9ee30\";\n        this._colors[Theme.Color.Indicator2] = \"#f600ff\";\n        this._colors[Theme.Color.Indicator3] = \"#6bf\";\n        this._colors[Theme.Color.Indicator4] = \"#a5cf81\";\n        this._colors[Theme.Color.Indicator5] = \"#e18b89\";\n        this._colors[Theme.Color.Grid0] = \"#555\";\n        this._colors[Theme.Color.Grid1] = \"#555\";\n        this._colors[Theme.Color.Grid3] = \"#888\";\n        this._colors[Theme.Color.Grid4] = \"#aaa\";\n        this._colors[Theme.Color.TextPositive] = \"#1bd357\";\n        this._colors[Theme.Color.TextNegative] = \"#ff6f5e\";\n        this._colors[Theme.Color.Text0] = \"#444\";\n        this._colors[Theme.Color.Text1] = \"#666\";\n        this._colors[Theme.Color.Text2] = \"#888\";\n        this._colors[Theme.Color.Text3] = \"#aaa\";\n        this._colors[Theme.Color.Text4] = \"#ccc\";\n        this._colors[Theme.Color.LineColorNormal] = \"#a6a6a6\";\n        this._colors[Theme.Color.LineColorSelected] = \"#ffffff\";\n        this._colors[Theme.Color.CircleColorFill] = \"#161616\";\n        this._colors[Theme.Color.CircleColorStroke] = \"#ffffff\";\n        this._fonts = [];\n        this._fonts[Theme.Font.Default] = \"12px Tahoma\";\n    }\n\n}\n\n\nexport class LightTheme extends Theme {\n\n    constructor() {\n        super();\n        this._colors = [];\n\n        this._colors[Theme.Color.Positive] = \"#53b37b\";\n        this._colors[Theme.Color.Negative] = \"#db5542\";\n        this._colors[Theme.Color.PositiveDark] = \"#66d293\";\n        this._colors[Theme.Color.NegativeDark] = \"#ffadaa\";\n\n        this._colors[Theme.Color.Unchanged] = \"#fff\";\n        this._colors[Theme.Color.Background] = \"#f6f6f6\";\n        this._colors[Theme.Color.Cursor] = \"#aaa\";\n        this._colors[Theme.Color.RangeMark] = \"#f27935\";\n        this._colors[Theme.Color.Indicator0] = \"#d27972\";\n        this._colors[Theme.Color.Indicator1] = \"#ffb400\";\n        this._colors[Theme.Color.Indicator2] = \"#e849b9\";\n        this._colors[Theme.Color.Indicator3] = \"#1478c8\";\n        this._colors[Theme.Color.Grid0] = \"#aaa\";\n        this._colors[Theme.Color.Grid1] = \"#aaa\";\n        this._colors[Theme.Color.Grid3] = \"#bbb\";\n        this._colors[Theme.Color.Grid4] = \"#aaa\";\n        this._colors[Theme.Color.TextPositive] = \"#53b37b\";\n        this._colors[Theme.Color.TextNegative] = \"#db5542\";\n        this._colors[Theme.Color.Text0] = \"#ccc\";\n        this._colors[Theme.Color.Text1] = \"#aaa\";\n        this._colors[Theme.Color.Text2] = \"#888\";\n        this._colors[Theme.Color.Text3] = \"#666\";\n        this._colors[Theme.Color.Text4] = \"#444\";\n        this._colors[Theme.Color.LineColorNormal] = \"#8c8c8c\";\n        this._colors[Theme.Color.LineColorSelected] = \"#393c40\";\n        this._colors[Theme.Color.CircleColorFill] = \"#f6f6f6\";\n        this._colors[Theme.Color.CircleColorStroke] = \"#393c40\";\n        this._fonts = [];\n        this._fonts[Theme.Font.Default] = \"12px Tahoma\";\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/themes.js","import Kline from './kline'\nimport {ChartManager} from './chart_manager'\nimport {ChartSettings} from './chart_settings'\nimport {DefaultTemplate, Template} from './templates'\nimport {MEvent} from './mevent'\nimport $ from 'jquery'\n\nexport class Control {\n\n    static refreshFunction() {\n        Control.refreshCounter++;\n        let lang = ChartManager.instance.getLanguage();\n        if (Control.refreshCounter > 3600) {\n            let num = Number(Control.refreshCounter / 3600);\n            if (lang === \"en-us\") {\n                $(\"#chart_updated_time_text\").html(num.toFixed(0) + \"h\");\n            } else if (lang === \"zh-tw\") {\n                $(\"#chart_updated_time_text\").html(num.toFixed(0) + \"小時\");\n            } else {\n                $(\"#chart_updated_time_text\").html(num.toFixed(0) + \"小时\");\n            }\n        } else if (Control.refreshCounter > 60 && Control.refreshCounter <= 3600) {\n            let num = Number(Control.refreshCounter / 60);\n            if (lang === \"en-us\") {\n                $(\"#chart_updated_time_text\").html(num.toFixed(0) + \"m\");\n            } else if (lang === \"zh-tw\") {\n                $(\"#chart_updated_time_text\").html(num.toFixed(0) + \"分鐘\");\n            } else {\n                $(\"#chart_updated_time_text\").html(num.toFixed(0) + \"分钟\");\n            }\n        } else if (Control.refreshCounter <= 60) {\n            if (lang === \"en-us\") {\n                $(\"#chart_updated_time_text\").html(Control.refreshCounter + \"s\");\n            } else {\n                $(\"#chart_updated_time_text\").html(Control.refreshCounter + \"秒\");\n            }\n        }\n    }\n\n    static clearRefreshCounter() {\n        window.clearInterval(Control.refreshHandler);\n        Control.refreshCounter = 0;\n        let lang = ChartManager.instance.getLanguage();\n        if (lang === \"en-us\") {\n            $(\"#chart_updated_time_text\").html(Control.refreshCounter + \"s\");\n        } else {\n            $(\"#chart_updated_time_text\").html(Control.refreshCounter + \"秒\");\n        }\n        Control.refreshHandler = setInterval(Control.refreshFunction, Kline.instance.intervalTime);\n    }\n\n    static requestData(showLoading) {\n        window.clearTimeout(Kline.instance.timer);\n        if (showLoading === true) {\n            $(\"#chart_loading\").addClass(\"activated\");\n        }\n        Kline.instance.onRequestDataFunc(Kline.instance.requestParam,function(res){\n            if(res && res.success){\n                Control.requestSuccessHandler(res);\n            }else{\n                if (Kline.instance.debug) {\n                    console.log(res);\n                }\n                Kline.instance.timer = setTimeout(function () {\n                    Control.requestData(true);\n                }, Kline.instance.intervalTime);\n            }\n        })\n    }\n\n    static requestSuccessHandler(res) {\n        if (Kline.instance.debug) {\n            console.log(res);\n        }\n        $(\"#chart_loading\").removeClass(\"activated\");\n\n        let chart = ChartManager.instance.getChart();\n        chart.setTitle();\n        Kline.instance.data = eval(res.data);\n\n        let updateDataRes = Kline.instance.chartMgr.updateData(\"frame0.k0\", Kline.instance.data.lines);\n        Kline.instance.requestParam = Control.setHttpRequestParam(Kline.instance.symbol, Kline.instance.range, null, Kline.instance.chartMgr.getDataSource(\"frame0.k0\").getLastDate());\n\n        let intervalTime = Kline.instance.intervalTime < Kline.instance.range ? Kline.instance.intervalTime : Kline.instance.range;\n\n        if (!updateDataRes) {\n            Kline.instance.timer = setTimeout(Control.requestData, intervalTime);\n            return;\n        }\n\n        let tmp = ChartSettings.get();\n        //画深度图\n        if (Kline.instance.data.depths && tmp.charts.depthStatus===\"open\") {\n            ChartManager.instance.getChart().updateDepth(Kline.instance.data.depths);\n        }\n        Control.clearRefreshCounter();\n\n        Kline.instance.timer = setTimeout(Control.TwoSecondThread, intervalTime);\n        ChartManager.instance.redraw('All', false);\n    }\n\n    static TwoSecondThread() {\n        let f = Kline.instance.chartMgr.getDataSource(\"frame0.k0\").getLastDate();\n        if (f === -1) {\n            Kline.instance.requestParam = Control.setHttpRequestParam(Kline.instance.symbol, Kline.instance.range, Kline.instance.limit, null);\n        } else {\n            Kline.instance.requestParam = Control.setHttpRequestParam(Kline.instance.symbol, Kline.instance.range, null, f.toString());\n        }\n        Control.requestData();\n    }\n\n    static readCookie() {\n        ChartSettings.get();\n        ChartSettings.save();\n        let tmp = ChartSettings.get();\n        // 主图样式\n        let chart_style = $('#chart_select_chart_style');\n        chart_style.find('a').each(function () {\n            if ($(this)[0].innerHTML === tmp.charts.chartStyle) {\n                $(this).addClass('selected');\n            }else{\n                $(this).removeClass(\"selected\");\n            }\n        });\n        ChartManager.instance.setChartStyle('frame0.k0', tmp.charts.chartStyle);\n        // 交易品种\n        let symbol = tmp.charts.symbol;\n        if (!Kline.instance.init) {\n            symbol = Kline.instance.symbol;\n            Kline.instance.init = true;\n        }\n        Kline.instance.symbol = symbol;\n        Control.switchSymbolSelected(symbol);\n        // 周期\n        let period = tmp.charts.period;\n        Control.switchPeriod(period);\n        // 技术指标\n        if (tmp.charts.indicsStatus === 'close') {\n            Control.switchIndic('off');\n        } else if (tmp.charts.indicsStatus === 'open') {\n            Control.switchIndic('on');\n        }\n        // 主指标\n        let mainIndic = $('#chart_select_main_indicator');\n        mainIndic.find('a').each(function () {\n            if ($(this).attr('name') === tmp.charts.mIndic) {\n                $(this).addClass('selected');\n            }else{\n                $(this).removeClass(\"selected\");\n            }\n        });\n        ChartManager.instance.getChart().setMainIndicator(tmp.charts.mIndic);\n        // 主题\n        ChartManager.instance.setThemeName('frame0', tmp.theme);\n        // 画图工具\n        Control.switchTools('off');\n        if (tmp.theme === 'Dark') {\n            Control.switchTheme('dark');\n        } else if (tmp.theme === 'Light') {\n            Control.switchTheme('light');\n        }\n        // 语言\n        Control.chartSwitchLanguage(tmp.language || \"zh-cn\");\n        // 深度图\n        if(tmp.charts.depthStatus===\"close\"){\n            Control.switchDepth(\"off\")\n        }else if(tmp.charts.depthStatus===\"open\"){\n            Control.switchDepth(\"on\");\n        }\n    }\n\n    static setHttpRequestParam(symbol, range, limit, since) {\n        return {\n            symbol : symbol,\n            range : range,\n            limit : limit,\n            since : since\n        }\n    }\n\n    static refreshTemplate() {\n        Kline.instance.chartMgr = DefaultTemplate.loadTemplate(\"frame0.k0\", \"\");\n        ChartManager.instance.redraw('All', true);\n    }\n\n    static chartSwitchLanguage(lang) {\n        let langTmp = lang.replace(/-/, '_');\n        $('#chart_language_switch_tmp').find('span').each(function () {\n            let name = $(this).attr('name');\n            let attr = $(this).attr(langTmp);\n            name = '.' + name;\n            let obj = $(name)[0];\n\n            if (!obj)\n                return;\n            $(name).each(function () {\n\n                $(this)[0].innerHTML = attr;\n            });\n        });\n        $(\"#chart_language_setting_div li a[name='\" + lang + \"']\").addClass(\"selected\");\n        ChartManager.instance.setLanguage(lang);\n        ChartManager.instance.getChart().setTitle();\n        let tmp = ChartSettings.get();\n        tmp.language = lang;\n        ChartSettings.save();\n        Kline.instance.onLangChangeFunc(lang);\n    }\n\n    static onSize(w, h) {\n        let width = w || window.innerWidth;\n        let chartWidth=width;\n        let height = h || window.innerHeight;\n        let container = $(Kline.instance.element);\n        container.css({\n            width: width + 'px',\n            height: height + 'px'\n        });\n        let toolBar = $('#chart_toolbar');\n        let toolPanel = $('#chart_toolpanel');\n        let canvasGroup = $('#chart_canvasGroup');\n        let tabBar = $('#chart_tabbar');\n        let toolPanelShown = toolPanel[0].style.display !== 'inline' ? false : true;\n        let tabBarShown = tabBar[0].style.display !== 'block' ? false : true;\n        let toolBarRect = {};\n        toolBarRect.x = 0;\n        toolBarRect.y = 0;\n        toolBarRect.w = chartWidth;\n        toolBarRect.h = 29;\n        let toolPanelRect = {};\n        toolPanelRect.x = 0;\n        toolPanelRect.y = toolBarRect.h + 1;\n        toolPanelRect.w = toolPanelShown ? 32 : 0;\n        toolPanelRect.h = height - toolPanelRect.y;\n        let tabBarRect = {};\n        tabBarRect.w = toolPanelShown ? chartWidth - (toolPanelRect.w + 1 ) : chartWidth;\n        tabBarRect.h = tabBarShown ? 25 : -1;\n        tabBarRect.x = chartWidth - tabBarRect.w;\n        tabBarRect.y = height - (tabBarRect.h + 1 );\n        let canvasGroupRect = {};\n        canvasGroupRect.x = tabBarRect.x;\n        canvasGroupRect.y = toolPanelRect.y;\n        canvasGroupRect.w = tabBarRect.w;\n        canvasGroupRect.h = tabBarRect.y - toolPanelRect.y;\n        toolBar.css({\n            left: toolBarRect.x + 'px',\n            top: toolBarRect.y + 'px',\n            width: toolBarRect.w + 'px',\n            height: toolBarRect.h + 'px'\n        });\n        if (toolPanelShown) {\n            toolPanel.css({\n                left: toolPanelRect.x + 'px',\n                top: toolPanelRect.y + 'px',\n                width: toolPanelRect.w + 'px',\n                height: toolPanelRect.h + 'px'\n            });\n        }\n\n        canvasGroup.css({\n            left: canvasGroupRect.x + 'px',\n            top: canvasGroupRect.y + 'px',\n            // width: canvasGroupRect.w + 'px',\n            height: canvasGroupRect.h + 'px'\n        });\n        let mainCanvas = $('#chart_mainCanvas')[0];\n        let overlayCanvas = $('#chart_overlayCanvas')[0];\n        mainCanvas.width = canvasGroupRect.w;\n        mainCanvas.height = canvasGroupRect.h;\n        overlayCanvas.width = canvasGroupRect.w;\n        overlayCanvas.height = canvasGroupRect.h;\n        if (tabBarShown) {\n            tabBar.css({\n                left: tabBarRect.x + 'px',\n                top: tabBarRect.y + 'px',\n                width: tabBarRect.w + 'px',\n                height: tabBarRect.h + 'px'\n            });\n        }\n        let dlgSettings = $(\"#chart_parameter_settings\");\n        dlgSettings.css({\n            left: (chartWidth - dlgSettings.width()) >> 1,\n            top: (height - dlgSettings.height()) >> 1\n        });\n        let dlgLoading = $(\"#chart_loading\");\n        dlgLoading.css({\n            left: (chartWidth - dlgLoading.width()) >> 1,\n            top: (height - dlgLoading.height()) >> 2\n        });\n        let domElemCache = $('#chart_dom_elem_cache');\n        let rowTheme = $('#chart_select_theme')[0];\n        let rowTools = $('#chart_enable_tools')[0];\n        let rowIndic = $('#chart_enable_indicator')[0];\n        let symbolTitle=$(\"#symbol_title\")[0];\n        let periodsVert = $('#chart_toolbar_periods_vert');\n        let periodsHorz = $('#chart_toolbar_periods_horz')[0];\n        let showIndic = $('#chart_show_indicator')[0];\n        let showTools = $('#chart_show_tools')[0];\n        let selectTheme = $('#chart_toolbar_theme')[0];\n        let dropDownSettings = $('#chart_dropdown_settings');\n        let periodsVertNW = symbolTitle.offsetWidth + periodsVert[0].offsetWidth;\n        let periodsHorzNW = periodsVertNW + periodsHorz.offsetWidth;\n        let showIndicNW = periodsHorzNW + showIndic.offsetWidth + 4;\n        let showToolsNW = showIndicNW + showTools.offsetWidth + 4;\n        let selectThemeNW = showToolsNW + selectTheme.offsetWidth;\n        let dropDownSettingsW = dropDownSettings.find(\".chart_dropdown_t\")[0].offsetWidth + 300;\n        periodsVertNW += dropDownSettingsW;\n        periodsHorzNW += dropDownSettingsW;\n        showIndicNW += dropDownSettingsW;\n        showToolsNW += dropDownSettingsW;\n        selectThemeNW += dropDownSettingsW;\n        if (chartWidth < periodsHorzNW) {\n            domElemCache.append(periodsHorz);\n        } else {\n            periodsVert.after(periodsHorz);\n        }\n        if (chartWidth < showIndicNW) {\n            domElemCache.append(showIndic);\n            rowIndic.style.display = \"\";\n        } else {\n            dropDownSettings.before(showIndic);\n            rowIndic.style.display = \"none\";\n        }\n        if (chartWidth < showToolsNW) {\n            domElemCache.append(showTools);\n            rowTools.style.display = \"\";\n        } else {\n            dropDownSettings.before(showTools);\n            rowTools.style.display = \"none\";\n        }\n        if (chartWidth < selectThemeNW) {\n            domElemCache.append(selectTheme);\n            rowTheme.style.display = \"\";\n        } else {\n            dropDownSettings.before(selectTheme);\n            rowTheme.style.display = \"none\";\n        }\n\n        ChartManager.instance.redraw('All', true);\n        Kline.instance.onResizeFunc(width, height);\n    }\n\n    static mouseWheel(e, delta) {\n        ChartManager.instance.scale(delta > 0 ? 1 : -1);\n        ChartManager.instance.redraw(\"All\", true);\n        return false;\n    }\n\n    static switchTheme(name) {\n        $('#chart_toolbar_theme a').removeClass('selected');\n        $('#chart_select_theme a').removeClass('selected');\n        $('#chart_toolbar_theme').find('a').each(function () {\n            if ($(this).attr('name') === name) {\n                $(this).addClass('selected');\n            }\n        });\n        $('#chart_select_theme a').each(function () {\n            if ($(this).attr('name') === name) {\n                $(this).addClass('selected');\n            }\n        });\n        $(\".chart_container\").attr('class', \"chart_container \" + name);\n        $(\".marketName_ a\").attr('class', name);\n\n        if (name === 'dark') {\n            $(\".trade_container\").addClass(\"dark\").removeClass(\"light\");\n            ChartManager.instance.setThemeName('frame0', 'Dark');\n            let tmp = ChartSettings.get();\n            tmp.theme = 'Dark';\n            ChartSettings.save();\n        } else if (name === 'light') {\n            $(\".trade_container\").addClass(\"light\").removeClass(\"dark\");\n            ChartManager.instance.setThemeName('frame0', 'Light');\n            let tmp = ChartSettings.get();\n            tmp.theme = 'Light';\n            ChartSettings.save();\n        }\n        let a = {};\n        a.command = \"set current themes\";\n        a.content = name;\n        $('#chart_output_interface_text').val(JSON.stringify(a));\n        $('#chart_output_interface_submit').submit();\n        new MEvent().raise(name);\n        ChartManager.instance.redraw();\n\n        Kline.instance.onThemeChangeFunc(name);\n    }\n\n    static switchTools(name) {\n        $(\".chart_dropdown_data\").removeClass(\"chart_dropdown-hover\");\n        $(\"#chart_toolpanel .chart_toolpanel_button\").removeClass(\"selected\");\n        $('#chart_enable_tools a').removeClass('selected');\n        if (name === 'on') {\n            $('#chart_show_tools').addClass('selected');\n            $('#chart_enable_tools a').each(function () {\n                if ($(this).attr('name') === 'on') {\n                    $(this).addClass('selected');\n                }\n            });\n            $('#chart_toolpanel')[0].style.display = 'inline';\n            if (ChartManager.instance._drawingTool === ChartManager.DrawingTool.Cursor) {\n                $('#chart_Cursor').parent().addClass('selected');\n            } else if (ChartManager.instance._drawingTool === ChartManager.DrawingTool.CrossCursor) {\n                $('#chart_CrossCursor').parent().addClass('selected');\n            }\n        } else if (name === 'off') {\n            $('#chart_show_tools').removeClass('selected');\n            $('#chart_enable_tools a').each(function () {\n                if ($(this).attr('name') === 'off') {\n                    $(this).addClass('selected');\n                }\n            });\n            $('#chart_toolpanel')[0].style.display = 'none';\n            ChartManager.instance.setRunningMode(ChartManager.instance._beforeDrawingTool);\n            ChartManager.instance.redraw(\"All\", true);\n        }\n        if (Kline.instance.isSized) {\n            Control.onSize();\n        } else {\n            Control.onSize(Kline.instance.width, Kline.instance.height);\n        }\n    }\n\n    static switchIndic(name) {\n        $('#chart_enable_indicator a').removeClass('selected');\n        $(\"#chart_enable_indicator a[name='\" + name + \"']\").addClass('selected');\n        if (name === 'on') {\n            $('#chart_show_indicator').addClass('selected');\n            let tmp = ChartSettings.get();\n            tmp.charts.indicsStatus = 'open';\n            ChartSettings.save();\n            let value = tmp.charts.indics[1];\n            ChartManager.instance.getChart().setIndicator(1, value);\n            $(\"#chart_tabbar\").find('a').each(function () {\n                if ($(this).attr('name') === value)\n                    $(this).addClass('selected');\n            });\n            $('#chart_tabbar')[0].style.display = 'block';\n        } else if (name === 'off') {\n            $('#chart_show_indicator').removeClass('selected');\n            ChartManager.instance.getChart().setIndicator(2, 'NONE');\n            let tmp = ChartSettings.get();\n            tmp.charts.indicsStatus = 'close';\n            ChartSettings.save();\n            $('#chart_tabbar')[0].style.display = 'none';\n            $(\"#chart_tabbar a\").removeClass(\"selected\");\n        }\n        if (Kline.instance.isSized) {\n            Control.onSize();\n        } else {\n            Control.onSize(Kline.instance.width, Kline.instance.height);\n        }\n    }\n\n    static switchPeriod(name) {\n        $(\".chart_container .chart_toolbar_tabgroup a\").removeClass(\"selected\");\n        $(\"#chart_toolbar_periods_vert ul a\").removeClass(\"selected\");\n        $(\".chart_container .chart_toolbar_tabgroup a\").each(function () {\n            if ($(this).parent().attr('name') === name) {\n                $(this).addClass('selected');\n            }\n        });\n        $(\"#chart_toolbar_periods_vert ul a\").each(function () {\n            if ($(this).parent().attr('name') === name) {\n                $(this).addClass('selected');\n            }\n        });\n        ChartManager.instance.showCursor();\n        Control.calcPeriodWeight(name);\n        if (name === 'line') {\n            ChartManager.instance.getChart().strIsLine = true;\n            ChartManager.instance.setChartStyle('frame0.k0', 'Line');\n            ChartManager.instance.getChart().setCurrentPeriod('line');\n            let settings = ChartSettings.get();\n            settings.charts.period = name;\n            ChartSettings.save();\n            return;\n        }\n        ChartManager.instance.getChart().strIsLine = false;\n        let p = Kline.instance.tagMapPeriod[name];\n        ChartManager.instance.setChartStyle('frame0.k0', ChartSettings.get().charts.chartStyle);\n        ChartManager.instance.getChart().setCurrentPeriod(p);\n        let settings = ChartSettings.get();\n        settings.charts.period = name;\n        ChartSettings.save();\n    }\n\n    static switchDepth(name){\n        let tmp = ChartSettings.get();\n        if(name===\"on\"){\n            tmp.charts.depthStatus=\"open\";\n            $(\"#chart_show_depth\").addClass(\"selected\");\n            ChartManager.instance.getChart().updateDepth(Kline.instance.data.depths);\n        }else if(name===\"off\"){\n            tmp.charts.depthStatus=\"close\";\n            $(\"#chart_show_depth\").removeClass(\"selected\");\n            ChartManager.instance.getChart().updateDepth(null);\n        }\n        ChartSettings.save();\n    }\n\n    static reset(symbol) {\n        Kline.instance.symbol = symbol;\n    }\n\n    static switchSymbolSelected(symbol,symbolName) {\n        Control.reset(symbol);\n        $(\".symbol-title\").text(symbolName);\n        ChartManager.instance.getChart()._symbol = symbol;\n        let settings = ChartSettings.get();\n        settings.charts.symbol = symbol;\n        ChartSettings.save();\n    }\n\n    static switchSymbol(symbol,symbolName) {\n        if (Kline.instance.type === \"stomp\" && Kline.instance.stompClient.ws.readyState === 1) {\n            Kline.instance.subscribed.unsubscribe();\n            Kline.instance.subscribed = Kline.instance.stompClient.subscribe(Kline.instance.subscribePath + '/' + symbol + '/' + Kline.instance.range, Control.subscribeCallback);\n        }\n        Control.switchSymbolSelected(symbol,symbolName);\n        let settings = ChartSettings.get();\n        if (settings.charts.period === \"line\") {\n            ChartManager.instance.getChart().strIsLine = true;\n            ChartManager.instance.setChartStyle('frame0.k0', 'Line');\n        } else {\n            ChartManager.instance.getChart().strIsLine = false;\n            ChartManager.instance.setChartStyle('frame0.k0', ChartSettings.get().charts.chartStyle);\n        }\n        ChartManager.instance.getChart().setSymbol(symbol);\n    }\n\n    static calcPeriodWeight(period) {\n        let index = period;\n        if (period !== 'line')\n            index = Kline.instance.periodMap[Kline.instance.tagMapPeriod[period]];\n        let periodWeight = ChartSettings.get().charts.period_weight;\n        for (let i in periodWeight) {\n            if (periodWeight[i] > periodWeight[index]) {\n                periodWeight[i] -= 1;\n            }\n        }\n        periodWeight[index] = 8;\n        ChartSettings.save();\n    }\n}\n\nControl.refreshCounter = 0;\nControl.refreshHandler = null;\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/control.js","import {NamedObject} from './named_object'\nimport {ChartManager} from './chart_manager'\nimport {DataSource} from './data_sources'\n\nexport class Timeline extends NamedObject {\n\n    constructor(name) {\n        super(name);\n        this._updated = false;\n        this._innerLeft = 0;\n        this._innerWidth = 0;\n        this._firstColumnLeft = 0;\n        this._scale = 3;\n        this._lastScale = -1;\n        this._maxItemCount = 0;\n        this._maxIndex = 0;\n        this._firstIndex = -1;\n        this._selectedIndex = -1;\n        this._savedFirstIndex = -1;\n    }\n\n\n    isLatestShown() {\n        return this.getLastIndex() === this._maxIndex;\n    }\n\n    isUpdated() {\n        return this._updated;\n    }\n\n    setUpdated(v) {\n        this._updated = v;\n    }\n\n    getItemWidth() {\n        return Timeline.itemWidth[this._scale];\n    }\n\n    getSpaceWidth() {\n        return Timeline.spaceWidth[this._scale];\n    }\n\n    getColumnWidth() {\n        return this.getSpaceWidth() + this.getItemWidth();\n    }\n\n    getInnerWidth() {\n        return this._innerWidth;\n    }\n\n    getItemLeftOffset() {\n        return this.getSpaceWidth();\n    }\n\n    getItemCenterOffset() {\n        return this.getSpaceWidth() + (this.getItemWidth() >> 1);\n    }\n\n    getFirstColumnLeft() {\n        return this._firstColumnLeft;\n    }\n\n    getMaxItemCount() {\n        return this._maxItemCount;\n    }\n\n    getFirstIndex() {\n        return this._firstIndex;\n    }\n\n    getLastIndex() {\n        return Math.min(this._firstIndex + this._maxItemCount, this._maxIndex);\n    }\n\n    getSelectedIndex() {\n        return this._selectedIndex;\n    }\n\n    getMaxIndex() {\n        return this._maxIndex;\n    }\n\n    calcColumnCount(w) {\n        return Math.floor(w / this.getColumnWidth()) << 0;\n    }\n\n    calcFirstColumnLeft(maxItemCount) {\n        return this._innerLeft + this._innerWidth - (this.getColumnWidth() * maxItemCount);\n    }\n\n    calcFirstIndexAlignRight(oldFirstIndex, oldMaxItemCount, newMaxItemCount) {\n        return Math.max(0, oldFirstIndex + Math.max(oldMaxItemCount, 1) - Math.max(newMaxItemCount, 1));\n    }\n\n    calcFirstIndex(newMaxItemCount) {\n        return this.validateFirstIndex(\n            this.calcFirstIndexAlignRight(this._firstIndex, this._maxItemCount,\n                newMaxItemCount), newMaxItemCount);\n    }\n\n    updateMaxItemCount() {\n        let newMaxItemCount = this.calcColumnCount(this._innerWidth);\n        let newFirstIndex;\n        if (this._maxItemCount < 1) {\n            newFirstIndex = this.calcFirstIndex(newMaxItemCount);\n        } else if (this._lastScale === this._scale) {\n            newFirstIndex = this.validateFirstIndex(this._firstIndex - (newMaxItemCount - this._maxItemCount));\n        } else {\n            let focusedIndex = (this._selectedIndex >= 0) ? this._selectedIndex : this.getLastIndex() - 1;\n            newFirstIndex = this.validateFirstIndex(focusedIndex -\n                Math.round((focusedIndex - this._firstIndex) * newMaxItemCount / this._maxItemCount));\n        }\n        this._lastScale = this._scale;\n        if (this._firstIndex !== newFirstIndex) {\n            if (this._selectedIndex === this._firstIndex)\n                this._selectedIndex = newFirstIndex;\n            this._firstIndex = newFirstIndex;\n            this._updated = true;\n        }\n        if (this._maxItemCount !== newMaxItemCount) {\n            this._maxItemCount = newMaxItemCount;\n            this._updated = true;\n        }\n        this._firstColumnLeft = this.calcFirstColumnLeft(newMaxItemCount);\n    }\n\n    validateFirstIndex(firstIndex, maxItemCount) {\n        if (this._maxIndex < 1) {\n            return -1;\n        }\n        if (firstIndex < 0) {\n            return 0;\n        }\n        let lastFirst = Math.max(0, this._maxIndex - 1 /*maxItemCount*/);\n        if (firstIndex > lastFirst) {\n            return lastFirst;\n        }\n        return firstIndex;\n    }\n\n    validateSelectedIndex() {\n        if (this._selectedIndex < this._firstIndex)\n            this._selectedIndex = -1;\n        else if (this._selectedIndex >= this.getLastIndex())\n            this._selectedIndex = -1;\n    }\n\n    onLayout() {\n        let mgr = ChartManager.instance;\n        let area = mgr.getArea(this.getDataSourceName() + \".main\");\n        if (area !== null) {\n            this._innerLeft = area.getLeft() + Timeline.PADDING_LEFT;\n            let w = Math.max(0, area.getWidth() - (Timeline.PADDING_LEFT + Timeline.PADDING_RIGHT));\n            if (this._innerWidth !== w) {\n                this._innerWidth = w;\n                this.updateMaxItemCount();\n            }\n        }\n    }\n\n    toIndex(x) {\n        return this._firstIndex + this.calcColumnCount(x - this._firstColumnLeft);\n    }\n\n    toColumnLeft(index) {\n        return this._firstColumnLeft + (this.getColumnWidth() * (index - this._firstIndex));\n    }\n\n    toItemLeft(index) {\n        return this.toColumnLeft(index) + this.getItemLeftOffset();\n    }\n\n    toItemCenter(index) {\n        return this.toColumnLeft(index) + this.getItemCenterOffset();\n    }\n\n    selectAt(x) {\n        this._selectedIndex = this.toIndex(x);\n        this.validateSelectedIndex();\n        return (this._selectedIndex >= 0);\n    }\n\n    unselect() {\n        this._selectedIndex = -1;\n    }\n\n    update() {\n        let mgr = ChartManager.instance;\n        let ds = mgr.getDataSource(this.getDataSourceName());\n        let oldMaxIndex = this._maxIndex;\n        this._maxIndex = ds.getDataCount();\n        switch (ds.getUpdateMode()) {\n            case DataSource.UpdateMode.Refresh:\n                if (this._maxIndex < 1)\n                    this._firstIndex = -1;\n                else\n                    this._firstIndex = Math.max(this._maxIndex - this._maxItemCount, 0);\n                this._selectedIndex = -1;\n                this._updated = true;\n                break;\n            case DataSource.UpdateMode.Append:\n                let lastIndex = this.getLastIndex();\n                let erasedCount = ds.getErasedCount();\n                if (lastIndex < oldMaxIndex) {\n                    if (erasedCount > 0) {\n                        this._firstIndex = Math.max(this._firstIndex - erasedCount, 0);\n                        if (this._selectedIndex >= 0) {\n                            this._selectedIndex -= erasedCount;\n                            this.validateSelectedIndex();\n                        }\n                        this._updated = true;\n                    }\n                } else if (lastIndex === oldMaxIndex) {\n                    this._firstIndex += (this._maxIndex - oldMaxIndex);\n                    if (this._selectedIndex >= 0) {\n                        this._selectedIndex -= erasedCount;\n                        this.validateSelectedIndex();\n                    }\n                    this._updated = true;\n                }\n                break;\n        }\n    }\n\n    move(x) {\n        if (this.isLatestShown()) {\n            ChartManager.instance.getArea(this.getDataSourceName() + \".mainRange\").setChanged(true);\n        }\n        this._firstIndex = this.validateFirstIndex(\n            this._savedFirstIndex - this.calcColumnCount(x), this._maxItemCount);\n        this._updated = true;\n        if (this._selectedIndex >= 0)\n            this.validateSelectedIndex();\n    }\n\n    startMove() {\n        this._savedFirstIndex = this._firstIndex;\n    }\n\n    scale(s) {\n        this._scale += s;\n        if (this._scale < 0) {\n            this._scale = 0;\n        } else if (this._scale >= Timeline.itemWidth.length) {\n            this._scale = Timeline.itemWidth.length - 1;\n        }\n        this.updateMaxItemCount();\n        if (this._selectedIndex >= 0) {\n            this.validateSelectedIndex();\n        }\n    }\n\n}\nTimeline.itemWidth = [1, 3, 3, 5, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29];\nTimeline.spaceWidth = [1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 7, 7, 7];\nTimeline.PADDING_LEFT = 4;\nTimeline.PADDING_RIGHT = 8;\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/timeline.js","import * as areas from './areas'\nimport {ChartManager} from './chart_manager'\nimport * as themes from './themes'\nimport {ChartSettings} from './chart_settings'\nimport Kline from \"./kline\";\n\nexport class TableLayout extends areas.ChartAreaGroup {\n\n    constructor(name) {\n        super(name);\n        this._nextRowId = 0;\n        this._focusedRowIndex = -1;\n    }\n\n    getNextRowId() {\n        return this._nextRowId++;\n    }\n\n    measure(context, width, height) {\n        this.setMeasuredDimension(width, height);\n        let rowH, prevH = 0,\n            totalH = 0;\n        let h, rows;\n        let rh = [];\n        let i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i += 2) {\n            rowH = this._areas[i].getHeight();\n            if (rowH === 0) {\n                if (i === 0) {\n                    rows = (cnt + 1) >> 1;\n                    let n = (rows * 2) + 5;\n                    let nh = ((height / n) * 2) << 0;\n                    h = height;\n                    for (i = rows - 1; i > 0; i--) {\n                        rh.unshift(nh);\n                        h -= nh;\n                    }\n                    rh.unshift(h);\n                    break;\n                } else if (i === 2) {\n                    rowH = prevH / 3;\n                } else {\n                    rowH = prevH;\n                }\n            }\n            totalH += rowH;\n            prevH = rowH;\n            rh.push(rowH);\n        }\n        if (totalH > 0) {\n            let rate = height / totalH;\n            rows = (cnt + 1) >> 1;\n            h = height;\n            for (i = rows - 1; i > 0; i--) {\n                rh[i] *= rate;\n                h -= rh[i];\n            }\n            rh[0] = h;\n        }\n        let nw = 8;\n        // chart depths sidebar (深度图侧边栏宽度)\n        let tmp = ChartSettings.get();\n        let minRW = tmp.charts.depthStatus===\"open\" ? Kline.instance.depthWidth : 50;\n        let maxRW = Math.min(240, width >> 1);\n        let rw = minRW;\n        let mgr = ChartManager.instance;\n        let timeline = mgr.getTimeline(this.getDataSourceName());\n        if (timeline.getFirstIndex() >= 0) {\n            let firstIndexes = [];\n            for (rw = minRW; rw < maxRW; rw += nw) {\n                firstIndexes.push(timeline.calcFirstIndex(timeline.calcColumnCount(width - rw)));\n            }\n            let lastIndex = timeline.getLastIndex();\n            let dpNames = [\".main\", \".secondary\"];\n            let minmaxes = new Array(firstIndexes.length);\n            let iArea, iIndex;\n            for (iArea = 0, iIndex = 0, rw = minRW; iArea < this._areas.length && iIndex < firstIndexes.length; iArea += 2) {\n                let area = this._areas[iArea];\n                let plotter = mgr.getPlotter(area.getName() + \"Range.main\");\n                for (let iDp in dpNames) {\n                    let dp = mgr.getDataProvider(area.getName() + dpNames[iDp]);\n                    if (dp === undefined) {\n                        continue;\n                    }\n                    dp.calcRange(firstIndexes, lastIndex, minmaxes, null);\n                    while (iIndex < firstIndexes.length) {\n                        let minW = plotter.getRequiredWidth(context, minmaxes[iIndex].min);\n                        let maxW = plotter.getRequiredWidth(context, minmaxes[iIndex].max);\n                        if (Math.max(minW, maxW) < rw) {\n                            break;\n                        }\n                        iIndex++;\n                        rw += nw;\n                    }\n                }\n            }\n        }\n        for (i = 1; i < this._areas.length; i += 2) {\n            this._areas[i].measure(context, rw, rh[i >> 1]);\n        }\n        let lw = width - rw;\n        for (i = 0; i < this._areas.length; i += 2) {\n            this._areas[i].measure(context, lw, rh[i >> 1]);\n        }\n    }\n\n    layout(left, top, right, bottom, forceChange) {\n        super.layout(left, top, right, bottom, forceChange);\n        if (this._areas.length < 1)\n            return;\n        let area;\n        let center = left + this._areas[0].getMeasuredWidth();\n        let t = top,\n            b;\n        if (!forceChange)\n            forceChange = this.isChanged();\n        let i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++) {\n            area = this._areas[i];\n            b = t + area.getMeasuredHeight();\n            area.layout(left, t, center, b, forceChange);\n            i++;\n            area = this._areas[i];\n            area.layout(center, t, this.getRight(), b, forceChange);\n            t = b;\n        }\n        this.setChanged(false);\n    }\n\n    drawGrid(context) {\n        if (this._areas.length < 1) {\n            return;\n        }\n        let mgr = ChartManager.instance;\n        let theme = mgr.getTheme(this.getFrameName());\n        context.fillStyle = theme.getColor(themes.Theme.Color.Grid1);\n        context.fillRect(this._areas[0].getRight(), this.getTop(), 1, this.getHeight());\n        let i, cnt = this._areas.length - 2;\n        for (i = 0; i < cnt; i += 2)\n            context.fillRect(this.getLeft(), this._areas[i].getBottom(), this.getWidth(), 1);\n        if (!mgr.getCaptureMouseWheelDirectly()) {\n            for (i = 0, cnt += 2; i < cnt; i += 2) {\n                if (this._areas[i].isSelected()) {\n                    context.strokeStyle = theme.getColor(themes.Theme.Color.Indicator1);\n                    context.strokeRect(\n                        this.getLeft() + 0.5, this.getTop() + 0.5,\n                        this.getWidth() - 1, this.getHeight() - 1);\n                    break;\n                }\n            }\n        }\n    }\n\n    highlight(area) {\n        this._highlightedArea = null;\n        let e, i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++) {\n            e = this._areas[i];\n            if (e === area) {\n                i &= ~1;\n                e = this._areas[i];\n                e.highlight(e);\n                this._highlightedArea = e;\n                i++;\n                e = this._areas[i];\n                e.highlight(null);\n                e.highlight(e);\n            } else {\n                e.highlight(null);\n            }\n        }\n        return this._highlightedArea !== null ? this : null;\n    }\n\n    select(area) {\n        this._selectedArea = null;\n        let e, i, cnt = this._areas.length;\n        for (i = 0; i < cnt; i++) {\n            e = this._areas[i];\n            if (e === area) {\n                i &= ~1;\n                e = this._areas[i];\n                e.select(e);\n                this._selectedArea = e;\n                i++;\n                e = this._areas[i];\n                e.select(e);\n            } else {\n                e.select(null);\n            }\n        }\n        return this._selectedArea !== null ? this : null;\n    }\n\n    onMouseMove(x, y) {\n        if (this._focusedRowIndex >= 0) {\n            let upper = this._areas[this._focusedRowIndex];\n            let lower = this._areas[this._focusedRowIndex + 2];\n            let d = y - this._oldY;\n            if (d === 0)\n                return this;\n            let upperBottom = this._oldUpperBottom + d;\n            let lowerTop = this._oldLowerTop + d;\n            if (upperBottom - upper.getTop() >= 60 && lower.getBottom() - lowerTop >= 60) {\n                upper.setBottom(upperBottom);\n                lower.setTop(lowerTop);\n            }\n            return this;\n        }\n        let i, cnt = this._areas.length - 2;\n        for (i = 0; i < cnt; i += 2) {\n            let b = this._areas[i].getBottom();\n            if (y >= b - 4 && y < b + 4) {\n                ChartManager.instance.showCursor('n-resize');\n                return this;\n            }\n        }\n        return null;\n    }\n\n    onMouseLeave(x, y) {\n        this._focusedRowIndex = -1;\n    }\n\n    onMouseDown(x, y) {\n        let i, cnt = this._areas.length - 2;\n        for (i = 0; i < cnt; i += 2) {\n            let b = this._areas[i].getBottom();\n            if (y >= b - 4 && y < b + 4) {\n                this._focusedRowIndex = i;\n                this._oldY = y;\n                this._oldUpperBottom = b;\n                this._oldLowerTop = this._areas[i + 2].getTop();\n                return this;\n            }\n        }\n        return null;\n    }\n\n    onMouseUp(x, y) {\n        if (this._focusedRowIndex >= 0) {\n            this._focusedRowIndex = -1;\n            let i, cnt = this._areas.length;\n            let height = [];\n            for (i = 0; i < cnt; i += 2) {\n                height.push(this._areas[i].getHeight());\n            }\n            ChartSettings.get().charts.areaHeight = height;\n            ChartSettings.save();\n        }\n        return this;\n    }\n\n}\n\nexport class DockableLayout extends areas.ChartAreaGroup {\n\n    constructor(name) {\n        super(name);\n    }\n\n    measure(context, width, height) {\n        super.measure(context, width, height);\n        width = this.getMeasuredWidth();\n        height = this.getMeasuredHeight();\n        for (let i in this._areas) {\n            let area = this._areas[i];\n            area.measure(context, width, height);\n            switch (area.getDockStyle()) {\n                case areas.ChartArea.DockStyle.left:\n                case areas.ChartArea.DockStyle.Right:\n                    width -= area.getMeasuredWidth();\n                    break;\n                case areas.ChartArea.DockStyle.Top:\n                case areas.ChartArea.DockStyle.Bottom:\n                    height -= area.getMeasuredHeight();\n                    break;\n                case areas.ChartArea.DockStyle.Fill:\n                    width = 0;\n                    height = 0;\n                    break;\n            }\n        }\n    }\n\n    layout(left, top, right, bottom, forceChange) {\n        super.layout(left, top, right, bottom, forceChange);\n        left = this.getLeft();\n        top = this.getTop();\n        right = this.getRight();\n        bottom = this.getBottom();\n        let w, h;\n        if (!forceChange) {\n            forceChange = this.isChanged();\n        }\n        for (let i in this._areas) {\n            let area = this._areas[i];\n            switch (area.getDockStyle()) {\n                case areas.ChartArea.DockStyle.left:\n                    w = area.getMeasuredWidth();\n                    area.layout(left, top, left + w, bottom, forceChange);\n                    left += w;\n                    break;\n                case areas.ChartArea.DockStyle.Top:\n                    h = area.getMeasuredHeight();\n                    area.layout(left, top, right, top + h, forceChange);\n                    top += h;\n                    break;\n                case areas.ChartArea.DockStyle.Right:\n                    w = area.getMeasuredWidth();\n                    area.layout(right - w, top, right, bottom, forceChange);\n                    right -= w;\n                    break;\n                case areas.ChartArea.DockStyle.Bottom:\n                    h = area.getMeasuredHeight();\n                    area.layout(left, bottom - h, right, bottom, forceChange);\n                    bottom -= h;\n                    break;\n                case areas.ChartArea.DockStyle.Fill:\n                    area.layout(left, top, right, bottom, forceChange);\n                    left = right;\n                    top = bottom;\n                    break;\n            }\n        }\n        this.setChanged(false);\n    }\n\n    drawGrid(context) {\n        let mgr = ChartManager.instance;\n        let theme = mgr.getTheme(this.getFrameName());\n        let left = this.getLeft();\n        let top = this.getTop();\n        let right = this.getRight();\n        let bottom = this.getBottom();\n        context.fillStyle = theme.getColor(this._gridColor);\n        for (let i in this._areas) {\n            let area = this._areas[i];\n            switch (area.getDockStyle()) {\n                case areas.ChartArea.DockStyle.Left:\n                    context.fillRect(area.getRight(), top, 1, bottom - top);\n                    left += area.getWidth();\n                    break;\n                case areas.ChartArea.DockStyle.Top:\n                    context.fillRect(left, area.getBottom(), right - left, 1);\n                    top += area.getHeight();\n                    break;\n                case areas.ChartArea.DockStyle.Right:\n                    context.fillRect(area.getLeft(), top, 1, bottom - top);\n                    right -= area.getWidth();\n                    break;\n                case areas.ChartArea.DockStyle.Bottom:\n                    context.fillRect(left, area.getTop(), right - left, 1);\n                    bottom -= area.getHeight();\n                    break;\n            }\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/layouts.js","import {ChartManager} from './chart_manager'\nimport {ChartSettings} from './chart_settings'\nimport * as data_sources from './data_sources'\nimport * as data_providers from './data_providers'\nimport * as areas from './areas'\nimport * as plotters from './plotters'\nimport {Timeline} from './timeline'\nimport {CName} from './cname'\nimport * as layouts from './layouts'\nimport * as themes from './themes'\nimport * as ranges from './ranges'\n\nexport class Template {\n\n    static createCandlestickDataSource(dsAlias) {\n        return new data_sources.MainDataSource(dsAlias);\n    }\n\n    static createDataSource(dsName, dsAlias, createFunc) {\n        let mgr = ChartManager.instance;\n        if (mgr.getCachedDataSource(dsAlias) === null)\n            mgr.setCachedDataSource(dsAlias, createFunc(dsAlias));\n        mgr.setCurrentDataSource(dsName, dsAlias);\n        mgr.updateData(dsName, null);\n    }\n\n    static createTableComps(dsName) {\n        this.createMainChartComps(dsName);\n        this.createTimelineComps(dsName);\n    }\n\n    static createMainChartComps(dsName) {\n        let mgr = ChartManager.instance;\n        let tableLayout = mgr.getArea(dsName + \".charts\");\n        let areaName = dsName + \".main\";\n        let rangeAreaName = areaName + \"Range\";\n        let area = new areas.MainArea(areaName);\n        mgr.setArea(areaName, area);\n        tableLayout.addArea(area);\n        let rangeArea = new areas.MainRangeArea(rangeAreaName);\n        mgr.setArea(rangeAreaName, rangeArea);\n        tableLayout.addArea(rangeArea);\n        let dp = new data_providers.MainDataProvider(areaName + \".main\");\n        mgr.setDataProvider(dp.getName(), dp);\n        mgr.setMainIndicator(dsName, \"MA\");\n        let range = new ranges.MainRange(areaName);\n        mgr.setRange(range.getName(), range);\n        range.setPaddingTop(28);\n        range.setPaddingBottom(12);\n        let plotter = new plotters.MainAreaBackgroundPlotter(areaName + \".background\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.CGridPlotter(areaName + \".grid\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.CandlestickPlotter(areaName + \".main\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.MinMaxPlotter(areaName + \".decoration\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.MainInfoPlotter(areaName + \".info\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.SelectionPlotter(areaName + \".selection\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.CDynamicLinePlotter(areaName + \".tool\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.RangeAreaBackgroundPlotter(areaName + \"Range.background\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.COrderGraphPlotter(areaName + \"Range.grid\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.RangePlotter(areaName + \"Range.main\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.RangeSelectionPlotter(areaName + \"Range.selection\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.LastClosePlotter(areaName + \"Range.decoration\");\n        mgr.setPlotter(plotter.getName(), plotter);\n    }\n\n    static createIndicatorChartComps(dsName, indicName) {\n        let mgr = ChartManager.instance;\n        let tableLayout = mgr.getArea(dsName + \".charts\");\n        let areaName = dsName + \".indic\" + tableLayout.getNextRowId();\n        let rangeAreaName = areaName + \"Range\";\n        let area = new areas.IndicatorArea(areaName);\n        mgr.setArea(areaName, area);\n        tableLayout.addArea(area);\n        let rowIndex = tableLayout.getAreaCount() >> 1;\n        let heights = ChartSettings.get().charts.areaHeight;\n        if (heights.length > rowIndex) {\n            let a, i;\n            for (i = 0; i < rowIndex; i++) {\n                a = tableLayout.getAreaAt(i << 1);\n                a.setTop(0);\n                a.setBottom(heights[i]);\n            }\n            area.setTop(0);\n            area.setBottom(heights[rowIndex]);\n        }\n        let rangeArea = new areas.IndicatorRangeArea(rangeAreaName);\n        mgr.setArea(rangeAreaName, rangeArea);\n        tableLayout.addArea(rangeArea);\n        let dp = new data_providers.IndicatorDataProvider(areaName + \".secondary\");\n        mgr.setDataProvider(dp.getName(), dp);\n        if (mgr.setIndicator(areaName, indicName) === false) {\n            mgr.removeIndicator(areaName);\n            return;\n        }\n        let plotter = new plotters.MainAreaBackgroundPlotter(areaName + \".background\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.CGridPlotter(areaName + \".grid\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.IndicatorPlotter(areaName + \".secondary\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.IndicatorInfoPlotter(areaName + \".info\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.SelectionPlotter(areaName + \".selection\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.RangeAreaBackgroundPlotter(areaName + \"Range.background\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.RangePlotter(areaName + \"Range.main\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.RangeSelectionPlotter(areaName + \"Range.selection\");\n        mgr.setPlotter(plotter.getName(), plotter);\n    }\n\n    static createTimelineComps(dsName) {\n        let mgr = ChartManager.instance;\n        let plotter;\n        let timeline = new Timeline(dsName);\n        mgr.setTimeline(timeline.getName(), timeline);\n        plotter = new plotters.TimelineAreaBackgroundPlotter(dsName + \".timeline.background\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.TimelinePlotter(dsName + \".timeline.main\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.TimelineSelectionPlotter(dsName + \".timeline.selection\");\n        mgr.setPlotter(plotter.getName(), plotter);\n    }\n\n    static createLiveOrderComps(dsName) {\n        let mgr = ChartManager.instance;\n        let plotter;\n        plotter = new plotters.BackgroundPlotter(dsName + \".main.background\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.CLiveOrderPlotter(dsName + \".main.main\");\n        mgr.setPlotter(plotter.getName(), plotter);\n    }\n\n    static createLiveTradeComps(dsName) {\n        let mgr = ChartManager.instance;\n        let plotter;\n        plotter = new plotters.BackgroundPlotter(dsName + \".main.background\");\n        mgr.setPlotter(plotter.getName(), plotter);\n        plotter = new plotters.CLiveTradePlotter(dsName + \".main.main\");\n        mgr.setPlotter(plotter.getName(), plotter);\n    }\n\n}\n\nexport class DefaultTemplate extends Template {\n\n    static loadTemplate(dsName, dsAlias) {\n        let mgr = ChartManager.instance;\n        let settings = ChartSettings.get();\n        let frameName = (new CName(dsName)).getCompAt(0);\n        mgr.unloadTemplate(frameName);\n        this.createDataSource(dsName, dsAlias, this.createCandlestickDataSource);\n        let frame = new layouts.DockableLayout(frameName);\n        mgr.setFrame(frame.getName(), frame);\n        mgr.setArea(frame.getName(), frame);\n        frame.setGridColor(themes.Theme.Color.Grid1);\n        let area = new areas.TimelineArea(dsName + \".timeline\");\n        mgr.setArea(area.getName(), area);\n        frame.addArea(area);\n        area.setDockStyle(areas.ChartArea.DockStyle.Bottom);\n        area.Measuring.addHandler(area, TemplateMeasuringHandler.onMeasuring);\n        let tableLayout = new layouts.TableLayout(dsName + \".charts\");\n        mgr.setArea(tableLayout.getName(), tableLayout);\n        tableLayout.setDockStyle(areas.ChartArea.DockStyle.Fill);\n        frame.addArea(tableLayout);\n        this.createTableComps(dsName);\n        mgr.setThemeName(frameName, settings.theme);\n        return mgr;\n    }\n\n}\n\nexport class TemplateMeasuringHandler {\n\n    static onMeasuring(sender, args) {\n        let width = args.Width;\n        let height = args.Height;\n        let areaName = sender.getNameObject().getCompAt(2);\n        if (areaName === \"timeline\") {\n            sender.setMeasuredDimension(width, 22);\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/templates.js","import {ChartManager} from './chart_manager'\n\nexport class ChartSettings {\n\n    static checkVersion() {\n        if (ChartSettings._data.ver < 2) {\n            ChartSettings._data.ver = 2;\n            let charts = ChartSettings._data.charts;\n            charts.period_weight = {};\n            charts.period_weight['line'] = 8;\n            charts.period_weight['1min'] = 7;\n            charts.period_weight['5min'] = 6;\n            charts.period_weight['15min'] = 5;\n            charts.period_weight['30min'] = 4;\n            charts.period_weight['1hour'] = 3;\n            charts.period_weight['1day'] = 2;\n            charts.period_weight['1week'] = 1;\n            charts.period_weight['3min'] = 0;\n            charts.period_weight['2hour'] = 0;\n            charts.period_weight['4hour'] = 0;\n            charts.period_weight['6hour'] = 0;\n            charts.period_weight['12hour'] = 0;\n            charts.period_weight['3day'] = 0;\n        }\n        if (ChartSettings._data.ver < 3) {\n            ChartSettings._data.ver = 3;\n            let charts = ChartSettings._data.charts;\n            charts.areaHeight = [];\n        }\n    }\n\n    static get () {\n        if (ChartSettings._data === undefined) {\n            ChartSettings.init();\n            ChartSettings.load();\n            ChartSettings.checkVersion();\n        }\n        return ChartSettings._data;\n    };\n\n    static init() {\n        let _indic_param = {};\n        let _name = ['MA', 'EMA', 'VOLUME', 'MACD', 'KDJ', 'StochRSI', 'RSI', 'DMI', 'OBV', 'BOLL', 'DMA', 'TRIX', 'BRAR', 'VR', 'EMV', 'WR', 'ROC', 'MTM', 'PSY'];\n        for (let i = 0; i < _name.length; i++) {\n            let _value = ChartManager.instance.createIndicatorAndRange('', _name[i], true);\n            if (_value === null) continue;\n            _indic_param[_name[i]] = [];\n            let param = _value.indic.getParameters();\n            for (let j = 0; j < param.length; j++) {\n                _indic_param[_name[i]].push(param[j]);\n            }\n        }\n        let _chart_style = 'CandleStick';\n        let _m_indic = 'MA';\n        let _indic = ['VOLUME', 'VOLUME'];\n        let _range = '15m';\n        let _frame = {};\n        _frame.chartStyle = _chart_style;\n        _frame.mIndic = _m_indic;\n        _frame.indics = _indic;\n        _frame.indicsStatus = 'open';\n        _frame.period = _range;\n        _frame.depthStatus = 'close';\n        ChartSettings._data = {\n            ver: 1,\n            charts: _frame,\n            indics: _indic_param,\n            theme: \"Dark\"\n        };\n        ChartSettings.checkVersion();\n    }\n\n    static load() {\n        if (document.cookie.length <= 0)\n            return;\n        let start = document.cookie.indexOf(\"chartSettings=\");\n        if (start < 0)\n            return;\n        start += \"chartSettings=\".length;\n        let end = document.cookie.indexOf(\";\", start);\n        if (end < 0)\n            end = document.cookie.length;\n        let json = unescape(document.cookie.substring(start, end));\n        ChartSettings._data = JSON.parse(json);\n    }\n\n    static save() {\n        let exdate = new Date();\n        exdate.setDate(exdate.getDate() + 2);\n        document.cookie = \"chartSettings=\" + escape(JSON.stringify(ChartSettings._data)) +\n            \";expires=\" + exdate.toGMTString();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/chart_settings.js","export class ExprEnv {\n\n    static get () {\n        return this.inst;\n    }\n\n    static set (env) {\n        this.inst = env;\n    }\n\n     getDataSource() {\n        return this._ds;\n    }\n\n     setDataSource(ds) {\n        return this._ds = ds;\n    }\n\n     getFirstIndex() {\n        return this._firstIndex;\n    }\n\n     setFirstIndex(n) {\n        return this._firstIndex = n;\n    }\n\n}\nExprEnv.inst = null;\nExprEnv._ds = null;\nExprEnv._firstIndex = null;\n\n\nexport class Expr {\n    constructor() {\n        this._rid = 0;\n    }\n\n    execute(index) {\n    }\n\n    reserve(rid, count) {\n    }\n\n    clear() {\n    }\n}\n\n\nexport class OpenExpr extends Expr {\n\n    execute(index) {\n        return ExprEnv.get()._ds.getDataAt(index).open;\n    }\n\n}\n\n\nexport class HighExpr extends Expr {\n\n    execute(index) {\n        return ExprEnv.get()._ds.getDataAt(index).high;\n    }\n\n}\n\n\nexport class LowExpr extends Expr {\n\n    execute(index) {\n        return ExprEnv.get()._ds.getDataAt(index).low;\n    }\n\n}\n\n\nexport class CloseExpr extends Expr {\n\n    execute(index) {\n        return ExprEnv.get()._ds.getDataAt(index).close;\n    }\n\n}\n\n\nexport class VolumeExpr extends Expr {\n\n    execute(index) {\n        return ExprEnv.get()._ds.getDataAt(index).volume;\n    }\n\n}\n\n\nexport class ConstExpr extends Expr {\n\n    constructor(v) {\n        super();\n        this._value = v;\n    }\n\n    execute(index) {\n        return this._value;\n    }\n\n}\n\n\nexport class ParameterExpr extends Expr {\n\n    constructor(name, minValue, maxValue, defaultValue) {\n        super();\n        this._name = name;\n        this._minValue = minValue;\n        this._maxValue = maxValue;\n        this._value = this._defaultValue = defaultValue;\n    }\n\n    execute(index) {\n        return this._value;\n    }\n\n    getMinValue() {\n        return this._minValue;\n    }\n\n    getMaxValue() {\n        return this._maxValue;\n    }\n\n    getDefaultValue() {\n        return this._defaultValue;\n    }\n\n    getValue() {\n        return this._value;\n    }\n\n    setValue(v) {\n        if (v === 0)\n            this._value = 0;\n        else if (v < this._minValue)\n            this._value = this._minValue;\n        else if (v > this._maxValue)\n            this._value = this._maxValue;\n        else\n            this._value = v;\n    }\n\n}\n\n\nexport class OpAExpr extends Expr {\n\n    constructor(a) {\n        super();\n        this._exprA = a;\n    };\n\n    reserve(rid, count) {\n        if (this._rid < rid) {\n            this._rid = rid;\n            this._exprA.reserve(rid, count);\n        }\n    }\n\n    clear() {\n        this._exprA.clear();\n    }\n\n}\n\nexport class OpABExpr extends Expr {\n\n    constructor(a, b) {\n        super();\n        this._exprA = a;\n        this._exprB = b;\n    }\n\n    reserve(rid, count) {\n        if (this._rid < rid) {\n            this._rid = rid;\n            this._exprA.reserve(rid, count);\n            this._exprB.reserve(rid, count);\n        }\n    }\n\n    clear() {\n        this._exprA.clear();\n        this._exprB.clear();\n    }\n\n}\n\n\nexport class OpABCExpr extends Expr {\n\n    constructor(a, b, c) {\n        super();\n        this._exprA = a;\n        this._exprB = b;\n        this._exprC = c;\n    }\n\n\n    reserve(rid, count) {\n        if (this._rid < rid) {\n            this._rid = rid;\n            this._exprA.reserve(rid, count);\n            this._exprB.reserve(rid, count);\n            this._exprC.reserve(rid, count);\n        }\n    }\n\n    clear() {\n        this._exprA.clear();\n        this._exprB.clear();\n        this._exprC.clear();\n    };\n}\n\n\nexport class OpABCDExpr extends Expr {\n\n    constructor(a, b, c, d) {\n        super();\n        this._exprA = a;\n        this._exprB = b;\n        this._exprC = c;\n        this._exprD = d;\n    }\n\n    reserve(rid, count) {\n        if (this._rid < rid) {\n            this._rid = rid;\n            this._exprA.reserve(rid, count);\n            this._exprB.reserve(rid, count);\n            this._exprC.reserve(rid, count);\n            this._exprD.reserve(rid, count);\n        }\n    };\n\n    clear() {\n        this._exprA.clear();\n        this._exprB.clear();\n        this._exprC.clear();\n        this._exprD.clear();\n    }\n\n}\n\n\nexport class NegExpr extends OpAExpr {\n\n    constructor(a) {\n        super(a);\n    };\n\n    execute(index) {\n        return -(this._exprA.execute(index));\n    }\n\n}\n\n\nexport class AddExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) + this._exprB.execute(index);\n    }\n\n}\n\n\nexport class SubExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) - this._exprB.execute(index);\n    }\n\n}\n\n\nexport class MulExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) * this._exprB.execute(index);\n    }\n\n}\n\n\nexport class DivExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        let a = this._exprA.execute(index);\n        let b = this._exprB.execute(index);\n        if (a === 0)\n            return a;\n        if (b === 0)\n            return (a > 0) ? 1000000 : -1000000;\n        return a / b;\n    }\n\n}\n\n\nexport class GtExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) > this._exprB.execute(index) ? 1 : 0;\n    }\n\n}\n\n\nexport class GeExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) >= this._exprB.execute(index) ? 1 : 0;\n    }\n\n}\n\n\nexport class LtExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) < this._exprB.execute(index) ? 1 : 0;\n    }\n\n}\n\n\nexport class LeExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) <= this._exprB.execute(index) ? 1 : 0;\n    }\n\n}\n\n\nexport class EqExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) === this._exprB.execute(index) ? 1 : 0;\n    }\n\n}\n\n\nexport class MaxExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return Math.max(this._exprA.execute(index), this._exprB.execute(index));\n    }\n\n}\n\n\nexport class AbsExpr extends OpAExpr {\n\n    constructor(a) {\n        super(a);\n    }\n\n    execute(index) {\n        return Math.abs(this._exprA.execute(index));\n    }\n\n}\n\n\nexport class RefExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        if (this._offset === undefined || this._offset < 0) {\n            this._offset = this._exprB.execute(index);\n            if (this._offset < 0) {\n                throw \"offset < 0\";\n            }\n        }\n        index -= this._offset;\n        if (index < 0) {\n            throw \"index < 0\";\n        }\n        let result = this._exprA.execute(index);\n        if (isNaN(result)) {\n            throw \"NaN\";\n        }\n        return result;\n    }\n\n}\n\n\nexport class AndExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return (this._exprA.execute(index) !== 0) && (this._exprB.execute(index) !== 0) ? 1 : 0;\n    }\n\n}\n\n\nexport class OrExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    execute(index) {\n        return (this._exprA.execute(index) !== 0) || (this._exprB.execute(index) !== 0) ? 1 : 0;\n    }\n\n}\n\n\nexport class IfExpr extends OpABCExpr {\n\n    constructor(a, b, c) {\n        super(a, b, c);\n    }\n\n    execute(index) {\n        return this._exprA.execute(index) !== 0 ? this._exprB.execute(index) : this._exprC.execute(index);\n    }\n\n}\n\n\nexport class AssignExpr extends OpAExpr {\n\n    constructor(name, a) {\n        super(a);\n        this._name = name;\n        this._buf = [];\n    }\n\n    getName() {\n        return this._name;\n    }\n\n    execute(index) {\n        return this._buf[index];\n    }\n\n    assign(index) {\n        this._buf[index] = this._exprA.execute(index);\n        if (ExprEnv.get()._firstIndex >= 0) {\n            if (isNaN(this._buf[index]) && !isNaN(this._buf[index - 1])) {\n                throw this._name + \".assign(\" + index + \"): NaN\";\n            }\n        }\n    }\n\n    reserve(rid, count) {\n        if (this._rid < rid) {\n            for (let c = count; c > 0; c--) {\n                this._buf.push(NaN);\n            }\n        }\n        super.reserve(rid, count);\n    }\n\n    clear() {\n        super.clear();\n        this._buf = [];\n    }\n\n}\n\n\nexport class OutputExpr extends AssignExpr {\n\n    constructor(name, a, style, color) {\n        super(name, a);\n        this._style = (style === undefined) ? OutputExpr.outputStyle.Line : style;\n        this._color = color;\n    }\n\n\n    getStyle() {\n        return this._style;\n    }\n\n    getColor() {\n        return this._color;\n    }\n\n}\nOutputExpr.outputStyle = {\n    None: 0,\n    Line: 1,\n    VolumeStick: 2,\n    MACDStick: 3,\n    SARPoint: 4\n};\n\n\nexport class RangeOutputExpr extends OutputExpr {\n\n    constructor(name, a, style, color) {\n        super(name, a, style, color);\n    }\n\n    getName() {\n        return this._name + this._exprA.getRange();\n    }\n\n}\n\n\nexport class RangeExpr extends OpABExpr {\n\n    constructor(a, b) {\n        super(a, b);\n        this._range = -1;\n        this._buf = [];\n    }\n\n    getRange() {\n        return this._range;\n    }\n\n    initRange() {\n        this._range = this._exprB.execute(0);\n    }\n\n    execute(index) {\n        if (this._range < 0) {\n            this.initRange();\n        }\n        let rA = this._buf[index].resultA = this._exprA.execute(index);\n        return this._buf[index].result = this.calcResult(index, rA);\n    }\n\n    reserve(rid, count) {\n        if (this._rid < rid) {\n            for (let c = count; c > 0; c--) {\n                this._buf.push({resultA: NaN, result: NaN});\n            }\n        }\n        super.reserve(rid, count);\n    }\n\n    clear() {\n        super.clear();\n        this._range = -1;\n        this._buf = [];\n    }\n\n}\n\n\nexport class HhvExpr extends RangeExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    calcResult(index, resultA) {\n        if (this._range === 0) {\n            return NaN;\n        }\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0) {\n            return resultA;\n        }\n        if (index > first) {\n            let n = this._range;\n            let result = resultA;\n            let start = index - n + 1;\n            let i = Math.max(first, start);\n            for (; i < index; i++) {\n                let p = this._buf[i];\n                if (result < p.resultA) {\n                    result = p.resultA;\n                }\n            }\n            return result;\n        } else {\n            return resultA;\n        }\n    }\n\n}\n\n\nexport class LlvExpr extends RangeExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    calcResult(index, resultA) {\n        if (this._range === 0)\n            return NaN;\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0)\n            return resultA;\n        if (index > first) {\n            let n = this._range;\n            let result = resultA;\n            let start = index - n + 1;\n            let i = Math.max(first, start);\n            for (; i < index; i++) {\n                let p = this._buf[i];\n                if (result > p.resultA)\n                    result = p.resultA;\n            }\n            return result;\n        } else {\n            return resultA;\n        }\n    }\n}\n\n\nexport class CountExpr extends RangeExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    calcResult(index, resultA) {\n        if (this._range === 0)\n            return NaN;\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0)\n            return 0;\n        if (index >= first) {\n            let n = this._range - 1;\n            if (n > index - first)\n                n = index - first;\n            let count = 0;\n            for (; n >= 0; n--) {\n                if (this._buf[index - n].resultA !== 0.0)\n                    count++;\n            }\n            return count;\n        } else {\n            return 0;\n        }\n    }\n\n}\n\n\nexport class SumExpr extends RangeExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    calcResult(index, resultA) {\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0)\n            return resultA;\n        if (index > first) {\n            let n = this._range;\n            if (n === 0 || n >= index + 1 - first) {\n                return this._buf[index - 1].result + resultA;\n            }\n            return this._buf[index - 1].result + resultA - this._buf[index - n].resultA;\n        } else {\n            return resultA;\n        }\n    }\n\n}\n\n\nexport class StdExpr extends RangeExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    calcResult(index, resultA) {\n        if (this._range === 0)\n            return NaN;\n        let stdData = this._stdBuf[index];\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0) {\n            stdData.resultMA = resultA;\n            return 0.0;\n        }\n        if (index > first) {\n            let n = this._range;\n            if (n >= index + 1 - first) {\n                n = index + 1 - first;\n                stdData.resultMA = this._stdBuf[index - 1].resultMA * (1.0 - 1.0 / n) + (resultA / n);\n            } else {\n                stdData.resultMA = this._stdBuf[index - 1].resultMA + (resultA - this._buf[index - n].resultA) / n;\n            }\n            let sum = 0;\n            for (let i = index - n + 1; i <= index; i++)\n                sum += Math.pow(this._buf[i].resultA - stdData.resultMA, 2);\n            return Math.sqrt(sum / n);\n        }\n        stdData.resultMA = resultA;\n        return 0.0;\n    }\n\n    reserve(rid, count) {\n        if (this._rid < rid) {\n            for (let c = count; c > 0; c--)\n                this._stdBuf.push({resultMA: NaN});\n        }\n        super.reserve(rid, count);\n    }\n\n    clear() {\n        super.clear();\n        this._stdBuf = [];\n    }\n\n}\n\n\nexport class MaExpr extends RangeExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    calcResult(index, resultA) {\n        if (this._range === 0)\n            return NaN;\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0)\n            return resultA;\n        if (index > first) {\n            let n = this._range;\n            if (n >= index + 1 - first) {\n                n = index + 1 - first;\n                return this._buf[index - 1].result * (1.0 - 1.0 / n) + (resultA / n);\n            }\n            return this._buf[index - 1].result + (resultA - this._buf[index - n].resultA) / n;\n        } else {\n            return resultA;\n        }\n    }\n\n}\n\n\nexport class EmaExpr extends RangeExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    }\n\n    initRange() {\n        super.initRange();\n        this._alpha = 2.0 / (this._range + 1);\n    }\n\n    calcResult(index, resultA) {\n        if (this._range === 0)\n            return NaN;\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0)\n            return resultA;\n        if (index > first) {\n            let prev = this._buf[index - 1];\n            return this._alpha * (resultA - prev.result) + prev.result;\n        }\n        return resultA;\n    }\n\n}\n\n\nexport class ExpmemaExpr extends EmaExpr {\n\n    constructor(a, b) {\n        super(a, b);\n    };\n\n    calcResult(index, resultA) {\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0)\n            return resultA;\n        if (index > first) {\n            let n = this._range;\n            let prev = this._buf[index - 1];\n            if (n >= index + 1 - first) {\n                n = index + 1 - first;\n                return prev.result * (1.0 - 1.0 / n) + (resultA / n);\n            }\n            return this._alpha * (resultA - prev.result) + prev.result;\n        }\n        return resultA;\n    }\n\n}\n\n\nexport class SmaExpr extends RangeExpr {\n\n    constructor(a, b, c) {\n        super(a, b);\n        this._exprC = c;\n        this._mul = null;\n    }\n\n    initRange() {\n        super.initRange();\n        this._mul = this._exprC.execute(0);\n    }\n\n    calcResult(index, resultA) {\n        if (this._range === 0)\n            return NaN;\n        let first = ExprEnv.get()._firstIndex;\n        if (first < 0)\n            return resultA;\n        if (index > first) {\n            let n = this._range;\n            if (n > index + 1 - first)\n                n = index + 1 - first;\n            return ((n - 1) * this._buf[index - 1].result + resultA * this._mul) / n;\n        }\n        return resultA;\n    }\n}\n\n\nexport class SarExpr extends OpABCDExpr {\n\n    constructor(a, b, c, d) {\n        super(a, b, c, d);\n        this._buf = [];\n        this._range = -1;\n        this._min = null;\n        this._step = null;\n        this._max = null;\n    }\n\n    execute(index) {\n        if (this._range < 0) {\n            this._range = this._exprA.execute(0);\n            this._min = this._exprB.execute(0) / 100.0;\n            this._step = this._exprC.execute(0) / 100.0;\n            this._max = this._exprD.execute(0) / 100.0;\n        }\n        let data = this._buf[index];\n        let exprEnv = ExprEnv.get();\n        let first = exprEnv._firstIndex;\n        if (first < 0) {\n            data.longPos = true;\n            data.sar = exprEnv._ds.getDataAt(index).low;\n            data.ep = exprEnv._ds.getDataAt(index).high;\n            data.af = 0.02;\n        } else {\n            let high = exprEnv._ds.getDataAt(index).high;\n            let low = exprEnv._ds.getDataAt(index).low;\n            let prev = this._buf[index - 1];\n            data.sar = prev.sar + prev.af * (prev.ep - prev.sar);\n            if (prev.longPos) {\n                data.longPos = true;\n                if (high > prev.ep) {\n                    data.ep = high;\n                    data.af = Math.min(prev.af + this._step, this._max);\n                } else {\n                    data.ep = prev.ep;\n                    data.af = prev.af;\n                }\n                if (data.sar > low) {\n                    data.longPos = false;\n                    let i = index - this._range + 1;\n                    for (i = Math.max(i, first); i < index; i++) {\n                        let h = exprEnv._ds.getDataAt(i).high;\n                        if (high < h) high = h;\n                    }\n                    data.sar = high;\n                    data.ep = low;\n                    data.af = 0.02;\n                }\n            } else {\n                data.longPos = false;\n                if (low < prev.ep) {\n                    data.ep = low;\n                    data.af = Math.min(prev.af + this._step, this._max);\n                } else {\n                    data.ep = prev.ep;\n                    data.af = prev.af;\n                }\n                if (data.sar < high) {\n                    data.longPos = true;\n                    let i = index - this._range + 1;\n                    for (i = Math.max(i, first); i < index; i++) {\n                        let l = exprEnv._ds.getDataAt(i).low;\n                        if (low > l) low = l;\n                    }\n                    data.sar = low;\n                    data.ep = high;\n                    data.af = 0.02;\n                }\n            }\n        }\n        return data.sar;\n    }\n\n    reserve(rid, count) {\n        if (this._rid < rid) {\n            for (let c = count; c > 0; c--)\n                this._buf.push({longPos: true, sar: NaN, ep: NaN, af: NaN});\n        }\n        super.reserve(rid, count);\n    }\n\n    clear() {\n        super.clear();\n        this._range = -1;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/kline/js/exprs.js"],"sourceRoot":""}